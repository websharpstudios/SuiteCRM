(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('rxjs'), require('rxjs/operators'), require('apollo-angular'), require('graphql-tag'), require('common'), require('@angular/router'), require('@angular/common'), require('@angular/forms'), require('angular-svg-icon'), require('@angular/cdk/layout'), require('@ng-bootstrap/ng-bootstrap'), require('lodash-es/partial'), require('@swimlane/ngx-charts'), require('ng-dynamic-component'), require('@angular/cdk/drag-drop'), require('luxon'), require('lodash-es/get'), require('mathjs'), require('ngx-chips'), require('@angular/animations'), require('lodash-es/isObjectLike'), require('lodash-es/set'), require('@angular/common/http'), require('bn-ng-idle'), require('ng-animate'), require('@angular/cdk/observers'), require('lodash-es/defaults'), require('@angular/cdk/table'), require('lodash-es'), require('@angular/cdk/scrolling'), require('@angular/platform-browser'), require('@angular-architects/module-federation')) :
    typeof define === 'function' && define.amd ? define('core', ['exports', '@angular/core', 'rxjs', 'rxjs/operators', 'apollo-angular', 'graphql-tag', 'common', '@angular/router', '@angular/common', '@angular/forms', 'angular-svg-icon', '@angular/cdk/layout', '@ng-bootstrap/ng-bootstrap', 'lodash-es/partial', '@swimlane/ngx-charts', 'ng-dynamic-component', '@angular/cdk/drag-drop', 'luxon', 'lodash-es/get', 'mathjs', 'ngx-chips', '@angular/animations', 'lodash-es/isObjectLike', 'lodash-es/set', '@angular/common/http', 'bn-ng-idle', 'ng-animate', '@angular/cdk/observers', 'lodash-es/defaults', '@angular/cdk/table', 'lodash-es', '@angular/cdk/scrolling', '@angular/platform-browser', '@angular-architects/module-federation'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.core = {}, global.ng.core, global.rxjs, global.rxjs.operators, global.i1, global.gql, global.i5, global.ng.router, global.ng.common, global.ng.forms, global.i3, global.ng.cdk.layout, global.i1$2, global.partial, global.ngxCharts, global.ngDynamicComponent, global.ng.cdk.dragDrop, global.luxon, global.get, global.mathjs, global.ngxChips, global.ng.animations, global.isObjectLike, global.set, global.ng.common.http, global.i6, global.ngAnimate, global.ng.cdk.observers, global.defaults, global.ng.cdk.table, global.lodashEs, global.ng.cdk.scrolling, global.ng.platformBrowser, global.moduleFederation));
}(this, (function (exports, i0, rxjs, operators, i1, gql, i5, i2, common, forms, i3, i1$1, i1$2, partial, ngxCharts, ngDynamicComponent, dragDrop, luxon, get, mathjs, ngxChips, animations, isObjectLike, set, i1$3, i6, ngAnimate, observers, defaults, table, lodashEs, scrolling, platformBrowser, moduleFederation) { 'use strict';

    function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () {
                            return e[k];
                        }
                    });
                }
            });
        }
        n['default'] = e;
        return Object.freeze(n);
    }

    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
    var i1__namespace = /*#__PURE__*/_interopNamespace(i1);
    var gql__default = /*#__PURE__*/_interopDefaultLegacy(gql);
    var i5__namespace = /*#__PURE__*/_interopNamespace(i5);
    var i2__namespace = /*#__PURE__*/_interopNamespace(i2);
    var i3__namespace = /*#__PURE__*/_interopNamespace(i3);
    var i1__namespace$1 = /*#__PURE__*/_interopNamespace(i1$1);
    var i1__namespace$3 = /*#__PURE__*/_interopNamespace(i1$2);
    var partial__default = /*#__PURE__*/_interopDefaultLegacy(partial);
    var get__default = /*#__PURE__*/_interopDefaultLegacy(get);
    var isObjectLike__default = /*#__PURE__*/_interopDefaultLegacy(isObjectLike);
    var set__default = /*#__PURE__*/_interopDefaultLegacy(set);
    var i1__namespace$2 = /*#__PURE__*/_interopNamespace(i1$3);
    var i6__namespace = /*#__PURE__*/_interopNamespace(i6);
    var defaults__default = /*#__PURE__*/_interopDefaultLegacy(defaults);

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (Object.prototype.hasOwnProperty.call(b, p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };
    function __rest(s, e) {
        var t = {};
        for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
                t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }
    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
            r = Reflect.decorate(decorators, target, key, desc);
        else
            for (var i = decorators.length - 1; i >= 0; i--)
                if (d = decorators[i])
                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }
    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); };
    }
    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
            return Reflect.metadata(metadataKey, metadataValue);
    }
    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }
    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function () { if (t[0] & 1)
                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f)
                throw new TypeError("Generator is already executing.");
            while (_)
                try {
                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                        return t;
                    if (y = 0, t)
                        op = [op[0] & 2, t.value];
                    switch (op[0]) {
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return { value: op[1], done: false };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [0];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2])
                                _.ops.pop();
                            _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                }
                catch (e) {
                    op = [6, e];
                    y = 0;
                }
                finally {
                    f = t = 0;
                }
            if (op[0] & 5)
                throw op[1];
            return { value: op[0] ? op[1] : void 0, done: true };
        }
    }
    var __createBinding = Object.create ? (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });
    }) : (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        o[k2] = m[k];
    });
    function __exportStar(m, o) {
        for (var p in m)
            if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p))
                __createBinding(o, m, p);
    }
    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m)
            return m.call(o);
        if (o && typeof o.length === "number")
            return {
                next: function () {
                    if (o && i >= o.length)
                        o = void 0;
                    return { value: o && o[i++], done: !o };
                }
            };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    /** @deprecated */
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }
    /** @deprecated */
    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++)
            s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }
    function __spreadArray(to, from, pack) {
        if (pack || arguments.length === 2)
            for (var i = 0, l = from.length, ar; i < l; i++) {
                if (ar || !(i in from)) {
                    if (!ar)
                        ar = Array.prototype.slice.call(from, 0, i);
                    ar[i] = from[i];
                }
            }
        return to.concat(ar || Array.prototype.slice.call(from));
    }
    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }
    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n])
            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try {
            step(g[n](v));
        }
        catch (e) {
            settle(q[0][3], e);
        } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length)
            resume(q[0][0], q[0][1]); }
    }
    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }
    function __asyncValues(o) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
    }
    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) {
            Object.defineProperty(cooked, "raw", { value: raw });
        }
        else {
            cooked.raw = raw;
        }
        return cooked;
    }
    ;
    var __setModuleDefault = Object.create ? (function (o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function (o, v) {
        o["default"] = v;
    };
    function __importStar(mod) {
        if (mod && mod.__esModule)
            return mod;
        var result = {};
        if (mod != null)
            for (var k in mod)
                if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
                    __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    }
    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }
    function __classPrivateFieldGet(receiver, state, kind, f) {
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    }
    function __classPrivateFieldSet(receiver, state, value, kind, f) {
        if (kind === "m")
            throw new TypeError("Private method is not writable");
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
    }

    var EntityGQL = /** @class */ (function () {
        function EntityGQL(apollo) {
            this.apollo = apollo;
        }
        /**
         * Fetch data either from backend or cache
         *
         * @param {string} entity to get from
         * @param {string} id of the record
         * @param {object} metadata with the fields to ask for
         *
         * @returns {object}  Observable<ApolloQueryResult<any>>
         */
        EntityGQL.prototype.fetch = function (entity, id, metadata) {
            var fields = metadata.fields;
            var queryOptions = {
                query: gql__default['default'](templateObject_1$6 || (templateObject_1$6 = __makeTemplateObject(["\n              query ", "($id: ID!) {\n                ", "(id: $id) {\n                  ", "\n                }\n              }\n            "], ["\n              query ", "($id: ID!) {\n                ", "(id: $id) {\n                  ", "\n                }\n              }\n            "])), entity, entity, fields.join('\n')),
                variables: {
                    id: id,
                },
            };
            return this.apollo.query(queryOptions);
        };
        return EntityGQL;
    }());
    EntityGQL.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function EntityGQL_Factory() { return new EntityGQL(i0__namespace.ɵɵinject(i1__namespace.Apollo)); }, token: EntityGQL, providedIn: "root" });
    EntityGQL.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    EntityGQL.ctorParameters = function () { return [
        { type: i1.Apollo }
    ]; };
    var templateObject_1$6;

    var initialState$i = {
        loading: false,
        module: null,
        view: null,
        loaded: false,
        routeUrl: null
    };
    var internalState$6 = i5.deepClone(initialState$i);
    var AppStateStore = /** @class */ (function () {
        function AppStateStore() {
            this.store = new rxjs.BehaviorSubject(internalState$6);
            this.state$ = this.store.asObservable();
            this.loadingQueue = {};
            this.loading$ = this.state$.pipe(operators.map(function (state) { return state.loading; }), operators.distinctUntilChanged());
            this.module$ = this.state$.pipe(operators.map(function (state) { return state.module; }), operators.distinctUntilChanged());
            this.view$ = this.state$.pipe(operators.map(function (state) { return state.view; }), operators.distinctUntilChanged());
            this.vm$ = rxjs.combineLatest([this.loading$, this.module$, this.view$]).pipe(operators.map(function (_a) {
                var _b = __read(_a, 3), loading = _b[0], module = _b[1], view = _b[2];
                return ({ loading: loading, module: module, view: view, loaded: internalState$6.loaded });
            }));
            this.updateState(Object.assign(Object.assign({}, internalState$6), { loading: false }));
        }
        /**
         * Public Api
         */
        /**
         * Clear state
         */
        AppStateStore.prototype.clear = function () {
            this.loadingQueue = {};
            this.updateState(i5.deepClone(initialState$i));
        };
        AppStateStore.prototype.clearAuthBased = function () {
        };
        /**
         * Update loading status for given key
         *
         * @param {string} key to update
         * @param {string} loading status to set
         */
        AppStateStore.prototype.updateLoading = function (key, loading) {
            if (loading === true) {
                this.addToLoadingQueue(key);
                this.updateState(Object.assign(Object.assign({}, internalState$6), { loading: loading }));
                return;
            }
            this.removeFromLoadingQueue(key);
            if (this.hasActiveLoading()) {
                this.updateState(Object.assign(Object.assign({}, internalState$6), { loading: loading }));
            }
        };
        /**
         * Has app been initially loaded
         *
         * @returns {boolean} is loaded
         */
        AppStateStore.prototype.isLoaded = function () {
            return internalState$6.loaded;
        };
        /**
         * Set initial app load status
         *
         * @param {string} loaded flag
         */
        AppStateStore.prototype.setLoaded = function (loaded) {
            this.updateState(Object.assign(Object.assign({}, internalState$6), { loaded: loaded }));
        };
        /**
         * Set current module
         *
         * @param {string} module to set as current module
         */
        AppStateStore.prototype.setModule = function (module) {
            this.updateState(Object.assign(Object.assign({}, internalState$6), { module: module }));
        };
        /**
         * Get the current module
         *
         * @returns {string} current view
         */
        AppStateStore.prototype.getModule = function () {
            return internalState$6.module;
        };
        /**
         * Set current View
         *
         * @param {string} view to set as current view
         */
        AppStateStore.prototype.setView = function (view) {
            this.updateState(Object.assign(Object.assign({}, internalState$6), { view: view }));
        };
        /**
         * Get the current view
         *
         * @returns {string} current view
         */
        AppStateStore.prototype.getView = function () {
            return internalState$6.view;
        };
        /**
         * Set route url
         *
         * @param {string} routeUrl to set
         */
        AppStateStore.prototype.setRouteUrl = function (routeUrl) {
            this.updateState(Object.assign(Object.assign({}, internalState$6), { routeUrl: routeUrl }));
        };
        /**
         * Get the route ulr
         *
         * @returns {string} current route url
         */
        AppStateStore.prototype.getRouteUrl = function () {
            return internalState$6.routeUrl;
        };
        /**
         * Internal API
         */
        /**
         *  Check if there are still active loadings
         *
         *  @returns {boolean} active loading
         */
        AppStateStore.prototype.hasActiveLoading = function () {
            return Object.keys(this.loadingQueue).length < 1;
        };
        /**
         * Remove key from loading queue
         *
         * @param {string} key to remove
         */
        AppStateStore.prototype.removeFromLoadingQueue = function (key) {
            if (this.loadingQueue[key]) {
                delete this.loadingQueue[key];
            }
        };
        /**
         * Add key to loading queue
         *
         * @param {string} key to add
         */
        AppStateStore.prototype.addToLoadingQueue = function (key) {
            this.loadingQueue[key] = true;
        };
        /**
         * Update the state
         *
         * @param {{}} state app state
         */
        AppStateStore.prototype.updateState = function (state) {
            this.store.next(internalState$6 = state);
        };
        return AppStateStore;
    }());
    AppStateStore.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function AppStateStore_Factory() { return new AppStateStore(); }, token: AppStateStore, providedIn: "root" });
    AppStateStore.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root',
                },] }
    ];
    AppStateStore.ctorParameters = function () { return []; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var LocalStorageService = /** @class */ (function () {
        function LocalStorageService() {
            this.storageKey = 'scrm-session-storage';
        }
        LocalStorageService.prototype.clear = function () {
            this.getLocalStorage().removeItem(this.storageKey);
        };
        LocalStorageService.prototype.set = function (key, data) {
            var storeJson = this.getLocalStorage().getItem(this.storageKey);
            var store = {};
            if (storeJson) {
                store = JSON.parse(storeJson);
            }
            store[key] = data;
            this.getLocalStorage().setItem(this.storageKey, JSON.stringify(store));
        };
        LocalStorageService.prototype.get = function (key) {
            var storeJson = this.getLocalStorage().getItem(this.storageKey);
            var store = {};
            if (storeJson) {
                store = JSON.parse(storeJson);
            }
            return store[key];
        };
        LocalStorageService.prototype.getLocalStorage = function () {
            return localStorage;
        };
        return LocalStorageService;
    }());
    LocalStorageService.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function LocalStorageService_Factory() { return new LocalStorageService(); }, token: LocalStorageService, providedIn: "root" });
    LocalStorageService.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    LocalStorageService.ctorParameters = function () { return []; };

    var initialState$h = {
        appStrings: {},
        appListStrings: {},
        modStrings: {},
        languageKey: 'en_us',
        loaded: {},
        hasChanged: false
    };
    var internalState$5 = i5.deepClone(initialState$h);
    var initialCache$1 = {
        appStrings: {},
        appListStrings: {},
        modStrings: {},
    };
    var loadedLanguages = {};
    var cache$1 = i5.deepClone(initialCache$1);
    var LanguageStore = /** @class */ (function () {
        function LanguageStore(recordGQL, appStateStore, localStorage) {
            this.recordGQL = recordGQL;
            this.appStateStore = appStateStore;
            this.localStorage = localStorage;
            this.store = new rxjs.BehaviorSubject(internalState$5);
            this.state$ = this.store.asObservable();
            this.config = {
                appStrings: {
                    fetch: 'fetchAppStrings',
                    resourceName: 'appStrings',
                    metadata: {
                        fields: [
                            'id',
                            '_id',
                            'items'
                        ]
                    }
                },
                appListStrings: {
                    fetch: 'fetchAppListStrings',
                    resourceName: 'appListStrings',
                    metadata: {
                        fields: [
                            'id',
                            '_id',
                            'items'
                        ]
                    }
                },
                modStrings: {
                    fetch: 'fetchModStrings',
                    resourceName: 'modStrings',
                    metadata: {
                        fields: [
                            'id',
                            '_id',
                            'items'
                        ]
                    }
                },
            };
            this.appStrings$ = this.state$.pipe(operators.map(function (state) { return state.appStrings; }), operators.distinctUntilChanged());
            this.appListStrings$ = this.state$.pipe(operators.map(function (state) { return state.appListStrings; }), operators.distinctUntilChanged());
            this.modStrings$ = this.state$.pipe(operators.map(function (state) { return state.modStrings; }), operators.distinctUntilChanged());
            this.languageKey$ = this.state$.pipe(operators.map(function (state) { return state.languageKey; }), operators.distinctUntilChanged());
            this.vm$ = rxjs.combineLatest([
                this.appStrings$,
                this.appListStrings$,
                this.modStrings$,
                this.languageKey$
            ])
                .pipe(operators.map(function (_a) {
                var _b = __read(_a, 4), appStrings = _b[0], appListStrings = _b[1], modStrings = _b[2], languageKey = _b[3];
                return ({ appStrings: appStrings, appListStrings: appListStrings, modStrings: modStrings, languageKey: languageKey });
            }));
        }
        /**
         * Public Api
         */
        /**
         * Clear state
         */
        LanguageStore.prototype.clear = function () {
            loadedLanguages = {};
            cache$1 = i5.deepClone(initialCache$1);
            this.updateState(i5.deepClone(initialState$h));
        };
        LanguageStore.prototype.clearAuthBased = function () {
            var keysToClear = ['modStrings', 'appListStrings'];
            keysToClear.forEach(function (type) {
                if (loadedLanguages && loadedLanguages[type]) {
                    delete loadedLanguages[type];
                }
            });
            cache$1.modStrings = {};
            cache$1.appListStrings = {};
        };
        /**
         * Update the language strings toe the given language
         *
         * @param {string} languageKey language key
         */
        LanguageStore.prototype.changeLanguage = function (languageKey) {
            var _this = this;
            var types = [];
            Object.keys(loadedLanguages).forEach(function (type) { return loadedLanguages[type] && types.push(type); });
            internalState$5.hasChanged = true;
            this.appStateStore.updateLoading('change-language', true);
            this.load(languageKey, types).pipe(operators.tap(function () {
                _this.localStorage.set('selected_language', languageKey);
                _this.appStateStore.updateLoading('change-language', false);
            })).subscribe();
        };
        /**
         * Get All languageStrings label by key
         *
         * @returns {object} LanguageStrings
         */
        LanguageStore.prototype.getLanguageStrings = function () {
            if (!internalState$5) {
                return null;
            }
            return {
                appStrings: internalState$5.appStrings,
                appListStrings: internalState$5.appListStrings,
                modStrings: internalState$5.modStrings,
                languageKey: internalState$5.languageKey
            };
        };
        /**
         * Get AppStrings label by key
         *
         * @param {string} labelKey to fetch
         * @returns {string} label
         */
        LanguageStore.prototype.getAppString = function (labelKey) {
            if (!internalState$5.appStrings || !internalState$5.appStrings[labelKey]) {
                return null;
            }
            return internalState$5.appStrings[labelKey];
        };
        /**
         * Get AppListStrings label by key
         *
         * @param {string} labelKey to fetch
         * @returns {string|{}} app strings
         */
        LanguageStore.prototype.getAppListString = function (labelKey) {
            if (!internalState$5.appListStrings || !internalState$5.appListStrings[labelKey]) {
                return null;
            }
            return internalState$5.appListStrings[labelKey];
        };
        /**
         * Get ModStrings label by key
         *
         * @param {string} labelKey to fetch
         * @returns {string|{}} mod strings
         */
        LanguageStore.prototype.getModString = function (labelKey) {
            if (!internalState$5.modStrings || !internalState$5.modStrings[labelKey]) {
                return null;
            }
            return internalState$5.modStrings[labelKey];
        };
        /**
         * Get field label
         *
         * @param {string} labelKey to fetch
         * @param {string} module to use
         * @param {object} lang to use
         * @returns {string} label
         */
        LanguageStore.prototype.getFieldLabel = function (labelKey, module, lang) {
            if (module === void 0) { module = null; }
            if (lang === void 0) { lang = null; }
            var languages = lang;
            if (!lang) {
                languages = this.getLanguageStrings();
            }
            if (!languages || !languages.modStrings || !labelKey) {
                return '';
            }
            var label = '';
            if (module) {
                label = languages.modStrings[module] && languages.modStrings[module][labelKey];
            }
            if (!label) {
                label = languages.appStrings && languages.appStrings[labelKey];
            }
            return label || '';
        };
        /**
         * Get list label
         *
         * @param {string} listKey to fetch
         * @param {string} labelKey to fetch
         * @returns {string} label
         */
        LanguageStore.prototype.getListLabel = function (listKey, labelKey) {
            if (!listKey || !labelKey) {
                return '';
            }
            var listStrings = this.getAppListString(listKey);
            if (!listStrings) {
                return '';
            }
            return listStrings[labelKey] || '';
        };
        /**
         * Get all available string types
         *
         * @returns {string[]} string types
         */
        LanguageStore.prototype.getAvailableStringsTypes = function () {
            return Object.keys(this.config);
        };
        /**
         * Returns whether the language has changed manually
         *
         * @returns {boolean} has changed
         */
        LanguageStore.prototype.hasLanguageChanged = function () {
            return internalState$5.hasChanged;
        };
        /**
         * Returns the currently active language
         *
         * @returns {string} current language key
         */
        LanguageStore.prototype.getCurrentLanguage = function () {
            var storedLanguage = this.localStorage.get('selected_language');
            if (storedLanguage) {
                return storedLanguage;
            }
            return internalState$5.languageKey;
        };
        /**
         * Initial Language Strings Load for given language and types if not cached and update state.
         * Returns observable to be used in resolver if needed
         *
         * @param {string} languageKey to load
         * @param {string[]} types to load
         * @returns {{}} Observable
         */
        LanguageStore.prototype.load = function (languageKey, types) {
            var _this = this;
            var streams$ = {};
            types.forEach(function (type) { return streams$[type] = _this.getStrings(languageKey, type); });
            return rxjs.forkJoin(streams$).pipe(operators.first(), operators.tap(function (result) {
                var stateUpdate = Object.assign(Object.assign({}, internalState$5), { languageKey: languageKey });
                types.forEach(function (type) {
                    stateUpdate[type] = result[type];
                    loadedLanguages[type] = true;
                });
                _this.updateState(stateUpdate);
            }));
        };
        /**
         * Internal API
         */
        /**
         * Update internal state cache and emit from store...
         *
         * @param {{}} state to set
         */
        LanguageStore.prototype.updateState = function (state) {
            this.store.next(internalState$5 = state);
        };
        /**
         * Get given $type of strings Observable from cache  or call the backend
         *
         * @param {string} language to load
         * @param {string} type load
         * @returns {{}} Observable<any>
         */
        LanguageStore.prototype.getStrings = function (language, type) {
            var stringsCache = cache$1[type];
            var fetchMethod = this.config[type].fetch;
            if (stringsCache[language]) {
                return stringsCache[language];
            }
            stringsCache[language] = this[fetchMethod](language).pipe(operators.shareReplay(1));
            return stringsCache[language];
        };
        /**
         * Fetch the App strings from the backend
         *
         * @param {string} language to fetch
         * @returns {{}} Observable<{}>
         */
        LanguageStore.prototype.fetchAppStrings = function (language) {
            var resourceName = this.config.appStrings.resourceName;
            var fields = this.config.appStrings.metadata;
            return this.recordGQL.fetch(resourceName, "/api/app-strings/" + language, fields)
                .pipe(operators.map(function (_a) {
                var data = _a.data;
                var items = {};
                if (data.appStrings) {
                    items = data.appStrings.items;
                }
                return items;
            }));
        };
        /**
         * Fetch the App list strings from the backend
         *
         * @param {string} language to fetch
         * @returns {{}} Observable<{}>
         */
        LanguageStore.prototype.fetchAppListStrings = function (language) {
            var resourceName = this.config.appListStrings.resourceName;
            var fields = this.config.appListStrings.metadata;
            return this.recordGQL.fetch(resourceName, "/api/app-list-strings/" + language, fields)
                .pipe(operators.map(function (_a) {
                var data = _a.data;
                var items = {};
                if (data.appListStrings) {
                    items = data.appListStrings.items;
                }
                return items;
            }));
        };
        /**
         * Fetch the Mod strings from the backend
         *
         * @param {string} language to fetch
         * @returns {{}} Observable<{}>
         */
        LanguageStore.prototype.fetchModStrings = function (language) {
            var resourceName = this.config.modStrings.resourceName;
            var fields = this.config.modStrings.metadata;
            return this.recordGQL.fetch(resourceName, "/api/mod-strings/" + language, fields)
                .pipe(operators.map(function (_a) {
                var data = _a.data;
                var items = {};
                if (data.modStrings) {
                    items = data.modStrings.items;
                }
                return items;
            }));
        };
        return LanguageStore;
    }());
    LanguageStore.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function LanguageStore_Factory() { return new LanguageStore(i0__namespace.ɵɵinject(EntityGQL), i0__namespace.ɵɵinject(AppStateStore), i0__namespace.ɵɵinject(LocalStorageService)); }, token: LanguageStore, providedIn: "root" });
    LanguageStore.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root',
                },] }
    ];
    LanguageStore.ctorParameters = function () { return [
        { type: EntityGQL },
        { type: AppStateStore },
        { type: LocalStorageService }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var GlobalSearch = /** @class */ (function () {
        function GlobalSearch(router) {
            this.router = router;
        }
        /**
         * Public Api
         */
        /**
         * Navigate to global search
         *
         * @param {string} searchTerm to search
         * @returns {object} Promise<boolean>
         */
        GlobalSearch.prototype.navigateToSearch = function (searchTerm) {
            var route = '/home/unified-search';
            var queryString = '';
            if (searchTerm) {
                queryString = searchTerm;
            }
            return this.router.navigate([route], {
                queryParams: {
                    // eslint-disable-next-line camelcase,@typescript-eslint/camelcase
                    query_string: queryString
                }
            });
        };
        return GlobalSearch;
    }());
    GlobalSearch.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function GlobalSearch_Factory() { return new GlobalSearch(i0__namespace.ɵɵinject(i2__namespace.Router)); }, token: GlobalSearch, providedIn: "root" });
    GlobalSearch.decorators = [
        { type: i0.Injectable, args: [{ providedIn: 'root' },] }
    ];
    GlobalSearch.ctorParameters = function () { return [
        { type: i2.Router }
    ]; };

    var ActionBarUiComponent = /** @class */ (function () {
        function ActionBarUiComponent(languageStore, globalSearch) {
            this.languageStore = languageStore;
            this.globalSearch = globalSearch;
            this.searchTerm = '';
            this.actionBar = {
                createLinks: [
                    {
                        label: 'Accounts',
                        route: '/accounts/edit'
                    },
                    {
                        label: 'Contacts',
                        route: '/contacts/edit'
                    },
                    {
                        label: 'Leads',
                        route: '/leads/edit'
                    },
                    {
                        label: 'Opportunities',
                        route: '/opportunities/edit'
                    },
                    {
                        label: 'AOS_Quotes',
                        route: '/quotes/edit'
                    },
                    {
                        label: 'AOS_Contracts',
                        route: '/contracts/edit'
                    },
                ],
                favoriteRecords: [],
            };
            this.languages$ = this.languageStore.vm$;
            this.vm$ = rxjs.combineLatest([
                this.languages$,
            ]).pipe(operators.map(function (_a) {
                var _b = __read(_a, 1), languages = _b[0];
                return ({
                    appStrings: languages.appStrings || {},
                    appListStrings: languages.appListStrings || {}
                });
            }));
        }
        ActionBarUiComponent.prototype.search = function () {
            var _this = this;
            this.globalSearch.navigateToSearch(this.searchTerm).finally(function () {
                _this.clearSearchTerm();
            });
        };
        ActionBarUiComponent.prototype.clearSearchTerm = function () {
            this.searchTerm = '';
        };
        return ActionBarUiComponent;
    }());
    ActionBarUiComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-action-bar-ui',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<!-- Start of action bar section -->\n\n<div class=\"global-action-bar row pb-2 pt-2 mr-0\" *ngIf=\"(vm$ | async) as vm\">\n    <div class=\"col-6\">\n        <form name=\"global-search\" class=\"global-search\">\n            <div class=\"input-group\">\n                <input [(ngModel)]=\"searchTerm\"\n                       type=\"text\"\n                       name=\"global-search-term\"\n                       class=\"form-control global-search-term\"\n                       placeholder=\"{{vm.appStrings['LBL_SEARCH'] || ''}}...\"\n                       aria-label=\"Search\"\n                       required>\n                <div class=\"input-group-append\">\n                    <button class=\"btn btn-default search-button\"\n                            aria-label=\"Search\"\n                            scrm-button-loading\n                            (click)=\"search()\">\n                        <scrm-image class=\"search-icon sicon\" image=\"search\"></scrm-image>\n                    </button>\n                </div>\n            </div>\n        </form>\n    </div>\n    <div class=\"col justify-content-right\">\n        <div class=\"action-group\">\n            <div class=\"action-new dropdown\">\n                <button class=\"quickcreate-button dropdown-toggle\" type=\"button\" aria-label=\"Quick Create\">\n                    {{vm.appStrings['LBL_NEW'] || ''}}\n                </button>\n                <ul class=\"dropdown-menu dropdown-menu-right\">\n                    <li class=\"new-list-item\" *ngFor=\"let createLink of actionBar.createLinks\">\n                        <a [routerLink]=\"createLink.route\">\n                            <scrm-image class=\"action-btn-icon\" image=\"plus\"></scrm-image>\n                            {{vm.appListStrings.moduleList && vm.appListStrings.moduleList[createLink.label]}}\n                        </a>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    </div>\n</div>\n\n<!-- End of action bar section -->\n"
                },] }
    ];
    ActionBarUiComponent.ctorParameters = function () { return [
        { type: LanguageStore },
        { type: GlobalSearch }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var ButtonLoadingDirective = /** @class */ (function () {
        function ButtonLoadingDirective(el, appStateStore) {
            this.el = el;
            this.appStateStore = appStateStore;
            this.appLoading = false;
        }
        ButtonLoadingDirective.prototype.ngOnInit = function () {
            var _this = this;
            this.subscription = this.appStateStore.loading$.pipe(operators.tap(function (loading) {
                _this.appLoading = loading;
                _this.updateComponent();
            })).subscribe();
            this.updateComponent();
        };
        ButtonLoadingDirective.prototype.ngOnChanges = function (changes) {
            if (changes.state) {
                this.updateComponent();
            }
        };
        ButtonLoadingDirective.prototype.ngOnDestroy = function () {
            this.subscription.unsubscribe();
        };
        ButtonLoadingDirective.prototype.clickEvent = function () {
            this.updateComponent();
        };
        /**
         * Calculate loading state and update loading
         */
        ButtonLoadingDirective.prototype.updateComponent = function () {
            var loading = this.isLoading();
            this.setDisabledState(loading);
        };
        /**
         * Calculate if is loading
         *
         * @returns {boolean} isLoading
         */
        ButtonLoadingDirective.prototype.isLoading = function () {
            var loading = false;
            if (this.state === true || this.appLoading === true) {
                loading = true;
            }
            return loading;
        };
        /**
         * Disable or enable button
         *
         * @param {boolean} state to set
         */
        ButtonLoadingDirective.prototype.setDisabledState = function (state) {
            this.el.nativeElement.disabled = state;
        };
        return ButtonLoadingDirective;
    }());
    ButtonLoadingDirective.decorators = [
        { type: i0.Directive, args: [{
                    selector: '[scrm-button-loading]'
                },] }
    ];
    ButtonLoadingDirective.ctorParameters = function () { return [
        { type: i0.ElementRef },
        { type: AppStateStore }
    ]; };
    ButtonLoadingDirective.propDecorators = {
        state: [{ type: i0.Input, args: ['scrm-button-loading',] }],
        clickEvent: [{ type: i0.HostListener, args: ['click',] }]
    };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var ButtonLoadingUiModule = /** @class */ (function () {
        function ButtonLoadingUiModule() {
        }
        return ButtonLoadingUiModule;
    }());
    ButtonLoadingUiModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [
                        ButtonLoadingDirective
                    ],
                    exports: [
                        ButtonLoadingDirective
                    ],
                    imports: [
                        common.CommonModule,
                    ]
                },] }
    ];

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var initialState$g = {
        theme: null,
        images: {}
    };
    var internalState$4 = i5.deepClone(initialState$g);
    var cachedTheme = null;
    var cache$$3 = null;
    var ThemeImagesStore = /** @class */ (function () {
        function ThemeImagesStore(recordGQL, appStateStore, iconRegistry) {
            this.recordGQL = recordGQL;
            this.appStateStore = appStateStore;
            this.iconRegistry = iconRegistry;
            this.store = new rxjs.BehaviorSubject(internalState$4);
            this.state$ = this.store.asObservable();
            this.resourceName = 'themeImages';
            this.frontendName = 'theme-images';
            this.fieldsMetadata = {
                fields: [
                    'id',
                    '_id',
                    'items'
                ]
            };
            this.images$ = this.state$.pipe(operators.map(function (state) { return state.images; }), operators.distinctUntilChanged());
        }
        /**
         * Public Api
         */
        /**
         * Clear state
         */
        ThemeImagesStore.prototype.clear = function () {
            cachedTheme = null;
            cache$$3 = null;
            this.updateState(i5.deepClone(initialState$g));
        };
        ThemeImagesStore.prototype.clearAuthBased = function () {
        };
        /**
         * Change the current theme
         *
         * @param {string} theme to set
         */
        ThemeImagesStore.prototype.changeTheme = function (theme) {
            var _this = this;
            this.appStateStore.updateLoading('change-theme', true);
            this.load(theme).pipe(operators.tap(function () { return _this.appStateStore.updateLoading('change-theme', false); })).subscribe();
        };
        /**
         * Returns the currently active image theme
         *
         * @returns {string} the theme
         */
        ThemeImagesStore.prototype.getTheme = function () {
            return internalState$4.theme;
        };
        /**
         * Initial ThemeImages load if not cached and update state.
         * Returns observable to be used in resolver if needed
         *
         * @param {string} theme to load
         * @returns {object} Observable<any>
         */
        ThemeImagesStore.prototype.load = function (theme) {
            var _this = this;
            return this.getThemeImages(theme).pipe(operators.tap(function (images) {
                _this.updateState(Object.assign(Object.assign({}, internalState$4), { images: images, theme: theme }));
            }));
        };
        /**
         * Internal API
         */
        /**
         * Update the state
         *
         * @param {object} state to set
         */
        ThemeImagesStore.prototype.updateState = function (state) {
            this.store.next(internalState$4 = state);
        };
        /**
         * Get theme images cached Observable or call the backend
         *
         * @param {string} theme to retrieve
         * @returns {object} Observable<any>
         */
        ThemeImagesStore.prototype.getThemeImages = function (theme) {
            if (cachedTheme !== theme || cache$$3 === null) {
                cachedTheme = theme;
                cache$$3 = this.fetch(theme).pipe(operators.shareReplay(1));
            }
            return cache$$3;
        };
        /**
         * Fetch the theme images from the backend
         *
         * @param {string} theme to load
         * @returns {object} Observable<any>
         */
        ThemeImagesStore.prototype.fetch = function (theme) {
            var _this = this;
            return this.recordGQL
                .fetch(this.resourceName, "/api/" + this.frontendName + "/" + theme, this.fieldsMetadata)
                .pipe(operators.map(function (_c) {
                var data = _c.data;
                var images = {};
                if (data && data.themeImages) {
                    images = data.themeImages.items;
                }
                if (!i5.emptyObject(images)) {
                    Object.keys(images).forEach(function (key) {
                        var _a, _b;
                        var image = images[key];
                        var content = (_a = image['content']) !== null && _a !== void 0 ? _a : '';
                        var name = (_b = image['name']) !== null && _b !== void 0 ? _b : '';
                        if (content === '' || name === '') {
                            return;
                        }
                        _this.iconRegistry.addSvg(name, content);
                    });
                }
                return images;
            }));
        };
        return ThemeImagesStore;
    }());
    ThemeImagesStore.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function ThemeImagesStore_Factory() { return new ThemeImagesStore(i0__namespace.ɵɵinject(EntityGQL), i0__namespace.ɵɵinject(AppStateStore), i0__namespace.ɵɵinject(i3__namespace.SvgIconRegistryService)); }, token: ThemeImagesStore, providedIn: "root" });
    ThemeImagesStore.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root',
                },] }
    ];
    ThemeImagesStore.ctorParameters = function () { return [
        { type: EntityGQL },
        { type: AppStateStore },
        { type: i3.SvgIconRegistryService }
    ]; };

    var ImageComponent = /** @class */ (function () {
        function ImageComponent(themeImagesStore) {
            this.themeImagesStore = themeImagesStore;
            this.klass = '';
            this.title = '';
            this.images$ = this.themeImagesStore.images$;
            this.vm$ = rxjs.combineLatest([this.images$]).pipe(operators.map(function (_a) {
                var _b = __read(_a, 1), images = _b[0];
                return ({
                    images: images
                });
            }));
        }
        /**
         * Get image from current view model and log if not existent
         *
         * @param vm
         * @param image name
         * @returns ThemeImage
         */
        ImageComponent.prototype.getImage = function (vm, image) {
            if (!vm || !vm.images || Object.keys(vm.images).length < 1) {
                return null;
            }
            var img = vm.images[image];
            if (!img) {
                console.warn("Image with name '" + image + "' not found");
            }
            return img;
        };
        return ImageComponent;
    }());
    ImageComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-image',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<ng-container *ngIf=\"(vm$ | async) as vm\">\n    <ng-container *ngIf=\"getImage(vm, image) as img\">\n\n        <svg-icon *ngIf=\"img.type === 'svg'\" [svgClass]=\"klass || ''\" [title]=\"title || ''\" class=\"sicon\"\n                  name=\"{{img.name}}\"></svg-icon>\n\n        <img *ngIf=\"img.type !=='svg'\" alt=\"\" src=\"{{img.path}}\" class=\"{{klass}}\" [title]=\"title || ''\">\n\n    </ng-container>\n</ng-container>\n"
                },] }
    ];
    ImageComponent.ctorParameters = function () { return [
        { type: ThemeImagesStore }
    ]; };
    ImageComponent.propDecorators = {
        image: [{ type: i0.Input }],
        klass: [{ type: i0.Input }],
        title: [{ type: i0.Input }]
    };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var ImageModule = /** @class */ (function () {
        function ImageModule() {
        }
        return ImageModule;
    }());
    ImageModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [
                        ImageComponent
                    ],
                    exports: [
                        ImageComponent
                    ],
                    imports: [
                        common.CommonModule,
                        i3.AngularSvgIconModule
                    ]
                },] }
    ];

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var ActionBarUiModule = /** @class */ (function () {
        function ActionBarUiModule() {
        }
        return ActionBarUiModule;
    }());
    ActionBarUiModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [ActionBarUiComponent],
                    exports: [ActionBarUiComponent],
                    imports: [
                        common.CommonModule,
                        ImageModule,
                        i2.RouterModule,
                        forms.FormsModule,
                        ButtonLoadingUiModule
                    ]
                },] }
    ];

    var CollectionGQL = /** @class */ (function () {
        function CollectionGQL(apollo) {
            this.apollo = apollo;
        }
        /**
         * Fetch data either from backend or cache
         *
         * @param {string} module to get from
         * @param {object} metadata with the fields to ask for
         *
         * @returns {object} Observable<ApolloQueryResult<any>>
         */
        CollectionGQL.prototype.fetchAll = function (module, metadata) {
            var fields = metadata.fields;
            var queryOptions = {
                query: gql__default['default'](templateObject_1$5 || (templateObject_1$5 = __makeTemplateObject(["\n                query ", "{\n                    ", " {\n                        edges {\n                            node {\n                                ", "\n                            }\n                        }\n                    }\n                }\n            "], ["\n                query ", "{\n                    ", " {\n                        edges {\n                            node {\n                                ", "\n                            }\n                        }\n                    }\n                }\n            "])), module, module, fields.join('\n'))
            };
            return this.apollo.query(queryOptions);
        };
        return CollectionGQL;
    }());
    CollectionGQL.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function CollectionGQL_Factory() { return new CollectionGQL(i0__namespace.ɵɵinject(i1__namespace.Apollo)); }, token: CollectionGQL, providedIn: "root" });
    CollectionGQL.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    CollectionGQL.ctorParameters = function () { return [
        { type: i1.Apollo }
    ]; };
    var templateObject_1$5;

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var initialState$f = {
        configs: {},
        loading: false
    };
    var internalState$3 = i5.deepClone(initialState$f);
    var cache$$2 = null;
    var SystemConfigStore = /** @class */ (function () {
        function SystemConfigStore(collectionGQL) {
            this.collectionGQL = collectionGQL;
            this.store = new rxjs.BehaviorSubject(internalState$3);
            this.state$ = this.store.asObservable();
            this.resourceName = 'systemConfigs';
            this.fieldsMetadata = {
                fields: [
                    'id',
                    '_id',
                    'value',
                    'items'
                ]
            };
            this.configs$ = this.state$.pipe(operators.map(function (state) { return state.configs; }), operators.distinctUntilChanged());
            this.loading$ = this.state$.pipe(operators.map(function (state) { return state.loading; }));
        }
        /**
         * Public Api
         */
        /**
         * Get system config value by key
         *
         * @param {string} configKey of the config
         * @returns {{}|string} config value
         */
        SystemConfigStore.prototype.getConfigValue = function (configKey) {
            if (!internalState$3.configs || !internalState$3.configs[configKey]) {
                return null;
            }
            if (internalState$3.configs[configKey].value !== null) {
                return internalState$3.configs[configKey].value;
            }
            return internalState$3.configs[configKey].items;
        };
        SystemConfigStore.prototype.getHomePage = function () {
            var defaultModule = 'home';
            var defaultModuleConfig = this.getConfigValue('default_module');
            if (defaultModuleConfig) {
                defaultModule = defaultModuleConfig;
            }
            return defaultModule;
        };
        /**
         * Clear state
         */
        SystemConfigStore.prototype.clear = function () {
            cache$$2 = null;
            this.updateState(i5.deepClone(initialState$f));
        };
        SystemConfigStore.prototype.clearAuthBased = function () {
        };
        /**
         * Initial SystemConfigs load if not cached and update state.
         * Returns observable to be used in resolver if needed
         *
         * @returns {Observable<{}>} observable
         */
        SystemConfigStore.prototype.load = function () {
            var _this = this;
            this.updateState(Object.assign(Object.assign({}, internalState$3), { loading: true }));
            return this.getSystemConfigs().pipe(operators.tap(function (configs) {
                _this.updateState(Object.assign(Object.assign({}, internalState$3), { configs: configs, loading: false }));
            }));
        };
        /**
         * Internal API
         */
        /**
         * Update the state
         *
         * @param {{}} state new state
         */
        SystemConfigStore.prototype.updateState = function (state) {
            this.store.next(internalState$3 = state);
        };
        /**
         * Get SystemConfigs cached Observable or call the backend
         *
         * @returns {Observable<{}>} observable
         */
        SystemConfigStore.prototype.getSystemConfigs = function () {
            if (cache$$2 == null) {
                cache$$2 = this.fetch().pipe(operators.shareReplay(1));
            }
            return cache$$2;
        };
        /**
         * Fetch the App strings from the backend
         *
         * @returns {Observable<{}>} observable
         */
        SystemConfigStore.prototype.fetch = function () {
            return this.collectionGQL
                .fetchAll(this.resourceName, this.fieldsMetadata).pipe(operators.map(function (_a) {
                var data = _a.data;
                var configs = {};
                if (data.systemConfigs && data.systemConfigs.edges) {
                    data.systemConfigs.edges.forEach(function (edge) {
                        // eslint-disable-next-line no-underscore-dangle
                        configs[edge.node._id] = edge.node;
                    });
                }
                return configs;
            }));
        };
        return SystemConfigStore;
    }());
    SystemConfigStore.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function SystemConfigStore_Factory() { return new SystemConfigStore(i0__namespace.ɵɵinject(CollectionGQL)); }, token: SystemConfigStore, providedIn: "root" });
    SystemConfigStore.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root',
                },] }
    ];
    SystemConfigStore.ctorParameters = function () { return [
        { type: CollectionGQL }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    exports.ScreenSize = void 0;
    (function (ScreenSize) {
        ScreenSize["XSmall"] = "XSmall";
        ScreenSize["Small"] = "Small";
        ScreenSize["Medium"] = "Medium";
        ScreenSize["Large"] = "Large";
        ScreenSize["XLarge"] = "XLarge";
    })(exports.ScreenSize || (exports.ScreenSize = {}));
    var ScreenSizeObserverService = /** @class */ (function () {
        function ScreenSizeObserverService(breakpointObserver) {
            this.breakpointObserver = breakpointObserver;
            this.screenSize = new rxjs.BehaviorSubject(exports.ScreenSize.Medium);
            this.screenSize$ = this.screenSize.asObservable();
            this.initScreenSizeObservable();
        }
        ScreenSizeObserverService.prototype.initScreenSizeObservable = function () {
            var _this = this;
            rxjs.merge(this.breakpointObserver.observe([
                i1$1.Breakpoints.XSmall,
            ]).pipe(operators.map(function (result) {
                if (result.matches) {
                    return exports.ScreenSize.XSmall;
                }
            })), this.breakpointObserver.observe([
                i1$1.Breakpoints.Small,
            ]).pipe(operators.map(function (result) {
                if (result.matches) {
                    return exports.ScreenSize.Small;
                }
            })), this.breakpointObserver.observe([
                i1$1.Breakpoints.Medium,
            ]).pipe(operators.map(function (result) {
                if (result.matches) {
                    return exports.ScreenSize.Medium;
                }
            })), this.breakpointObserver.observe([
                i1$1.Breakpoints.Large,
            ]).pipe(operators.map(function (result) {
                if (result.matches) {
                    return exports.ScreenSize.Large;
                }
            })), this.breakpointObserver.observe([
                i1$1.Breakpoints.XLarge,
            ]).pipe(operators.map(function (result) {
                if (result.matches) {
                    return exports.ScreenSize.XLarge;
                }
            }))).subscribe(function (value) {
                if (value) {
                    _this.screenSize.next(value);
                }
            });
        };
        return ScreenSizeObserverService;
    }());
    ScreenSizeObserverService.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function ScreenSizeObserverService_Factory() { return new ScreenSizeObserverService(i0__namespace.ɵɵinject(i1__namespace$1.BreakpointObserver)); }, token: ScreenSizeObserverService, providedIn: "root" });
    ScreenSizeObserverService.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    ScreenSizeObserverService.ctorParameters = function () { return [
        { type: i1$1.BreakpointObserver }
    ]; };

    var ActionGroupMenuComponent = /** @class */ (function () {
        function ActionGroupMenuComponent(languages, screenSize, systemConfigStore) {
            this.languages = languages;
            this.screenSize = screenSize;
            this.systemConfigStore = systemConfigStore;
            this.klass = '';
            this.buttonClass = 'btn btn-sm';
            this.configState = new rxjs.BehaviorSubject({ buttons: [] });
            this.config$ = this.configState.asObservable();
            this.buttonGroupClass = 'dropdown-button-secondary';
            this.screen = exports.ScreenSize.Medium;
            this.defaultBreakpoint = 3;
        }
        ActionGroupMenuComponent.prototype.ngOnInit = function () {
            var _this = this;
            this.vm$ = rxjs.combineLatest([
                this.config.getActions(),
                this.screenSize.screenSize$,
                this.languages.vm$
            ]).pipe(operators.map(function (_a) {
                var _b = __read(_a, 3), actions = _b[0], screenSize = _b[1], languages = _b[2];
                if (screenSize) {
                    _this.screen = screenSize;
                }
                _this.configState.next(_this.getButtonGroupConfig(actions));
                return { actions: actions, screenSize: screenSize, languages: languages };
            }));
        };
        ActionGroupMenuComponent.prototype.isXSmallScreen = function () {
            return this.screen === exports.ScreenSize.XSmall;
        };
        ActionGroupMenuComponent.prototype.getButtonGroupConfig = function (actions) {
            var _this = this;
            var expanded = [];
            var collapsed = [];
            actions.forEach(function (action) {
                var button = _this.buildButton(action);
                if (action.params && action.params.expanded) {
                    expanded.push(button);
                    return;
                }
                collapsed.push(button);
            });
            var breakpoint = this.getBreakpoint();
            if (expanded.length < breakpoint) {
                breakpoint = expanded.length;
            }
            var buttons = expanded.concat(collapsed);
            return {
                buttonKlass: [this.buttonClass],
                dropdownLabel: this.languages.getAppString('LBL_ACTIONS') || '',
                breakpoint: breakpoint,
                dropdownOptions: {
                    placement: ['bottom-right'],
                    wrapperKlass: [(this.buttonGroupClass)]
                },
                buttons: buttons
            };
        };
        ActionGroupMenuComponent.prototype.getBreakpoint = function () {
            var breakpointMap = this.systemConfigStore.getConfigValue('recordview_actions_limits');
            if (this.screen && breakpointMap && breakpointMap[this.screen]) {
                this.breakpoint = breakpointMap[this.screen];
                return this.breakpoint;
            }
            if (this.breakpoint) {
                return this.breakpoint;
            }
            return this.defaultBreakpoint;
        };
        ActionGroupMenuComponent.prototype.buildButton = function (action) {
            var _this = this;
            var button = {
                label: action.label || '',
                klass: this.buttonClass,
                onClick: function () {
                    _this.config.runAction(action, _this.actionContext);
                }
            };
            if (action.icon) {
                button.icon = action.icon;
            }
            if (action.status) {
                i5.Button.appendClasses(button, [action.status]);
            }
            if (action.klass) {
                i5.Button.appendClasses(button, action.klass);
            }
            return button;
        };
        return ActionGroupMenuComponent;
    }());
    ActionGroupMenuComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-action-group-menu',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<ng-container *ngIf=\"(vm$ | async) as vm\">\n    <div class=\"{{klass}} float-right\">\n        <scrm-button-group *ngIf=\"config$\" [config$]=\"config$\"></scrm-button-group>\n    </div>\n</ng-container>\n"
                },] }
    ];
    ActionGroupMenuComponent.ctorParameters = function () { return [
        { type: LanguageStore },
        { type: ScreenSizeObserverService },
        { type: SystemConfigStore }
    ]; };
    ActionGroupMenuComponent.propDecorators = {
        klass: [{ type: i0.Input }],
        buttonClass: [{ type: i0.Input }],
        actionContext: [{ type: i0.Input }],
        config: [{ type: i0.Input }]
    };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var DropdownButtonComponent = /** @class */ (function () {
        function DropdownButtonComponent() {
            this.disabled = false;
            this.autoClose = true;
        }
        DropdownButtonComponent.prototype.isDropdown = function (item) {
            if (!item) {
                return false;
            }
            return 'items' in item;
        };
        DropdownButtonComponent.prototype.click = function (onClick, dropdown) {
            onClick();
            dropdown.close();
        };
        DropdownButtonComponent.prototype.close = function (dropdown) {
            dropdown.close();
        };
        DropdownButtonComponent.prototype.ngOnInit = function () {
            if (this.config && !this.config.placement) {
                this.config.placement = ['bottom-left', 'bottom-right', 'top-left', 'top-right'];
            }
        };
        DropdownButtonComponent.prototype.getPlacement = function () {
            if (this.config && !this.config.placement) {
                return ['bottom-left', 'bottom-right', 'top-left', 'top-right'];
            }
            return this.config.placement;
        };
        return DropdownButtonComponent;
    }());
    DropdownButtonComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-dropdown-button',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<div ngbDropdown\n     [autoClose]=\"autoClose\"\n     [placement]=\"getPlacement()\"\n     #dropDown=\"ngbDropdown\"\n     class=\"d-inline-block dropdown-button\"\n     [ngClass]=\"config.wrapperKlass\">\n    <button [disabled]=\"disabled\" [ngClass]=\"config.klass\" ngbDropdownToggle>\n\n        <ng-container *ngIf=\"config.label\">\n            {{ config.label }}\n        </ng-container>\n\n        <ng-container *ngIf=\"!config.label && config.labelKey\">\n            <scrm-label [labelKey]=\"config.labelKey\"></scrm-label>\n        </ng-container>\n\n        <ng-content></ng-content>\n    </button>\n    <div ngbDropdownMenu>\n\n        <ng-container *ngFor=\"let item of config.items\">\n\n            <ng-container *ngIf=\"item && !isDropdown(item)\">\n                <a ngbDropdownItem\n                   [ngClass]=\"item && item.klass\"\n                   (click)=\"item && click(item.onClick, dropDown)\">\n\n                    <div class=\"d-flex align-items-center\">\n                        <div *ngIf=\"item.icon\">\n                            <scrm-image [image]=\"item.icon\" [klass]=\"item.iconKlass || ''\"></scrm-image>\n                        </div>\n                        <div class=\"flex-grow-1\">\n                            {{item && item.label}}\n                        </div>\n                    </div>\n                </a>\n            </ng-container>\n\n            <ng-container *ngIf=\"item && isDropdown(item)\">\n                <scrm-dropdown-submenu (item-clicked)=\"close(dropDown)\" [item]=\"item\"></scrm-dropdown-submenu>\n            </ng-container>\n\n        </ng-container>\n    </div>\n</div>\n"
                },] }
    ];
    DropdownButtonComponent.ctorParameters = function () { return []; };
    DropdownButtonComponent.propDecorators = {
        config: [{ type: i0.Input }],
        disabled: [{ type: i0.Input }],
        autoClose: [{ type: i0.Input }]
    };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var DropdownSubmenuComponent = /** @class */ (function () {
        function DropdownSubmenuComponent() {
            this.itemClicked = new i0.EventEmitter();
            this.isCollapsed = true;
        }
        DropdownSubmenuComponent.prototype.ngOnInit = function () {
        };
        DropdownSubmenuComponent.prototype.click = function (item) {
            if (item && item.onClick) {
                item.onClick();
            }
            this.itemClicked.emit(true);
        };
        return DropdownSubmenuComponent;
    }());
    DropdownSubmenuComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-dropdown-submenu',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<div>\n    <div class=\"dropdown-submenu-items-container\">\n        <a (click)=\"isCollapsed = !isCollapsed\"\n           class=\"dropdown-submenu-parent-button dropdown-item dropdown-toggle\"\n        >\n            <scrm-image *ngIf=\"item && item.icon\" [image]=\"item.icon\"></scrm-image>\n            {{item && item.label}}\n        </a>\n        <div *ngIf=\"item && item.items.length\" [ngbCollapse]=\"isCollapsed\">\n            <ul class=\"dropdown-submenu pl-2 mb-1\">\n\n                <li *ngFor=\"let subItem of item.items\" class=\"dropdown-submenu-item dropdown-item\">\n\n                    <a class=\"action-link dropdown-submenu-item-link\"\n                       [ngClass]=\"subItem && subItem.klass\"\n                       (click)=\"click(subItem)\">\n                        <scrm-image *ngIf=\"subItem.icon\" [image]=\"subItem.icon\"></scrm-image>\n                        {{subItem && subItem.label}}\n                    </a>\n                </li>\n            </ul>\n        </div>\n    </div>\n    <div class=\"dropdown-submenu-extra\">\n        <ng-content></ng-content>\n    </div>\n</div>\n"
                },] }
    ];
    DropdownSubmenuComponent.ctorParameters = function () { return []; };
    DropdownSubmenuComponent.propDecorators = {
        item: [{ type: i0.Input }],
        itemClicked: [{ type: i0.Output, args: ['item-clicked',] }]
    };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var DropdownSubmenuModule = /** @class */ (function () {
        function DropdownSubmenuModule() {
        }
        return DropdownSubmenuModule;
    }());
    DropdownSubmenuModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [DropdownSubmenuComponent],
                    exports: [
                        DropdownSubmenuComponent
                    ],
                    imports: [
                        common.CommonModule,
                        ImageModule,
                        i1$2.NgbModule
                    ]
                },] }
    ];

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var LabelComponent = /** @class */ (function () {
        function LabelComponent(language) {
            this.language = language;
            this.labelKey = '';
            this.module = null;
            this.listKey = null;
            this.languages$ = this.language.vm$;
        }
        return LabelComponent;
    }());
    LabelComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-label',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<ng-container *ngIf=\"(languages$ | async) as languages\">\n    <ng-container *ngIf=\"!listKey && labelKey\">\n        {{language.getFieldLabel(labelKey, module)}}\n    </ng-container>\n    <ng-container *ngIf=\"listKey && labelKey\">\n        {{language.getListLabel(listKey, labelKey)}}\n    </ng-container>\n</ng-container>\n"
                },] }
    ];
    LabelComponent.ctorParameters = function () { return [
        { type: LanguageStore }
    ]; };
    LabelComponent.propDecorators = {
        labelKey: [{ type: i0.Input }],
        module: [{ type: i0.Input }],
        listKey: [{ type: i0.Input }]
    };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var LabelModule = /** @class */ (function () {
        function LabelModule() {
        }
        return LabelModule;
    }());
    LabelModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [LabelComponent],
                    exports: [
                        LabelComponent
                    ],
                    imports: [
                        common.CommonModule
                    ]
                },] }
    ];

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var DropdownButtonModule = /** @class */ (function () {
        function DropdownButtonModule() {
        }
        return DropdownButtonModule;
    }());
    DropdownButtonModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [DropdownButtonComponent],
                    exports: [
                        DropdownButtonComponent
                    ],
                    imports: [
                        common.CommonModule,
                        i1$2.NgbDropdownModule,
                        ImageModule,
                        DropdownSubmenuModule,
                        LabelModule
                    ]
                },] }
    ];

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var ButtonComponent = /** @class */ (function () {
        function ButtonComponent(language) {
            this.language = language;
        }
        return ButtonComponent;
    }());
    ButtonComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-button',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<button type=\"button\"\n        [ngClass]=\"config.klass\"\n        (click)=\"config.onClick && config.onClick()\"\n        [ngbTooltip]=\"language.getFieldLabel(config.titleKey) || ''\">\n    <scrm-image *ngIf=\"config.icon\" [image]=\"config.icon\" [klass]=\"config.iconKlass || ''\"></scrm-image>\n    {{ config.label || '' }}\n    <scrm-label *ngIf=\"config.labelKey\" [labelKey]=\"config.labelKey\"></scrm-label>\n    <ng-content></ng-content>\n</button>\n"
                },] }
    ];
    ButtonComponent.ctorParameters = function () { return [
        { type: LanguageStore }
    ]; };
    ButtonComponent.propDecorators = {
        config: [{ type: i0.Input }]
    };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var ButtonModule = /** @class */ (function () {
        function ButtonModule() {
        }
        return ButtonModule;
    }());
    ButtonModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [ButtonComponent],
                    exports: [ButtonComponent],
                    imports: [
                        common.CommonModule,
                        ImageModule,
                        LabelModule,
                        i1$2.NgbTooltipModule,
                    ]
                },] }
    ];

    var ButtonGroupComponent = /** @class */ (function () {
        function ButtonGroupComponent() {
            this.buttons = {
                expanded: [],
                collapsed: [],
            };
        }
        ButtonGroupComponent.prototype.ngOnInit = function () {
            var _this = this;
            this.sub = this.config$.subscribe(function (config) {
                _this.internalConfig = Object.assign({}, config);
                _this.splitButtons();
            });
        };
        ButtonGroupComponent.prototype.ngOnDestroy = function () {
            this.sub.unsubscribe();
        };
        ButtonGroupComponent.prototype.isDropdown = function (item) {
            if (!item) {
                return false;
            }
            return 'items' in item;
        };
        ButtonGroupComponent.prototype.buildDropdownConfig = function () {
            var buttonClasses = ['button-group-button'];
            if (this.internalConfig.buttonKlass && this.internalConfig.buttonKlass.length > 0) {
                buttonClasses = buttonClasses.concat(this.internalConfig.buttonKlass);
            }
            var wrapperClasses = ['button-group-dropdown'];
            var dropdownOptions = this.internalConfig.dropdownOptions;
            var optionsWrapperKlass = dropdownOptions && dropdownOptions.wrapperKlass;
            if (optionsWrapperKlass && optionsWrapperKlass.length > 0) {
                wrapperClasses = wrapperClasses.concat(optionsWrapperKlass);
            }
            this.dropdownConfig = {
                label: this.internalConfig.dropdownLabel,
                klass: __spreadArray([], __read(buttonClasses)),
                wrapperKlass: wrapperClasses,
                items: this.buttons.collapsed,
            };
            if (this.internalConfig.dropdownOptions && this.internalConfig.dropdownOptions.placement) {
                this.dropdownConfig.placement = this.internalConfig.dropdownOptions.placement;
            }
        };
        ButtonGroupComponent.prototype.getBreakpoint = function () {
            if (!this.internalConfig.breakpoint) {
                return 4;
            }
            return this.internalConfig.breakpoint;
        };
        ButtonGroupComponent.prototype.splitButtons = function () {
            var _this = this;
            this.buttons.expanded = [];
            this.buttons.collapsed = [];
            if (!this.internalConfig.buttons || this.internalConfig.buttons.length < 1) {
                return;
            }
            var count = 0;
            this.internalConfig.buttons.forEach(function (button) {
                if (!button) {
                    return;
                }
                if (count < _this.getBreakpoint()) {
                    var classes = ['button-group-button'];
                    if (_this.internalConfig.buttonKlass && _this.internalConfig.buttonKlass.length > 0) {
                        classes = classes.concat(_this.internalConfig.buttonKlass);
                    }
                    var newButton = Object.assign({}, button);
                    i5.Button.appendClasses(newButton, __spreadArray([], __read(classes)));
                    _this.buttons.expanded.push(newButton);
                }
                else {
                    _this.buttons.collapsed.push(Object.assign({}, button));
                }
                count++;
            });
            this.buildDropdownConfig();
        };
        return ButtonGroupComponent;
    }());
    ButtonGroupComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-button-group',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<div *ngIf=\"config$\">\n    <ng-container *ngFor=\"let item of buttons.expanded\">\n        <scrm-button *ngIf=\"item && !isDropdown(item)\"\n                     [config]=\"item\">\n        </scrm-button>\n        <scrm-dropdown-button *ngIf=\"item && isDropdown(item)\"\n                              [config]=\"item\">\n        </scrm-dropdown-button>\n    </ng-container>\n\n    <scrm-dropdown-button autoClose=\"outside\"\n                          *ngIf=\"buttons.collapsed.length\"\n                          [config]=\"dropdownConfig\"></scrm-dropdown-button>\n</div>\n"
                },] }
    ];
    ButtonGroupComponent.ctorParameters = function () { return []; };
    ButtonGroupComponent.propDecorators = {
        config$: [{ type: i0.Input }]
    };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var ButtonGroupModule = /** @class */ (function () {
        function ButtonGroupModule() {
        }
        return ButtonGroupModule;
    }());
    ButtonGroupModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [ButtonGroupComponent],
                    exports: [
                        ButtonGroupComponent
                    ],
                    imports: [
                        common.CommonModule,
                        ButtonModule,
                        DropdownButtonModule,
                    ]
                },] }
    ];

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var ActionGroupMenuModule = /** @class */ (function () {
        function ActionGroupMenuModule() {
        }
        return ActionGroupMenuModule;
    }());
    ActionGroupMenuModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [ActionGroupMenuComponent],
                    exports: [ActionGroupMenuComponent],
                    imports: [
                        common.CommonModule,
                        ImageModule,
                        ButtonModule,
                        ButtonGroupModule
                    ]
                },] }
    ];

    var BulkActionMenuComponent = /** @class */ (function () {
        function BulkActionMenuComponent(languageStore) {
            this.languageStore = languageStore;
            this.appStrings$ = this.languageStore.appStrings$;
            this.vm$ = null;
        }
        BulkActionMenuComponent.prototype.ngOnInit = function () {
            var status$ = this.selectionSource.getSelectionStatus();
            var count$ = this.selectionSource.getSelectedCount();
            var actions$ = this.actionSource.getBulkActions();
            this.vm$ = rxjs.combineLatest([this.appStrings$, status$, count$, actions$]).pipe(operators.map(function (_a) {
                var _b = __read(_a, 4), appStrings = _b[0], status = _b[1], count = _b[2], actions = _b[3];
                return ({ appStrings: appStrings, status: status, count: count, actions: actions });
            }));
        };
        BulkActionMenuComponent.prototype.checked = function (status) {
            return status === i5.SelectionStatus.ALL;
        };
        BulkActionMenuComponent.prototype.intermediate = function (status) {
            return status === i5.SelectionStatus.SOME || status === i5.SelectionStatus.PAGE;
        };
        BulkActionMenuComponent.prototype.selectPage = function () {
            this.selectionSource.updateSelection(i5.SelectionStatus.PAGE);
        };
        BulkActionMenuComponent.prototype.selectAll = function () {
            this.selectionSource.updateSelection(i5.SelectionStatus.ALL);
        };
        BulkActionMenuComponent.prototype.deselectAll = function () {
            this.selectionSource.updateSelection(i5.SelectionStatus.NONE);
        };
        BulkActionMenuComponent.prototype.toggleSelection = function (status) {
            if (status === i5.SelectionStatus.ALL) {
                this.selectionSource.updateSelection(i5.SelectionStatus.NONE);
                return;
            }
            this.selectionSource.updateSelection(i5.SelectionStatus.ALL);
        };
        BulkActionMenuComponent.prototype.getDropdownConfig = function (actions, appStrings) {
            var _this = this;
            var label = appStrings && appStrings.LBL_BULK_ACTION_BUTTON_LABEL || '';
            var dropdownConfig = {
                label: label,
                klass: ['bulk-action-button', 'btn', 'btn-sm'],
                wrapperKlass: ['bulk-action-group', 'float-left'],
                items: []
            };
            Object.keys(actions).forEach(function (actionKey) {
                var action = actions[actionKey];
                dropdownConfig.items.push({
                    label: appStrings && appStrings[action.labelKey] || '',
                    klass: [actionKey + "-bulk-action"],
                    onClick: function () {
                        _this.actionSource.executeBulkAction(action.key);
                    }
                });
            });
            return dropdownConfig;
        };
        return BulkActionMenuComponent;
    }());
    BulkActionMenuComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-bulk-action-menu',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<div class=\"bulk-action float-left\" *ngIf=\"(vm$ | async) as vm\">\n    <div ngbDropdown class=\"dropdown select-action-group float-left\">\n        <button class=\"bulk-action-button dropdown-toggle btn btn-sm\"\n                type=\"button\"\n                ngbDropdownToggle\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n                aria-hidden=\"true\"\n                aria-label=\"Select Action Menu\">\n            <label class=\"checkbox-container\">\n                <input type=\"checkbox\"\n                       [checked]=\"checked(vm.status)\"\n                       [indeterminate]=\"intermediate(vm.status)\"\n                       (change)=\"toggleSelection(vm.status)\"\n                       aria-hidden=\"true\">\n                <span class=\"checkmark\"></span>\n            </label>\n            <span class=\"bulk-action-selected-number\">{{vm.count > 0 ? (vm.appStrings['LBL_LISTVIEW_SELECTED_OBJECTS'] || '') : ''}} {{vm.count > 0 ? vm.count : ''}}</span>\n        </button>\n        <div class=\"dropdown-menu\"\n             ngbDropdownMenu\n             aria-hidden=\"true\">\n            <a class=\"dropdown-item select-all\" (click)=\"selectAll()\">\n                {{vm.appStrings['LBL_LISTVIEW_OPTION_ENTIRE'] || ''}}\n            </a>\n            <a class=\"dropdown-item select-page\" (click)=\"selectPage()\">\n                {{vm.appStrings['LBL_LISTVIEW_OPTION_CURRENT'] || ''}}\n            </a>\n            <a class=\"dropdown-item deselect-all\" (click)=\"deselectAll()\">\n                {{vm.appStrings['LBL_LISTVIEW_NONE'] || ''}}\n            </a>\n        </div>\n    </div>\n    <scrm-dropdown-button [disabled]=\"vm.count < 1\"\n                          [config]=\"getDropdownConfig(vm.actions, vm.appStrings)\"></scrm-dropdown-button>\n</div>\n"
                },] }
    ];
    BulkActionMenuComponent.ctorParameters = function () { return [
        { type: LanguageStore }
    ]; };
    BulkActionMenuComponent.propDecorators = {
        selectionSource: [{ type: i0.Input }],
        actionSource: [{ type: i0.Input }]
    };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var BulkActionMenuModule = /** @class */ (function () {
        function BulkActionMenuModule() {
        }
        return BulkActionMenuModule;
    }());
    BulkActionMenuModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [BulkActionMenuComponent],
                    exports: [BulkActionMenuComponent],
                    imports: [
                        common.CommonModule,
                        i1$2.NgbModule,
                        DropdownButtonModule,
                    ]
                },] }
    ];

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var ButtonUtils = /** @class */ (function () {
        function ButtonUtils() {
        }
        ButtonUtils.prototype.addOnClickPartial = function (button, partialInput) {
            var _this = this;
            var copy = Object.assign({}, button);
            if (button && 'items' in copy) {
                var items = copy.items;
                copy.items = [];
                items.forEach(function (item) {
                    copy.items.push(_this.addOnClickPartial(item, partialInput));
                });
                return copy;
            }
            copy.onClick = copy.onClick && partial__default['default'](copy.onClick, partialInput);
            return copy;
        };
        return ButtonUtils;
    }());
    ButtonUtils.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function ButtonUtils_Factory() { return new ButtonUtils(); }, token: ButtonUtils, providedIn: "root" });
    ButtonUtils.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    ButtonUtils.ctorParameters = function () { return []; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var BaseChartComponent = /** @class */ (function () {
        function BaseChartComponent(elementRef) {
            this.elementRef = elementRef;
            this.height = 300;
            this.view = [300, this.height];
        }
        BaseChartComponent.prototype.onResize = function () {
            this.calculateView();
        };
        BaseChartComponent.prototype.calculateView = function () {
            var width;
            var el = (this.elementRef && this.elementRef.nativeElement) || {};
            var parentEl = (el.parentElement && el.parentElement.parentElement) || {};
            var parentWidth = (parentEl && parentEl.offsetWidth) || 0;
            if (parentWidth > 0) {
                width = parentWidth;
            }
            else {
                width = window.innerWidth * 0.7;
                if (window.innerWidth > 990) {
                    width = window.innerWidth * 0.23;
                }
            }
            this.view = [width, this.height];
        };
        return BaseChartComponent;
    }());
    BaseChartComponent.decorators = [
        { type: i0.Component, args: [{ template: '' },] }
    ];
    BaseChartComponent.ctorParameters = function () { return [
        { type: i0.ElementRef }
    ]; };
    BaseChartComponent.propDecorators = {
        dataSource: [{ type: i0.Input }]
    };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var BaseChartModule = /** @class */ (function () {
        function BaseChartModule() {
        }
        return BaseChartModule;
    }());
    BaseChartModule.decorators = [
        { type: i0.NgModule, args: [{
                    exports: [
                        BaseChartComponent,
                    ],
                    declarations: [
                        BaseChartComponent,
                    ],
                    imports: [
                        common.CommonModule
                    ]
                },] }
    ];

    var PieGridChartComponent = /** @class */ (function (_super) {
        __extends(PieGridChartComponent, _super);
        function PieGridChartComponent(language, elementRef) {
            var _this = _super.call(this, elementRef) || this;
            _this.language = language;
            _this.elementRef = elementRef;
            _this.height = 700;
            _this.view = [300, _this.height];
            _this.subs = [];
            return _this;
        }
        PieGridChartComponent.prototype.ngOnInit = function () {
            var _this = this;
            if (this.dataSource.options.height) {
                this.height = this.dataSource.options.height;
            }
            this.calculateView();
            this.subs.push(this.dataSource.getResults().subscribe(function (value) {
                _this.parseResults(value);
                _this.calculateHeightBasedOnResults();
                _this.calculateView();
            }));
        };
        PieGridChartComponent.prototype.ngOnDestroy = function () {
            this.subs.forEach(function (sub) { return sub.unsubscribe(); });
        };
        Object.defineProperty(PieGridChartComponent.prototype, "scheme", {
            get: function () {
                return this.dataSource.options.scheme || 'picnic';
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(PieGridChartComponent.prototype, "label", {
            get: function () {
                return this.dataSource.options.label || '';
            },
            enumerable: false,
            configurable: true
        });
        PieGridChartComponent.prototype.onResize = function () {
            this.calculateHeightBasedOnResults();
            this.calculateView();
        };
        PieGridChartComponent.prototype.calculateHeightBasedOnResults = function () {
            if (this.results && this.results.length) {
                var perRow = Math.floor(this.view[0] / 170);
                this.height = (Math.floor(this.results.length / perRow) * 200);
            }
            else {
                this.height = 50;
            }
        };
        PieGridChartComponent.prototype.parseResults = function (value) {
            var _this = this;
            this.results = [];
            if (value.singleSeries && value.singleSeries.length) {
                value.singleSeries.forEach(function (entry) {
                    var parsedValue = parseFloat('' + entry.value);
                    if (!parsedValue) {
                        _this.results.push(entry);
                        return;
                    }
                    _this.results.push({
                        name: entry.name,
                        value: parsedValue
                    });
                });
            }
        };
        return PieGridChartComponent;
    }(BaseChartComponent));
    PieGridChartComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-pie-grid-chart',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<scrm-chart-message-area *ngIf=\"!results || !results.length || results.length < 1\"\n                         labelKey=\"LBL_NO_DATA\"></scrm-chart-message-area>\n<ngx-charts-pie-grid *ngIf=\"results && results.length > 0\"\n                     (window:resize)=\"onResize()\"\n                     [animations]=\"false\"\n                     [view]=\"view\"\n                     [scheme]=\"scheme\"\n                     [label]=\"language.getFieldLabel(label)\"\n                     [results]=\"results\">\n</ngx-charts-pie-grid>\n"
                },] }
    ];
    PieGridChartComponent.ctorParameters = function () { return [
        { type: LanguageStore },
        { type: i0.ElementRef }
    ]; };

    var VerticalBarChartComponent = /** @class */ (function (_super) {
        __extends(VerticalBarChartComponent, _super);
        function VerticalBarChartComponent(elementRef) {
            var _this = _super.call(this, elementRef) || this;
            _this.elementRef = elementRef;
            _this.subs = [];
            return _this;
        }
        VerticalBarChartComponent.prototype.ngOnInit = function () {
            var _this = this;
            if (this.dataSource.options.height) {
                this.height = this.dataSource.options.height;
            }
            this.calculateView();
            this.subs.push(this.dataSource.getResults().subscribe(function (value) {
                _this.results = value.singleSeries;
            }));
        };
        VerticalBarChartComponent.prototype.ngOnDestroy = function () {
            this.subs.forEach(function (sub) { return sub.unsubscribe(); });
        };
        Object.defineProperty(VerticalBarChartComponent.prototype, "scheme", {
            get: function () {
                return this.dataSource.options.scheme || 'picnic';
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(VerticalBarChartComponent.prototype, "gradient", {
            get: function () {
                return this.dataSource.options.gradient || false;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(VerticalBarChartComponent.prototype, "xAxis", {
            get: function () {
                return this.dataSource.options.xAxis || false;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(VerticalBarChartComponent.prototype, "yAxis", {
            get: function () {
                return !i5.isFalse(this.dataSource.options.yAxis);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(VerticalBarChartComponent.prototype, "legend", {
            get: function () {
                return !i5.isFalse(this.dataSource.options.legend);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(VerticalBarChartComponent.prototype, "showXAxisLabel", {
            get: function () {
                return this.dataSource.options.showXAxisLabel || false;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(VerticalBarChartComponent.prototype, "showYAxisLabel", {
            get: function () {
                return this.dataSource.options.showYAxisLabel || false;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(VerticalBarChartComponent.prototype, "xAxisLabel", {
            get: function () {
                return this.dataSource.options.xAxisLabel || '';
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(VerticalBarChartComponent.prototype, "yAxisLabel", {
            get: function () {
                return this.dataSource.options.yAxisLabel || '';
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(VerticalBarChartComponent.prototype, "yAxisTickFormatting", {
            get: function () {
                if (this.dataSource.options.yAxisTickFormatting) {
                    return this.dataSource.tickFormatting;
                }
                return null;
            },
            enumerable: false,
            configurable: true
        });
        VerticalBarChartComponent.prototype.formatTooltipValue = function (value) {
            if (!this.dataSource || !this.dataSource.tooltipFormatting) {
                return value;
            }
            return this.dataSource.tooltipFormatting(value);
        };
        return VerticalBarChartComponent;
    }(BaseChartComponent));
    VerticalBarChartComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-vertical-bar-chart',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<scrm-chart-message-area *ngIf=\"!results || !results.length || results.length < 1\"\n                         labelKey=\"LBL_NO_DATA\"></scrm-chart-message-area>\n<ngx-charts-bar-vertical *ngIf=\"results && results.length > 0\"\n                         class=\"vertical-bar-chart\"\n                         (window:resize)=\"onResize()\"\n                         [animations]=\"false\"\n                         [results]=\"results\"\n                         [view]=\"view\"\n                         [scheme]=\"scheme\"\n                         [gradient]=\"gradient\"\n                         [xAxis]=\"xAxis\"\n                         [yAxis]=\"yAxis\"\n                         [legend]=\"legend\"\n                         [legendPosition]=\"'below'\"\n                         [showXAxisLabel]=\"showXAxisLabel\"\n                         [showYAxisLabel]=\"showYAxisLabel\"\n                         [xAxisLabel]=\"xAxisLabel\"\n                         [yAxisLabel]=\"yAxisLabel\"\n                         [yAxisTickFormatting]=\"yAxisTickFormatting\">\n    <ng-template #tooltipTemplate let-model=\"model\">\n        <div>{{model.name}}</div>\n        <div>{{ formatTooltipValue(model.value) }}</div>\n    </ng-template>\n</ngx-charts-bar-vertical>\n"
                },] }
    ];
    VerticalBarChartComponent.ctorParameters = function () { return [
        { type: i0.ElementRef }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var ChartMessageAreaComponent = /** @class */ (function () {
        function ChartMessageAreaComponent(language) {
            this.language = language;
            this.labelKey = '';
        }
        return ChartMessageAreaComponent;
    }());
    ChartMessageAreaComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-chart-message-area',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<div class=\"d-flex mb-4 mt-4 justify-content-center\">\n    <div *ngIf=\"labelKey\" class=\"lead\">\n        <scrm-label [labelKey]=\"labelKey\"></scrm-label>\n    </div>\n</div>\n\n"
                },] }
    ];
    ChartMessageAreaComponent.ctorParameters = function () { return [
        { type: LanguageStore }
    ]; };
    ChartMessageAreaComponent.propDecorators = {
        labelKey: [{ type: i0.Input }]
    };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var ChartMessageAreaModule = /** @class */ (function () {
        function ChartMessageAreaModule() {
        }
        return ChartMessageAreaModule;
    }());
    ChartMessageAreaModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [ChartMessageAreaComponent],
                    exports: [ChartMessageAreaComponent],
                    imports: [
                        common.CommonModule,
                        LabelModule
                    ]
                },] }
    ];

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var VerticalBarChartModule = /** @class */ (function () {
        function VerticalBarChartModule() {
        }
        return VerticalBarChartModule;
    }());
    VerticalBarChartModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [VerticalBarChartComponent],
                    exports: [VerticalBarChartComponent],
                    imports: [
                        common.CommonModule,
                        ngxCharts.NgxChartsModule,
                        ChartMessageAreaModule
                    ]
                },] }
    ];

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var PieGridChartModule = /** @class */ (function () {
        function PieGridChartModule() {
        }
        return PieGridChartModule;
    }());
    PieGridChartModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [PieGridChartComponent],
                    exports: [PieGridChartComponent],
                    imports: [
                        common.CommonModule,
                        ngxCharts.NgxChartsModule,
                        ChartMessageAreaModule
                    ]
                },] }
    ];

    var LineChartComponent = /** @class */ (function (_super) {
        __extends(LineChartComponent, _super);
        function LineChartComponent(elementRef) {
            var _this = _super.call(this, elementRef) || this;
            _this.elementRef = elementRef;
            _this.subs = [];
            return _this;
        }
        LineChartComponent.prototype.ngOnInit = function () {
            var _this = this;
            if (this.dataSource.options.height) {
                this.height = this.dataSource.options.height;
            }
            this.calculateView();
            this.subs.push(this.dataSource.getResults().subscribe(function (value) {
                _this.results = value.multiSeries;
            }));
            this.scheme = this.getScheme();
            this.gradient = this.getGradient();
            this.xAxis = this.getXAxis();
            this.yAxis = this.getYAxis();
            this.legend = this.getLegend();
            this.xScaleMin = this.getXScaleMin();
            this.xScaleMax = this.getXScaleMax();
            this.xAxisTicks = this.getXAxisTicks();
            this.showXAxisLabel = this.getShowXAxisLabel();
            this.showYAxisLabel = this.getShowYAxisLabel();
            this.xAxisLabel = this.getXAxisLabel();
            this.yAxisLabel = this.getYAxisLabel();
            this.yAxisTickFormatting = this.getYAxisTickFormatting();
            this.xAxisTickFormatting = this.getXAxisTickFormatting();
            this.tooltipDisabled = this.getTooltipDisabled();
        };
        LineChartComponent.prototype.ngOnDestroy = function () {
            this.subs.forEach(function (sub) { return sub.unsubscribe(); });
        };
        LineChartComponent.prototype.getScheme = function () {
            return this.dataSource.options.scheme || 'picnic';
        };
        LineChartComponent.prototype.getGradient = function () {
            return this.dataSource.options.gradient || false;
        };
        LineChartComponent.prototype.getXAxis = function () {
            return !i5.isFalse(this.dataSource.options.xAxis);
        };
        LineChartComponent.prototype.getYAxis = function () {
            return !i5.isFalse(this.dataSource.options.yAxis);
        };
        LineChartComponent.prototype.getLegend = function () {
            return !i5.isFalse(this.dataSource.options.legend);
        };
        LineChartComponent.prototype.getXScaleMin = function () {
            return this.dataSource.options.xScaleMin || null;
        };
        LineChartComponent.prototype.getXScaleMax = function () {
            return this.dataSource.options.xScaleMax || null;
        };
        LineChartComponent.prototype.getXAxisTicks = function () {
            return this.dataSource.options.xAxisTicks || null;
        };
        LineChartComponent.prototype.getShowXAxisLabel = function () {
            return !i5.isFalse(this.dataSource.options.showXAxisLabel);
        };
        LineChartComponent.prototype.getShowYAxisLabel = function () {
            return this.dataSource.options.showYAxisLabel || false;
        };
        LineChartComponent.prototype.getXAxisLabel = function () {
            return this.dataSource.options.xAxisLabel || '';
        };
        LineChartComponent.prototype.getYAxisLabel = function () {
            return this.dataSource.options.yAxisLabel || '';
        };
        LineChartComponent.prototype.getYAxisTickFormatting = function () {
            if (!this.dataSource.options.yAxisTickFormatting) {
                return null;
            }
            return this.dataSource.tickFormatting || null;
        };
        LineChartComponent.prototype.getXAxisTickFormatting = function () {
            if (!this.dataSource.options.xAxisTickFormatting) {
                return null;
            }
            return this.dataSource.tickFormatting || null;
        };
        LineChartComponent.prototype.getTooltipDisabled = function () {
            return this.dataSource.options.tooltipDisabled || false;
        };
        return LineChartComponent;
    }(BaseChartComponent));
    LineChartComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-line-chart',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<scrm-chart-message-area *ngIf=\"!results || !results.length || results.length < 1\"\n                         labelKey=\"LBL_NO_DATA\"></scrm-chart-message-area>\n<ngx-charts-line-chart *ngIf=\"results && results.length > 0\"\n                       class=\"line-chart\"\n                       (window:resize)=\"onResize()\"\n                       [animations]=\"false\"\n                       [results]=\"results\"\n                       [view]=\"view\"\n                       [scheme]=\"scheme\"\n                       [gradient]=\"gradient\"\n                       [xAxis]=\"xAxis\"\n                       [yAxis]=\"yAxis\"\n                       [legend]=\"legend\"\n                       [xScaleMin]=\"xScaleMin\"\n                       [xScaleMax]=\"xScaleMax\"\n                       [xAxisTicks]=\"xAxisTicks\"\n                       [showXAxisLabel]=\"showXAxisLabel\"\n                       [showYAxisLabel]=\"showYAxisLabel\"\n                       [xAxisLabel]=\"xAxisLabel\"\n                       [legendPosition]=\"'below'\"\n                       [autoScale]=\"true\"\n                       [yAxisTickFormatting]=\"yAxisTickFormatting\"\n                       [xAxisTickFormatting]=\"xAxisTickFormatting\"\n                       [tooltipDisabled]=\"tooltipDisabled\"\n                       [yAxisLabel]=\"yAxisLabel\">\n</ngx-charts-line-chart>\n"
                },] }
    ];
    LineChartComponent.ctorParameters = function () { return [
        { type: i0.ElementRef }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var LineChartModule = /** @class */ (function () {
        function LineChartModule() {
        }
        return LineChartModule;
    }());
    LineChartModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [LineChartComponent],
                    exports: [LineChartComponent],
                    imports: [
                        common.CommonModule,
                        ngxCharts.NgxChartsModule,
                        ChartMessageAreaModule
                    ]
                },] }
    ];

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var chartModules = [
        LineChartModule,
        PieGridChartModule,
        VerticalBarChartModule
    ];
    var chartTypeMap = {
        'line-chart': LineChartComponent,
        'pie-grid': PieGridChartComponent,
        'vertical-bar': VerticalBarChartComponent
    };

    var ChartRegistry = /** @class */ (function (_super) {
        __extends(ChartRegistry, _super);
        function ChartRegistry() {
            return _super.call(this) || this;
        }
        ChartRegistry.prototype.initDefault = function () {
            var _this = this;
            Object.keys(chartTypeMap).forEach(function (key) {
                _this.register('default', key, chartTypeMap[key]);
            });
        };
        return ChartRegistry;
    }(i5.BaseComponentRegistry));
    ChartRegistry.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function ChartRegistry_Factory() { return new ChartRegistry(); }, token: ChartRegistry, providedIn: "root" });
    ChartRegistry.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    ChartRegistry.ctorParameters = function () { return []; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var ChartComponent = /** @class */ (function () {
        function ChartComponent(registry) {
            this.registry = registry;
            this.dataSource = null;
        }
        Object.defineProperty(ChartComponent.prototype, "chartType", {
            get: function () {
                return this.registry.get('default', this.type);
            },
            enumerable: false,
            configurable: true
        });
        ChartComponent.prototype.ngOnInit = function () {
        };
        ChartComponent.prototype.isConfigured = function () {
            return !!(this.type && this.dataSource && this.chartType);
        };
        return ChartComponent;
    }());
    ChartComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-chart',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<scrm-chart-message-area *ngIf=\"!isConfigured()\" labelKey=\"LBL_BAD_CONFIG\"></scrm-chart-message-area>\n<ndc-dynamic *ngIf=\"isConfigured()\"\n             [ndcDynamicComponent]=\"chartType\"\n             [ndcDynamicInputs]=\"{'dataSource': dataSource}\">\n</ndc-dynamic>\n\n"
                },] }
    ];
    ChartComponent.ctorParameters = function () { return [
        { type: ChartRegistry }
    ]; };
    ChartComponent.propDecorators = {
        dataSource: [{ type: i0.Input, args: ['dataSource',] }],
        type: [{ type: i0.Input, args: ['type',] }]
    };

    var ChartModule = /** @class */ (function () {
        function ChartModule() {
        }
        return ChartModule;
    }());
    ChartModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [ChartComponent],
                    exports: [ChartComponent],
                    imports: __spreadArray(__spreadArray([
                        common.CommonModule
                    ], __read(chartModules)), [
                        ngDynamicComponent.DynamicModule,
                        ChartMessageAreaModule,
                    ]),
                    schemas: [i0.CUSTOM_ELEMENTS_SCHEMA]
                },] }
    ];

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var CloseButtonComponent = /** @class */ (function () {
        function CloseButtonComponent() {
            this.buttonClasses = ['close-button'];
        }
        CloseButtonComponent.prototype.getConfig = function () {
            var btn = i5.Button.fromButton(this.config);
            btn.addClasses(this.buttonClasses);
            return btn;
        };
        return CloseButtonComponent;
    }());
    CloseButtonComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-close-button',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<scrm-button *ngIf=\"config\" [config]=\"getConfig()\">\n    <span aria-hidden=\"true\">&times;</span>\n</scrm-button>\n"
                },] }
    ];
    CloseButtonComponent.ctorParameters = function () { return []; };
    CloseButtonComponent.propDecorators = {
        config: [{ type: i0.Input }]
    };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var CloseButtonModule = /** @class */ (function () {
        function CloseButtonModule() {
        }
        return CloseButtonModule;
    }());
    CloseButtonModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [CloseButtonComponent],
                    exports: [
                        CloseButtonComponent
                    ],
                    imports: [
                        common.CommonModule,
                        ButtonModule
                    ]
                },] }
    ];

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var ColumnChooserComponent = /** @class */ (function () {
        function ColumnChooserComponent(appState, languageStore, modal) {
            this.appState = appState;
            this.languageStore = languageStore;
            this.modal = modal;
            this.titleKey = 'LBL_COLUMN_SELECTOR_MODAL_TITLE';
        }
        ColumnChooserComponent.prototype.drop = function (event) {
            if (event.previousContainer === event.container) {
                dragDrop.moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);
            }
            else {
                dragDrop.transferArrayItem(event.previousContainer.data, event.container.data, event.previousIndex, event.currentIndex);
            }
        };
        ColumnChooserComponent.prototype.getHeaderLabel = function () {
            return this.languageStore.getFieldLabel('LBL_COLUMN_SELECTOR_MODAL_TITLE');
        };
        ColumnChooserComponent.prototype.getColumnLabel = function (label) {
            return this.languageStore.getFieldLabel(label, this.appState.getModule());
        };
        ColumnChooserComponent.prototype.ngOnInit = function () {
            var _this = this;
            this.closeButtonIcon = {
                klass: ['btn', 'btn-outline-light', 'btn-sm'],
                onClick: function () {
                    _this.modal.close({
                        type: 'close-button'
                    });
                }
            };
            this.closeButton = {
                klass: ['btn', 'modal-button-cancel'],
                labelKey: 'LBL_COLUMN_SELECTOR_CLOSE_BUTTON',
                onClick: function () {
                    _this.modal.close({
                        type: 'close-button'
                    });
                }
            };
            this.saveButton = {
                klass: ['btn', 'modal-button-save'],
                labelKey: 'LBL_COLUMN_SELECTOR_SAVE_BUTTON',
                onClick: function () {
                    _this.modal.close({
                        type: 'close-button',
                        displayed: _this.displayed,
                        hidden: _this.hidden
                    });
                }
            };
        };
        return ColumnChooserComponent;
    }());
    ColumnChooserComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-columnchooser',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n\n<scrm-modal\n    [closable]=\"true\"\n    [close]=\"closeButtonIcon\"\n    [title]=\"getHeaderLabel()\"\n    [titleKey]=\"titleKey\"\n    klass=\"column-chooser-modal\">\n\n    <div modal-body>\n\n        <div class=\"d-flex bd-highlight\">\n            <div class=\"p-2 flex-fill bd-highlight column-chooser-container\">\n                <h2 class=\"column-chooser-title\">\n                    <scrm-label labelKey=\"LBL_COLUMN_SELECTOR_DISPLAYED_COLS\"></scrm-label>\n                </h2>\n\n                <div\n                    cdkDropList\n                    #displayedList=\"cdkDropList\"\n                    [cdkDropListData]=\"displayed\"\n                    [cdkDropListConnectedTo]=\"[hiddenList]\"\n                    class=\"column-chooser-list\"\n                    (cdkDropListDropped)=\"drop($event)\">\n                    <div class=\"column-chooser-item column-displayed\" *ngFor=\"let item of displayed\"\n                         cdkDrag>\n                        {{getColumnLabel(item.label)}}\n                    </div>\n                </div>\n            </div>\n            <div class=\"p-2 flex-fill bd-highlight column-chooser-container\">\n                <h2 class=\"column-chooser-title\">\n                    <scrm-label labelKey=\"LBL_COLUMN_SELECTOR_HIDDEN_COLS\"></scrm-label>\n                </h2>\n\n                <div\n                    cdkDropList\n                    #hiddenList=\"cdkDropList\"\n                    [cdkDropListData]=\"hidden\"\n                    [cdkDropListConnectedTo]=\"[displayedList]\"\n                    class=\"column-chooser-list\"\n                    (cdkDropListDropped)=\"drop($event)\">\n                    <div class=\"column-chooser-item column-hidden\" *ngFor=\"let item of hidden\" cdkDrag>\n                        {{getColumnLabel(item.label)}}\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div modal-footer>\n        <div class=\"modal-buttons\">\n            <scrm-button data-dismiss=\"modal\" [config]=\"closeButton\"></scrm-button>\n            <scrm-button [config]=\"saveButton\"></scrm-button>\n        </div>\n    </div>\n\n</scrm-modal>\n"
                },] }
    ];
    ColumnChooserComponent.ctorParameters = function () { return [
        { type: AppStateStore },
        { type: LanguageStore },
        { type: i1$2.NgbActiveModal }
    ]; };
    ColumnChooserComponent.propDecorators = {
        displayed: [{ type: i0.Input }],
        hidden: [{ type: i0.Input }]
    };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var ModalComponent = /** @class */ (function () {
        function ModalComponent() {
            this.klass = '';
            this.headerKlass = '';
            this.bodyKlass = '';
            this.footerKlass = '';
            this.titleKey = '';
            this.closable = false;
            this.close = {
                klass: ['btn', 'btn-outline-light', 'btn-sm']
            };
        }
        return ModalComponent;
    }());
    ModalComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-modal',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<div [class]=\"klass\">\n    <div class=\"modal-header {{headerKlass}} d-flex align-items-center\">\n        <div class=\"modal-title\">\n            <scrm-label *ngIf=\"titleKey\" [labelKey]=\"titleKey\"></scrm-label>\n        </div>\n        <scrm-close-button *ngIf=\"closable\" [config]=\"close\"></scrm-close-button>\n    </div>\n\n    <div class=\"modal-body {{bodyKlass}}\">\n        <ng-content select=\"[modal-body]\"></ng-content>\n    </div>\n\n    <div class=\"modal-footer {{footerKlass}}\">\n        <ng-content select=\"[modal-footer]\"></ng-content>\n    </div>\n</div>\n"
                },] }
    ];
    ModalComponent.propDecorators = {
        klass: [{ type: i0.Input }],
        headerKlass: [{ type: i0.Input }],
        bodyKlass: [{ type: i0.Input }],
        footerKlass: [{ type: i0.Input }],
        titleKey: [{ type: i0.Input }],
        closable: [{ type: i0.Input }],
        close: [{ type: i0.Input }]
    };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var ModalModule = /** @class */ (function () {
        function ModalModule() {
        }
        return ModalModule;
    }());
    ModalModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [ModalComponent],
                    exports: [ModalComponent],
                    imports: [
                        common.CommonModule,
                        i3.AngularSvgIconModule,
                        CloseButtonModule,
                        LabelModule
                    ]
                },] }
    ];

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var ColumnChooserModule = /** @class */ (function () {
        function ColumnChooserModule() {
        }
        return ColumnChooserModule;
    }());
    ColumnChooserModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [ColumnChooserComponent],
                    exports: [ColumnChooserComponent],
                    imports: [
                        common.CommonModule,
                        dragDrop.DragDropModule,
                        CloseButtonModule,
                        ModalModule,
                        LabelModule,
                        ButtonModule
                    ],
                    entryComponents: [ColumnChooserComponent]
                },] }
    ];

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var initialState$e = {
        userPreferences: {},
        loading: false
    };
    var internalState$2 = i5.deepClone(initialState$e);
    var cache$$1 = null;
    var UserPreferenceStore = /** @class */ (function () {
        function UserPreferenceStore(collectionGQL) {
            this.collectionGQL = collectionGQL;
            this.store = new rxjs.BehaviorSubject(internalState$2);
            this.state$ = this.store.asObservable();
            this.resourceName = 'userPreferences';
            this.fieldsMetadata = {
                fields: [
                    'id',
                    '_id',
                    'value',
                    'items'
                ]
            };
            /**
             * Public long-lived observable streams
             */
            this.userPreferences$ = this.state$.pipe(operators.map(function (state) { return state.userPreferences; }), operators.distinctUntilChanged());
            this.loading$ = this.state$.pipe(operators.map(function (state) { return state.loading; }));
        }
        /**
         * Public Api
         */
        /**
         * Clear state
         */
        UserPreferenceStore.prototype.clear = function () {
            cache$$1 = null;
            this.updateState(i5.deepClone(initialState$e));
        };
        UserPreferenceStore.prototype.clearAuthBased = function () {
            this.clear();
        };
        /**
         * Get user preferences value by key
         *
         * @param {string} key to retrieve
         * @returns any users preference
         */
        UserPreferenceStore.prototype.getUserPreference = function (key) {
            if (!internalState$2.userPreferences || !internalState$2.userPreferences[key]) {
                return null;
            }
            return internalState$2.userPreferences[key];
        };
        /**
         * Initial UserPreferences load if not cached and update state.
         * Returns observable to be used in resolver if needed
         *
         * @returns {object} Observable<any>
         */
        UserPreferenceStore.prototype.load = function () {
            var _this = this;
            this.updateState(Object.assign(Object.assign({}, internalState$2), { loading: true }));
            return this.getUserPreferences().pipe(operators.tap(function (userPreferences) {
                _this.updateState(Object.assign(Object.assign({}, internalState$2), { userPreferences: userPreferences, loading: false }));
            }));
        };
        /**
         * Internal API
         */
        /**
         * Update the state
         *
         * @param {object} state to set
         */
        UserPreferenceStore.prototype.updateState = function (state) {
            this.store.next(internalState$2 = state);
        };
        /**
         * Get UserPreferences cached Observable or call the backend
         *
         * @returns {object} Observable<any>
         */
        UserPreferenceStore.prototype.getUserPreferences = function () {
            if (cache$$1 == null) {
                cache$$1 = this.fetch().pipe(operators.shareReplay(1));
            }
            return cache$$1;
        };
        /**
         * Fetch the User Preferences from the backend
         *
         * @returns {object} Observable<any>
         */
        UserPreferenceStore.prototype.fetch = function () {
            return this.collectionGQL
                .fetchAll(this.resourceName, this.fieldsMetadata).pipe(operators.map(function (_a) {
                var data = _a.data;
                var userPreferences = {};
                if (data.userPreferences && data.userPreferences.edges) {
                    data.userPreferences.edges.forEach(function (edge) {
                        if (!edge.node.items) {
                            return;
                        }
                        Object.keys(edge.node.items).forEach(function (key) {
                            userPreferences[key] = edge.node.items[key];
                        });
                    });
                }
                return userPreferences;
            }));
        };
        return UserPreferenceStore;
    }());
    UserPreferenceStore.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function UserPreferenceStore_Factory() { return new UserPreferenceStore(i0__namespace.ɵɵinject(CollectionGQL)); }, token: UserPreferenceStore, providedIn: "root" });
    UserPreferenceStore.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root',
                },] }
    ];
    UserPreferenceStore.ctorParameters = function () { return [
        { type: CollectionGQL }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var FormControlUtils = /** @class */ (function () {
        function FormControlUtils() {
        }
        FormControlUtils.prototype.getTrimmedInputValue = function (inputValue) {
            // Handle the cases, when input values are not string e.g. multienums: String[]
            // Process the input, only when it's a string else return as it is
            if (typeof inputValue !== 'string') {
                return inputValue;
            }
            return inputValue.trim();
        };
        FormControlUtils.prototype.isEmptyInputValue = function (inputValue) {
            // Handle the cases, when input value is an string, array, objects or any other type
            return inputValue == null
                || typeof inputValue === 'undefined'
                || inputValue === ''
                || inputValue.length === 0;
        };
        FormControlUtils.prototype.isEmptyTrimmedInputValue = function (inputValue) {
            return this.isEmptyInputValue(this.getTrimmedInputValue(inputValue));
        };
        FormControlUtils.prototype.isEmptyBooleanInputValue = function (inputValue) {
            return this.isEmptyInputValue(inputValue) || inputValue === 'false' || inputValue === false || inputValue === '';
        };
        return FormControlUtils;
    }());
    FormControlUtils.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function FormControlUtils_Factory() { return new FormControlUtils(); }, token: FormControlUtils, providedIn: "root" });
    FormControlUtils.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var NumberFormatter = /** @class */ (function () {
        function NumberFormatter(preferences, formUtils, locale) {
            this.preferences = preferences;
            this.formUtils = formUtils;
            this.locale = locale;
        }
        NumberFormatter.prototype.toUserFormat = function (value) {
            if (i5.isVoid(value) || value === '') {
                return '';
            }
            var formatted = common.formatNumber(Number(value), this.locale);
            return this.replaceSeparators(formatted);
        };
        NumberFormatter.prototype.toInternalFormat = function (value) {
            if (!value) {
                return value;
            }
            var decimalSymbol = this.getDecimalsSymbol() || '.';
            var groupSymbol = this.getGroupSymbol() || ',';
            var decimalSymbolRegex = new RegExp(decimalSymbol, 'g');
            if (decimalSymbol === '.') {
                decimalSymbolRegex = new RegExp('\\.', 'g');
            }
            var groupSymbolRegex = new RegExp(groupSymbol, 'g');
            if (groupSymbol === '.') {
                groupSymbolRegex = new RegExp('\\.', 'g');
            }
            value = value.replace(groupSymbolRegex, 'group_separator');
            value = value.replace(decimalSymbolRegex, 'decimal_separator');
            value = value.replace(/decimal_separator/g, '.');
            value = value.replace(/group_separator/g, '');
            return value;
        };
        NumberFormatter.prototype.getFloatUserFormatPattern = function () {
            var group = this.getGroupSymbol();
            var decimals = this.getDecimalsSymbol();
            var pattern = '^(';
            pattern += '(\\d{1,3}(\\' + group + '\\d{3})*(\\' + decimals + '\\d+)?)|';
            pattern += '\\d*|';
            pattern += '(\\d+(\\' + decimals + '\\d+)?)|';
            pattern += '(\\d+(\\.\\d+)?)';
            pattern += ')$';
            return pattern;
        };
        NumberFormatter.prototype.getIntUserFormatPattern = function () {
            var group = this.getGroupSymbol();
            var pattern = '^(';
            pattern += '(\\d{1,3}(\\' + group + '\\d{3})*)|';
            pattern += '\\d*';
            pattern += ')$';
            return pattern;
        };
        NumberFormatter.prototype.getGroupSymbol = function () {
            var separator = this.preferences.getUserPreference('num_grp_sep');
            if (separator) {
                return separator;
            }
            return ',';
        };
        NumberFormatter.prototype.getDecimalsSymbol = function () {
            var separator = this.preferences.getUserPreference('dec_sep');
            if (separator) {
                return separator;
            }
            return '.';
        };
        NumberFormatter.prototype.replaceSeparators = function (transformed) {
            if (!transformed) {
                return transformed;
            }
            transformed = transformed.replace(/,/g, 'group_separator');
            transformed = transformed.replace(/\./g, 'decimal_separator');
            var decimalSymbol = this.getDecimalsSymbol() || '.';
            var groupSymbol = this.getGroupSymbol() || ',';
            transformed = transformed.replace(/decimal_separator/g, decimalSymbol);
            transformed = transformed.replace(/group_separator/g, groupSymbol);
            return transformed;
        };
        NumberFormatter.prototype.validateIntUserFormat = function (inputValue) {
            var trimmedInputValue = this.formUtils.getTrimmedInputValue(inputValue);
            if (this.formUtils.isEmptyInputValue(trimmedInputValue)) {
                return false;
            }
            var regex = new RegExp(this.getIntUserFormatPattern());
            if (regex.test(trimmedInputValue)) {
                return false;
            }
        };
        NumberFormatter.prototype.validateFloatUserFormat = function (inputValue) {
            var trimmedInputValue = this.formUtils.getTrimmedInputValue(inputValue);
            if (this.formUtils.isEmptyInputValue(trimmedInputValue)) {
                return false;
            }
            var regex = new RegExp(this.getFloatUserFormatPattern());
            return !regex.test(trimmedInputValue);
        };
        return NumberFormatter;
    }());
    NumberFormatter.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function NumberFormatter_Factory() { return new NumberFormatter(i0__namespace.ɵɵinject(UserPreferenceStore), i0__namespace.ɵɵinject(FormControlUtils), i0__namespace.ɵɵinject(i0__namespace.LOCALE_ID)); }, token: NumberFormatter, providedIn: "root" });
    NumberFormatter.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    NumberFormatter.ctorParameters = function () { return [
        { type: UserPreferenceStore },
        { type: FormControlUtils },
        { type: String, decorators: [{ type: i0.Inject, args: [i0.LOCALE_ID,] }] }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var DatetimeFormatter = /** @class */ (function () {
        function DatetimeFormatter(preferences, formUtils, locale) {
            var _this = this;
            this.preferences = preferences;
            this.formUtils = formUtils;
            this.locale = locale;
            this.format$ = rxjs.combineLatest([
                this.preferences.userPreferences$
            ]).pipe(operators.map(function () {
                var date = _this.getDateFormat();
                var time = _this.getTimeFormat();
                return { date: date, time: time };
            }));
        }
        DatetimeFormatter.prototype.getDateFormat = function () {
            var dateFormatPreference = this.preferences.getUserPreference('date_format');
            if (dateFormatPreference) {
                return dateFormatPreference;
            }
            return this.getInternalTimeFormat();
        };
        DatetimeFormatter.prototype.getTimeFormat = function () {
            var timeFormatPreference = this.preferences.getUserPreference('time_format');
            if (timeFormatPreference) {
                var format = timeFormatPreference;
                if (format.includes('aaaaaa')) {
                    format = format.replace('aaaaaa', 'aaaaa\'m\'');
                }
                return format;
            }
            return this.getInternalTimeFormat();
        };
        DatetimeFormatter.prototype.getDateTimeFormat = function () {
            var dateFormat = this.getDateFormat();
            var timeFormat = this.getTimeFormat();
            return dateFormat + ' ' + timeFormat;
        };
        DatetimeFormatter.prototype.getInternalDateFormat = function () {
            return 'yyyy-MM-dd';
        };
        DatetimeFormatter.prototype.getInternalTimeFormat = function () {
            return 'HH:mm:ss';
        };
        DatetimeFormatter.prototype.getInternalDateTimeFormat = function () {
            var dateFormat = this.getInternalDateFormat();
            var timeFormat = this.getInternalTimeFormat();
            return dateFormat + ' ' + timeFormat;
        };
        DatetimeFormatter.prototype.getInternalFormat = function () {
            return this.getInternalDateTimeFormat();
        };
        DatetimeFormatter.prototype.getUserFormat = function () {
            return this.getDateTimeFormat();
        };
        DatetimeFormatter.prototype.toUserFormat = function (dateString, options) {
            var fromFormat = (options && options.fromFormat) || '';
            return dateString ? this.formatDateTime(dateString, this.getUserFormat(), fromFormat) : '';
        };
        DatetimeFormatter.prototype.toInternalFormat = function (dateString, options) {
            var fromFormat = (options && options.fromFormat) || '';
            return dateString ? this.formatDateTime(dateString, this.getInternalFormat(), fromFormat) : '';
        };
        DatetimeFormatter.prototype.formatDateTime = function (dateString, format, fromFormat) {
            if (fromFormat === void 0) { fromFormat = ''; }
            var dateTime = this.toDateTime(dateString, fromFormat);
            if (!dateTime.isValid) {
                return dateString;
            }
            return common.formatDate(dateTime.toJSDate(), format, this.locale);
        };
        DatetimeFormatter.prototype.toDateTime = function (datetimeString, fromFormat) {
            if (fromFormat === void 0) { fromFormat = ''; }
            if (!datetimeString) {
                return luxon.DateTime.invalid('empty');
            }
            if (fromFormat) {
                return luxon.DateTime.fromFormat(datetimeString, fromFormat);
            }
            var dateTime = this.fromUserFormat(datetimeString);
            if (!dateTime.isValid) {
                dateTime = this.fromInternalFormat(datetimeString);
            }
            return dateTime;
        };
        DatetimeFormatter.prototype.userDateTimeFormatToStruct = function (datetime) {
            if (!datetime) {
                return null;
            }
            var dateTime = this.toDateTime(datetime);
            if (!dateTime.isValid) {
                return null;
            }
            return {
                date: {
                    day: dateTime.day,
                    month: dateTime.month,
                    year: dateTime.year
                },
                time: {
                    hour: dateTime.hour,
                    minute: dateTime.minute,
                    second: dateTime.second,
                }
            };
        };
        DatetimeFormatter.prototype.userDateFormatToStruct = function (datetime) {
            if (!datetime) {
                return null;
            }
            var dateTime = this.toDateTime(datetime);
            if (!dateTime.isValid) {
                return null;
            }
            return {
                day: dateTime.day,
                month: dateTime.month,
                year: dateTime.year
            };
        };
        DatetimeFormatter.prototype.userTimeFormatToStruct = function (datetime) {
            if (!datetime) {
                return null;
            }
            var dateTime = this.toDateTime(datetime);
            if (!dateTime.isValid) {
                return null;
            }
            return {
                hour: dateTime.hour,
                minute: dateTime.minute,
                second: dateTime.second
            };
        };
        DatetimeFormatter.prototype.fromUserFormat = function (datetime) {
            datetime = datetime.toString();
            datetime = datetime.replace('a', 'A');
            datetime = datetime.replace('p', 'P');
            datetime = datetime.replace('m', 'M');
            var format = this.getUserFormat();
            format = format.replace('aaaaa\'m\'', 'a');
            return luxon.DateTime.fromFormat(datetime, format);
        };
        DatetimeFormatter.prototype.fromInternalFormat = function (datetime) {
            var format = this.getInternalFormat();
            return luxon.DateTime.fromFormat(datetime.toString(), format);
        };
        DatetimeFormatter.prototype.validateUserFormat = function (inputValue) {
            var trimmedInputValue = this.formUtils.getTrimmedInputValue(inputValue);
            if (this.formUtils.isEmptyInputValue(trimmedInputValue)) {
                return false;
            }
            var dateTime = this.fromUserFormat(trimmedInputValue);
            return !dateTime.isValid;
        };
        return DatetimeFormatter;
    }());
    DatetimeFormatter.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function DatetimeFormatter_Factory() { return new DatetimeFormatter(i0__namespace.ɵɵinject(UserPreferenceStore), i0__namespace.ɵɵinject(FormControlUtils), i0__namespace.ɵɵinject(i0__namespace.LOCALE_ID)); }, token: DatetimeFormatter, providedIn: "root" });
    DatetimeFormatter.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    DatetimeFormatter.ctorParameters = function () { return [
        { type: UserPreferenceStore },
        { type: FormControlUtils },
        { type: String, decorators: [{ type: i0.Inject, args: [i0.LOCALE_ID,] }] }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var CurrencyFormatter = /** @class */ (function () {
        function CurrencyFormatter(preferences, numberFormatter, locale) {
            this.preferences = preferences;
            this.numberFormatter = numberFormatter;
            this.locale = locale;
        }
        CurrencyFormatter.prototype.toUserFormat = function (value, options) {
            if (options === void 0) { options = null; }
            if (i5.isVoid(value) || value === '') {
                return '';
            }
            var symbol = (options && options.symbol) || this.getSymbol();
            var code = (options && options.code) || this.getCode();
            var digits = null;
            if (options && options.digits !== null && isFinite(options.digits)) {
                digits = options.digits;
            }
            var digitsInfo = this.getDigitsInfo(digits);
            var formatted;
            if (options && options.mode === 'edit') {
                formatted = common.formatNumber(Number(value), this.locale, digitsInfo);
                return this.replaceSeparators(formatted);
            }
            formatted = common.formatCurrency(Number(value), this.locale, symbol, code, digitsInfo);
            return this.replaceSeparators(formatted);
        };
        CurrencyFormatter.prototype.toInternalFormat = function (value) {
            if (!value) {
                return '';
            }
            var transformed = value.replace(this.getSymbol(), '');
            return this.numberFormatter.toInternalFormat(transformed);
        };
        CurrencyFormatter.prototype.getCurrencyFormat = function () {
            var currencyFormat = this.preferences.getUserPreference('currency');
            if (currencyFormat) {
                return currencyFormat;
            }
            return this.getDefaultFormat();
        };
        CurrencyFormatter.prototype.getDefaultFormat = function () {
            return {
                iso4217: 'USD',
                name: 'US Dollars',
                symbol: '$'
            };
        };
        CurrencyFormatter.prototype.getCode = function () {
            return this.getCurrencyFormat().iso4217;
        };
        CurrencyFormatter.prototype.getSymbol = function () {
            return this.getCurrencyFormat().symbol;
        };
        CurrencyFormatter.prototype.getDigits = function () {
            var digits = this.preferences.getUserPreference('default_currency_significant_digits');
            if (digits) {
                return digits;
            }
            return 2;
        };
        CurrencyFormatter.prototype.getDigitsInfo = function (definedDigits) {
            var digitInfo = '1.2-2';
            var digits = this.getDigits();
            if (definedDigits !== null && isFinite(definedDigits)) {
                digits = definedDigits;
            }
            if (digits !== null && isFinite(digits)) {
                if (digits < 1) {
                    digitInfo = '1.0-0';
                }
                else {
                    digitInfo = "1." + digits + "-" + digits;
                }
            }
            return digitInfo;
        };
        CurrencyFormatter.prototype.replaceSeparators = function (transformed) {
            return this.numberFormatter.replaceSeparators(transformed);
        };
        return CurrencyFormatter;
    }());
    CurrencyFormatter.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function CurrencyFormatter_Factory() { return new CurrencyFormatter(i0__namespace.ɵɵinject(UserPreferenceStore), i0__namespace.ɵɵinject(NumberFormatter), i0__namespace.ɵɵinject(i0__namespace.LOCALE_ID)); }, token: CurrencyFormatter, providedIn: "root" });
    CurrencyFormatter.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    CurrencyFormatter.ctorParameters = function () { return [
        { type: UserPreferenceStore },
        { type: NumberFormatter },
        { type: String, decorators: [{ type: i0.Inject, args: [i0.LOCALE_ID,] }] }
    ]; };

    var DateFormatter = /** @class */ (function (_super) {
        __extends(DateFormatter, _super);
        function DateFormatter() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        DateFormatter.prototype.getInternalFormat = function () {
            return this.getInternalDateFormat();
        };
        DateFormatter.prototype.getUserFormat = function () {
            return this.getDateFormat();
        };
        return DateFormatter;
    }(DatetimeFormatter));
    DateFormatter.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function DateFormatter_Factory() { return new DateFormatter(i0__namespace.ɵɵinject(UserPreferenceStore), i0__namespace.ɵɵinject(FormControlUtils), i0__namespace.ɵɵinject(i0__namespace.LOCALE_ID)); }, token: DateFormatter, providedIn: "root" });
    DateFormatter.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var PhoneFormatter = /** @class */ (function () {
        function PhoneFormatter(formUtils) {
            this.formUtils = formUtils;
        }
        PhoneFormatter.prototype.toUserFormat = function (value) {
            return value;
        };
        PhoneFormatter.prototype.toInternalFormat = function (value) {
            return value;
        };
        PhoneFormatter.prototype.getUserFormatPattern = function () {
            return '^([\\+]?|00)((([(]{0,1}\\s*[0-9]{1,4}\\s*[)]{0,1})\\s*)*|([\\-\\s\\./0-9])*)+$';
        };
        PhoneFormatter.prototype.validateUserFormat = function (inputValue) {
            var trimmedInputValue = this.formUtils.getTrimmedInputValue(inputValue);
            if (this.formUtils.isEmptyInputValue(trimmedInputValue)) {
                return false;
            }
            var regex = new RegExp(this.getUserFormatPattern());
            return !regex.test(trimmedInputValue);
        };
        return PhoneFormatter;
    }());
    PhoneFormatter.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function PhoneFormatter_Factory() { return new PhoneFormatter(i0__namespace.ɵɵinject(FormControlUtils)); }, token: PhoneFormatter, providedIn: "root" });
    PhoneFormatter.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    PhoneFormatter.ctorParameters = function () { return [
        { type: FormControlUtils }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var DataTypeFormatter = /** @class */ (function () {
        function DataTypeFormatter(currencyFormatter, numberFormatter, dateFormatter, datetimeFormatter, phoneFormatter) {
            this.currencyFormatter = currencyFormatter;
            this.numberFormatter = numberFormatter;
            this.dateFormatter = dateFormatter;
            this.datetimeFormatter = datetimeFormatter;
            this.phoneFormatter = phoneFormatter;
            this.map = {};
            this.map.int = numberFormatter;
            this.map.float = numberFormatter;
            this.map.date = dateFormatter;
            this.map.datetime = datetimeFormatter;
            this.map.currency = currencyFormatter;
            this.map.phone = phoneFormatter;
        }
        DataTypeFormatter.prototype.toUserFormat = function (dataType, value, options) {
            if (!dataType) {
                return value;
            }
            var formatter = this.map[dataType];
            if (!formatter) {
                return value;
            }
            return formatter.toUserFormat(value, options);
        };
        DataTypeFormatter.prototype.toInternalFormat = function (dataType, value) {
            if (!dataType) {
                return value;
            }
            var formatter = this.map[dataType];
            if (!formatter) {
                return value;
            }
            return formatter.toInternalFormat(value);
        };
        return DataTypeFormatter;
    }());
    DataTypeFormatter.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function DataTypeFormatter_Factory() { return new DataTypeFormatter(i0__namespace.ɵɵinject(CurrencyFormatter), i0__namespace.ɵɵinject(NumberFormatter), i0__namespace.ɵɵinject(DateFormatter), i0__namespace.ɵɵinject(DatetimeFormatter), i0__namespace.ɵɵinject(PhoneFormatter)); }, token: DataTypeFormatter, providedIn: "root" });
    DataTypeFormatter.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    DataTypeFormatter.ctorParameters = function () { return [
        { type: CurrencyFormatter },
        { type: NumberFormatter },
        { type: DateFormatter },
        { type: DatetimeFormatter },
        { type: PhoneFormatter }
    ]; };

    var DynamicLabelService = /** @class */ (function () {
        function DynamicLabelService(typeFormatter, language) {
            var _this = this;
            this.typeFormatter = typeFormatter;
            this.language = language;
            this.valuePipes = {};
            this.fieldPipes = {};
            this.valuePipes.int = function (value) { return _this.valueTypeFormat('int', value); };
            this.valuePipes.float = function (value) { return _this.valueTypeFormat('float', value); };
            this.valuePipes.date = function (value) { return _this.valueTypeFormat('date', value); };
            this.valuePipes.datetime = function (value) { return _this.valueTypeFormat('datetime', value); };
            this.valuePipes.currency = function (value) { return _this.valueTypeFormat('currency', value); };
            this.valuePipes.phone = function (value) { return _this.valueTypeFormat('phone', value); };
            this.fieldPipes.int = function (value) { return _this.fieldTypeFormat('int', value); };
            this.fieldPipes.float = function (value) { return _this.fieldTypeFormat('float', value); };
            this.fieldPipes.date = function (value) { return _this.fieldTypeFormat('date', value); };
            this.fieldPipes.datetime = function (value) { return _this.fieldTypeFormat('datetime', value); };
            this.fieldPipes.currency = function (value) { return _this.fieldTypeFormat('currency', value); };
            this.fieldPipes.phone = function (value) { return _this.fieldTypeFormat('phone', value); };
            this.fieldPipes.enum = function (value) { return _this.enumFormat(value); };
            this.fieldPipes.dynamicenum = function (value) { return _this.enumFormat(value); };
            this.fieldPipes.multienum = function (value) { return _this.multiEnumFormat(value); };
        }
        DynamicLabelService.prototype.addValuePipe = function (name, processor) {
            this.valuePipes[name] = processor;
        };
        DynamicLabelService.prototype.addFieldPipe = function (name, processor) {
            this.fieldPipes[name] = processor;
        };
        DynamicLabelService.prototype.parse = function (template, context, fields) {
            var _this = this;
            if (!template) {
                return template;
            }
            var regex = /({{[\s\S]+?}})/g;
            var matches = template.match(regex);
            if (!matches || matches.length < 1) {
                return template;
            }
            var parsedTemplate = template;
            var module = (context && context.module) || '';
            matches.forEach(function (regexMatch) {
                if (!parsedTemplate.includes(regexMatch)) {
                    return;
                }
                var filter = '';
                var value = '';
                var source = 'context';
                var parts = [];
                var variableName = '' + regexMatch;
                variableName = variableName.replace('{{', '');
                variableName = variableName.replace('}}', '');
                variableName = variableName.trim();
                var path = variableName;
                if (variableName.includes('|')) {
                    var _a = __read(variableName.split('|'), 2), name = _a[0], pipe = _a[1];
                    filter = pipe.trim();
                    variableName = name.trim();
                    path = name.trim();
                }
                if (variableName.includes('.')) {
                    parts = variableName.split('.');
                    source = parts[0];
                    variableName = parts[1];
                }
                var sourceValues = context;
                if (source === 'fields') {
                    sourceValues = fields;
                }
                if (!sourceValues || !(variableName in sourceValues)) {
                    parsedTemplate = parsedTemplate.replace(regexMatch, value);
                    return;
                }
                if (source === 'fields') {
                    var field = fields[variableName];
                    if (!field) {
                        parsedTemplate = parsedTemplate.replace(regexMatch, '');
                        return;
                    }
                    if (parts[2] && parts[2] === 'value' && field.type in _this.fieldPipes) {
                        value = _this.fieldPipes[field.type](field);
                        parsedTemplate = parsedTemplate.replace(regexMatch, value);
                        return;
                    }
                    if (parts[2] && parts[2] === 'label') {
                        value = _this.getFieldLabel(field.labelKey, module);
                        parsedTemplate = parsedTemplate.replace(regexMatch, value);
                        return;
                    }
                    value = get__default['default']({ fields: fields }, path, '');
                    parsedTemplate = parsedTemplate.replace(regexMatch, value);
                    return;
                }
                value = get__default['default']({ context: context }, path, '');
                if (filter in _this.valuePipes) {
                    value = _this.valuePipes[filter](value);
                }
                parsedTemplate = parsedTemplate.replace(regexMatch, value);
            });
            return parsedTemplate;
        };
        DynamicLabelService.prototype.valueTypeFormat = function (type, value) {
            return this.typeFormatter.toUserFormat(type, value);
        };
        DynamicLabelService.prototype.fieldTypeFormat = function (type, field) {
            return this.typeFormatter.toUserFormat(type, field.value);
        };
        DynamicLabelService.prototype.enumFormat = function (field) {
            if (i5.isVoid(field.definition.options) || i5.isVoid(field.value)) {
                return '';
            }
            return this.language.getListLabel(field.definition.options, field.value);
        };
        DynamicLabelService.prototype.multiEnumFormat = function (field) {
            var _this = this;
            if (i5.isVoid(field.definition.options) || i5.isVoid(field.valueList) || field.valueList.length < 1) {
                return '';
            }
            var result = [];
            field.valueList.forEach(function (value) {
                if (i5.isVoid(value)) {
                    return;
                }
                result.push(_this.language.getListLabel(field.definition.options, value));
            });
            return result.join(', ');
        };
        DynamicLabelService.prototype.getFieldLabel = function (labelKey, module) {
            if (module === void 0) { module = ''; }
            if (i5.isVoid(labelKey)) {
                return '';
            }
            return this.language.getFieldLabel(labelKey, module);
        };
        return DynamicLabelService;
    }());
    DynamicLabelService.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function DynamicLabelService_Factory() { return new DynamicLabelService(i0__namespace.ɵɵinject(DataTypeFormatter), i0__namespace.ɵɵinject(LanguageStore)); }, token: DynamicLabelService, providedIn: "root" });
    DynamicLabelService.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    DynamicLabelService.ctorParameters = function () { return [
        { type: DataTypeFormatter },
        { type: LanguageStore }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var DynamicLabelComponent = /** @class */ (function () {
        function DynamicLabelComponent(dynamicLabels, language) {
            this.dynamicLabels = dynamicLabels;
            this.language = language;
            this.template = '';
            this.labelKey = '';
            this.context = {};
            this.fields = {};
            this.module = null;
            this.parsedLabel = '';
        }
        DynamicLabelComponent.prototype.ngOnInit = function () {
            var _this = this;
            this.vm$ = this.language.vm$.pipe(operators.tap(function () {
                if (_this.labelKey) {
                    _this.template = _this.language.getFieldLabel(_this.labelKey, _this.module);
                }
                _this.parseLabel();
            }));
        };
        DynamicLabelComponent.prototype.ngOnChanges = function (changes) {
            if (changes.template || changes.context || changes.labelKey || changes.fields) {
                this.parseLabel();
            }
        };
        DynamicLabelComponent.prototype.parseLabel = function () {
            this.parsedLabel = this.dynamicLabels.parse(this.template, this.context, this.fields);
        };
        return DynamicLabelComponent;
    }());
    DynamicLabelComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-dynamic-label',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<ng-container *ngIf=\"(vm$ | async) as vm\">\n    <span class=\"dynamic-label\">{{parsedLabel}}</span>\n</ng-container>\n"
                },] }
    ];
    DynamicLabelComponent.ctorParameters = function () { return [
        { type: DynamicLabelService },
        { type: LanguageStore }
    ]; };
    DynamicLabelComponent.propDecorators = {
        template: [{ type: i0.Input }],
        labelKey: [{ type: i0.Input }],
        context: [{ type: i0.Input }],
        fields: [{ type: i0.Input }],
        module: [{ type: i0.Input }]
    };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var DynamicLabelModule = /** @class */ (function () {
        function DynamicLabelModule() {
        }
        return DynamicLabelModule;
    }());
    DynamicLabelModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [DynamicLabelComponent],
                    exports: [
                        DynamicLabelComponent
                    ],
                    imports: [
                        common.CommonModule
                    ]
                },] }
    ];

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var BaseFieldGridComponent = /** @class */ (function () {
        function BaseFieldGridComponent(breakpointObserver) {
            this.breakpointObserver = breakpointObserver;
            this.special = false;
            this.actions = false;
            this.appendActions = false;
            this.labelDisplay = 'top';
            this.labelClass = {};
            this.inputClass = {};
            this.rowClass = {};
            this.colClass = {};
            this.sizeMap = {
                handset: 1,
                tablet: 2,
                web: 3,
                wide: 4
            };
            this.baseColClass = {
                col: true,
                'form-group': true,
                'm-1': true
            };
            this.baseRowClass = {
                'form-row': true,
                'align-items-center': true
            };
            this.baseLabelClass = {
                'col-form-label-sm': true,
                'mb-0': true,
            };
            this.baseInputClass = {
                'form-control': true,
                'form-control-sm': true,
            };
            this.currentSize = 'web';
            this.subscriptions = [];
        }
        BaseFieldGridComponent.prototype.ngOnInit = function () {
            this.initScreenSizeObserver(this.breakpointObserver);
            this.buildGrid();
            this.colClass = Object.assign(Object.assign({}, this.colClass), this.baseColClass);
            this.rowClass = Object.assign(Object.assign({}, this.rowClass), this.baseRowClass);
            this.labelClass = Object.assign(Object.assign({}, this.labelClass), this.baseLabelClass);
            this.inputClass = Object.assign(Object.assign({}, this.inputClass), this.baseInputClass);
        };
        BaseFieldGridComponent.prototype.ngOnDestroy = function () {
            this.subscriptions.forEach(function (sub) { return sub.unsubscribe(); });
        };
        Object.defineProperty(BaseFieldGridComponent.prototype, "colNumber", {
            get: function () {
                var max = this.sizeMap[this.currentSize];
                if (this.maxColumns && max > this.maxColumns) {
                    return this.maxColumns;
                }
                return max;
            },
            enumerable: false,
            configurable: true
        });
        BaseFieldGridComponent.prototype.addSpecialSlots = function (grid) {
            var _this = this;
            if (!grid || grid.length === 0) {
                return;
            }
            var neededSlots = this.getNeededExtraSlots();
            if (neededSlots.length === 0) {
                return;
            }
            if (this.colNumber === 1) {
                neededSlots.reverse().forEach(function (type) {
                    var newRow = {
                        cols: []
                    };
                    _this.fillRow(newRow);
                    grid.push(newRow);
                    newRow.cols[0][type] = true;
                });
            }
            else if (this.appendActions === true) {
                var lastRow_1 = grid[grid.length - 1];
                var place_1 = this.colNumber - 1;
                neededSlots.forEach(function (type) {
                    lastRow_1.cols[place_1][type] = true;
                });
            }
            else {
                var lastNeededCol = this.colNumber - neededSlots.length;
                var lastRow_2 = grid[grid.length - 1];
                if (lastRow_2.cols[lastNeededCol].field) {
                    lastRow_2 = {
                        cols: []
                    };
                    this.fillRow(lastRow_2);
                    grid.push(lastRow_2);
                }
                var place_2 = this.colNumber - 1;
                neededSlots.forEach(function (type) {
                    lastRow_2.cols[place_2][type] = true;
                    place_2--;
                });
            }
        };
        BaseFieldGridComponent.prototype.getNeededExtraSlots = function () {
            var neededSlots = [];
            if (this.actions) {
                neededSlots.push('actionSlot');
            }
            if (this.special) {
                neededSlots.push('specialSlot');
            }
            return neededSlots;
        };
        BaseFieldGridComponent.prototype.fillRow = function (row) {
            var len = row.cols.length;
            for (var i = len; i < this.colNumber; i++) {
                row.cols.push({});
            }
        };
        BaseFieldGridComponent.prototype.initScreenSizeObserver = function (breakpointObserver) {
            var _this = this;
            this.subscriptions.push(breakpointObserver.observe([
                i1$1.Breakpoints.HandsetPortrait,
            ]).subscribe(function (result) {
                if (result.matches) {
                    _this.currentSize = 'handset';
                    _this.buildGrid();
                }
            }));
            this.subscriptions.push(breakpointObserver.observe([
                i1$1.Breakpoints.TabletPortrait,
            ]).subscribe(function (result) {
                if (result.matches) {
                    _this.currentSize = 'tablet';
                    _this.buildGrid();
                }
            }));
            this.subscriptions.push(breakpointObserver.observe([
                i1$1.Breakpoints.TabletLandscape,
                i1$1.Breakpoints.WebPortrait,
                i1$1.Breakpoints.WebLandscape,
            ]).subscribe(function (result) {
                if (result.matches) {
                    _this.currentSize = 'web';
                    _this.buildGrid();
                }
            }));
            this.subscriptions.push(breakpointObserver.observe([
                i1$1.Breakpoints.XLarge,
            ]).subscribe(function (result) {
                if (result.matches) {
                    _this.currentSize = 'wide';
                    _this.buildGrid();
                }
            }));
        };
        return BaseFieldGridComponent;
    }());
    BaseFieldGridComponent.decorators = [
        { type: i0.Directive }
    ];
    BaseFieldGridComponent.ctorParameters = function () { return [
        { type: i1$1.BreakpointObserver }
    ]; };
    BaseFieldGridComponent.propDecorators = {
        special: [{ type: i0.Input }],
        actions: [{ type: i0.Input }],
        appendActions: [{ type: i0.Input }],
        labelDisplay: [{ type: i0.Input }],
        labelClass: [{ type: i0.Input }],
        inputClass: [{ type: i0.Input }],
        rowClass: [{ type: i0.Input }],
        colClass: [{ type: i0.Input }],
        maxColumns: [{ type: i0.Input }],
        sizeMap: [{ type: i0.Input }]
    };

    var FieldGridComponent = /** @class */ (function (_super) {
        __extends(FieldGridComponent, _super);
        function FieldGridComponent(breakpointObserver) {
            var _this = _super.call(this, breakpointObserver) || this;
            _this.breakpointObserver = breakpointObserver;
            _this.fieldMode = 'detail';
            return _this;
        }
        FieldGridComponent.prototype.ngOnChanges = function () {
            this.buildGrid();
        };
        FieldGridComponent.prototype.buildGrid = function () {
            var _this = this;
            var grid = [];
            if (!this.fields || this.fields.length === 0) {
                this.fieldGrid = [];
                return;
            }
            var col = 0;
            var row = {
                cols: []
            };
            grid.push(row);
            this.fields.forEach(function (field) {
                if (col >= _this.colNumber) {
                    col = 0;
                    row = {
                        cols: []
                    };
                    grid.push(row);
                }
                row.cols.push({
                    field: field
                });
                col++;
            });
            var lastRow = grid[grid.length - 1];
            if (col < this.colNumber) {
                this.fillRow(lastRow);
            }
            this.addSpecialSlots(grid);
            this.fieldGrid = grid;
        };
        return FieldGridComponent;
    }(BaseFieldGridComponent));
    FieldGridComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-field-grid',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<form>\n    <div [ngClass]=\"rowClass\" *ngFor=\"let row of fieldGrid\">\n\n        <div [ngClass]=\"colClass\" *ngFor=\"let col of row.cols\">\n\n            <ng-container>\n                <div [class.align-items-center]=\"labelDisplay === 'inline'\"\n                     [class.flex-column]=\"labelDisplay === 'top'\"\n                     [class.flex-row]=\"labelDisplay === 'inline'\"\n                     [class.justify-content-end]=\"!col.field\"\n                     class=\"d-flex\"\n                >\n                    <div *ngIf=\"col.field && col.field.display !== 'none'\"\n                         [class.pr-3]=\"labelDisplay === 'inline'\">\n                        <label *ngIf=\"col.field.label\" [ngClass]=\"labelClass\">{{col.field.label}}</label>\n                        <scrm-label *ngIf=\"!col.field.label && col.field.labelKey\"\n                                    [labelKey]=\"col.field.labelKey\"\n                                    [ngClass]=\"labelClass\"></scrm-label>\n                    </div>\n                    <div *ngIf=\"col.field && col.field.display !== 'none'\"\n                         [class.flex-grow-1]=\"labelDisplay === 'inline'\">\n                        <scrm-field [field]=\"col.field\"\n                                    [klass]=\"inputClass\"\n                                    [mode]=\"fieldMode\"\n                                    [record]=\"record\"\n                                    [type]=\"col.field.type\">\n                        </scrm-field>\n                    </div>\n                    <ng-container *ngIf=\"col.actionSlot\">\n                        <ng-content select=\"[field-grid-actions]\"></ng-content>\n                    </ng-container>\n                    <ng-container *ngIf=\"col.specialSlot\">\n                        <ng-content select=\"[field-grid-actions]\"></ng-content>\n                    </ng-container>\n                </div>\n            </ng-container>\n        </div>\n    </div>\n</form>\n"
                },] }
    ];
    FieldGridComponent.ctorParameters = function () { return [
        { type: i1$1.BreakpointObserver }
    ]; };
    FieldGridComponent.propDecorators = {
        fields: [{ type: i0.Input }],
        record: [{ type: i0.Input }],
        fieldMode: [{ type: i0.Input }]
    };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var BaseActionManager = /** @class */ (function () {
        function BaseActionManager() {
            this.actions = {
                edit: {},
                create: {},
                list: {},
                detail: {},
                massupdate: {},
                filter: {}
            };
        }
        BaseActionManager.prototype.run = function (action, mode, data) {
            if (!this.actions || !this.actions[mode] || !this.actions[mode][action.key]) {
                return;
            }
            this.actions[mode][action.key].run(data, action);
        };
        BaseActionManager.prototype.getHandler = function (action, mode) {
            var handlerKey = action.key;
            if (action && action.asyncProcess) {
                handlerKey = 'async-process';
            }
            if (!this.actions || !this.actions[mode] || !this.actions[mode][handlerKey]) {
                return null;
            }
            return this.actions[mode][handlerKey];
        };
        BaseActionManager.prototype.addHandler = function (action, mode, handler) {
            if (!this.actions[mode]) {
                this.actions[mode] = {};
            }
            this.actions[mode][action.key] = handler;
        };
        return BaseActionManager;
    }());
    BaseActionManager.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function BaseActionManager_Factory() { return new BaseActionManager(); }, token: BaseActionManager, providedIn: "root" });
    BaseActionManager.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root',
                },] }
    ];

    var FieldLogicActionHandler = /** @class */ (function (_super) {
        __extends(FieldLogicActionHandler, _super);
        function FieldLogicActionHandler() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        FieldLogicActionHandler.prototype.shouldDisplay = function (data) {
            return true;
        };
        ;
        return FieldLogicActionHandler;
    }(i5.ActionHandler));

    var DisplayTypeAction = /** @class */ (function (_super) {
        __extends(DisplayTypeAction, _super);
        function DisplayTypeAction() {
            var _this = _super.call(this) || this;
            _this.key = 'displayType';
            _this.modes = ['edit', 'detail', 'list', 'create', 'massupdate', 'filter'];
            return _this;
        }
        DisplayTypeAction.prototype.run = function (data, action) {
            var record = data.record;
            var field = data.field;
            if (!record || !field) {
                return;
            }
            var activeOnFields = (action.params && action.params.activeOnFields) || {};
            var relatedFields = Object.keys(activeOnFields);
            var activeOnAttributes = (action.params && action.params.activeOnAttributes) || {};
            var relatedAttributesFields = Object.keys(activeOnAttributes);
            if (!relatedFields.length && !relatedAttributesFields.length) {
                return;
            }
            var targetDisplay = action.params && action.params.targetDisplayType;
            if (!targetDisplay) {
                return;
            }
            var isActive = this.isActive(relatedFields, record, activeOnFields, relatedAttributesFields, activeOnAttributes);
            var display = data.field.defaultDisplay;
            if (isActive) {
                display = targetDisplay;
            }
            data.field.display = display;
            var resetOn = (action.params && action.params.resetOn) || 'none';
            if (resetOn === display) {
                if (data.field.valueList && data.field.valueList.length) {
                    data.field.valueList = [];
                }
                if (data.field.value) {
                    data.field.value = '';
                }
            }
        };
        /**
         * Check if any of the configured values is currently set
         * @param {array} relatedFields
         * @param {object} record
         * @param {object} activeOnFields
         * @param {array} relatedAttributesFields
         * @param {object} activeOnAttributes
         */
        DisplayTypeAction.prototype.isActive = function (relatedFields, record, activeOnFields, relatedAttributesFields, activeOnAttributes) {
            var isActive = this.areFieldsActive(relatedFields, record, activeOnFields);
            if (!isActive) {
                isActive = this.areAttributesActive(relatedAttributesFields, record, activeOnAttributes);
            }
            return isActive;
        };
        /**
         * Are attributes active
         * @param {array} relatedAttributesFields
         * @param {object} record
         * @param {object} activeOnAttributes
         */
        DisplayTypeAction.prototype.areAttributesActive = function (relatedAttributesFields, record, activeOnAttributes) {
            var _this = this;
            return relatedAttributesFields.some(function (fieldKey) {
                var fields = record.fields;
                var field = (fields && record.fields[fieldKey]) || null;
                var attributes = activeOnAttributes[fieldKey] && Object.keys(activeOnAttributes[fieldKey]);
                if (!field || !attributes || !attributes.length) {
                    return;
                }
                return attributes.some(function (attributeKey) {
                    var activeValues = activeOnAttributes[fieldKey][attributeKey];
                    var attribute = field.attributes && field.attributes[attributeKey];
                    if (!activeValues || !activeValues.length || !attribute) {
                        return;
                    }
                    return _this.isValueActive(attribute, activeValues);
                });
            });
        };
        /**
         * Are fields active
         * @param {array} relatedFields
         * @param {object} record
         * @param {object} activeOnFields
         */
        DisplayTypeAction.prototype.areFieldsActive = function (relatedFields, record, activeOnFields) {
            var _this = this;
            return relatedFields.some(function (fieldKey) {
                var fields = record.fields;
                var field = (fields && record.fields[fieldKey]) || null;
                var activeValues = activeOnFields[fieldKey];
                if (!field || !activeValues || !activeValues.length) {
                    return;
                }
                return _this.isValueActive(field, activeValues);
            });
        };
        /**
         * Is value active
         * @param {object} field
         * @param {array} activeValues
         */
        DisplayTypeAction.prototype.isValueActive = function (field, activeValues) {
            var isActive = false;
            if (field.valueList && field.valueList.length) {
                field.valueList.some(function (value) {
                    return activeValues.some(function (activeValue) {
                        if (activeValue === value) {
                            isActive = true;
                            return true;
                        }
                    });
                });
                return isActive;
            }
            if (field.value) {
                activeValues.some(function (activeValue) {
                    if (activeValue === field.value) {
                        isActive = true;
                    }
                });
            }
            return isActive;
        };
        return DisplayTypeAction;
    }(FieldLogicActionHandler));
    DisplayTypeAction.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function DisplayTypeAction_Factory() { return new DisplayTypeAction(); }, token: DisplayTypeAction, providedIn: "root" });
    DisplayTypeAction.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    DisplayTypeAction.ctorParameters = function () { return []; };

    var EmailPrimarySelectAction = /** @class */ (function (_super) {
        __extends(EmailPrimarySelectAction, _super);
        function EmailPrimarySelectAction() {
            var _this = _super.call(this) || this;
            _this.key = 'emailPrimarySelect';
            _this.modes = ['edit', 'create', 'massupdate'];
            return _this;
        }
        EmailPrimarySelectAction.prototype.run = function (data, action) {
            var record = data.record;
            var field = data.field;
            if (!record || !field) {
                return;
            }
            var items = field.items;
            if (!field || !items || !items.length) {
                return;
            }
            var activeItems = items.filter(function (item) { return !(item && item.attributes && item.attributes.deleted); });
            // Auto-select the primary, only when the number of displayed rows equal to one;
            // This logic applies either via Add or Remove
            if (activeItems && activeItems.length !== 1) {
                return;
            }
            var item = activeItems[0];
            var emailField = (item.fields && item.fields['email-fields']) || {};
            var primary = (emailField.attributes && emailField.attributes['primary_address']) || null;
            if (primary && !i5.isTrue(primary.value)) {
                primary.value = 'true';
                primary.formControl.setValue('true');
                // re-validate the parent form-control after value update
                emailField.formControl.updateValueAndValidity({ onlySelf: true, emitEvent: true });
            }
        };
        return EmailPrimarySelectAction;
    }(FieldLogicActionHandler));
    EmailPrimarySelectAction.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function EmailPrimarySelectAction_Factory() { return new EmailPrimarySelectAction(); }, token: EmailPrimarySelectAction, providedIn: "root" });
    EmailPrimarySelectAction.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    EmailPrimarySelectAction.ctorParameters = function () { return []; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var requiredValidator = function (utils) { return (function (control) {
        if (utils.isEmptyTrimmedInputValue(control.value)) {
            return {
                required: {
                    required: true,
                    message: {
                        labelKey: 'LBL_VALIDATION_ERROR_REQUIRED',
                        context: {
                            value: control.value
                        }
                    }
                }
            };
        }
        return null;
    }); };
    var booleanRequiredValidator = function (utils) { return (function (control) {
        if (utils.isEmptyBooleanInputValue(control.value)) {
            return {
                required: {
                    required: true,
                    message: {
                        labelKey: 'LBL_VALIDATION_ERROR_REQUIRED',
                        context: {
                            value: control.value
                        }
                    }
                }
            };
        }
        return null;
    }); };
    var RequiredValidator = /** @class */ (function () {
        function RequiredValidator(utils) {
            this.utils = utils;
        }
        RequiredValidator.prototype.applies = function (record, viewField) {
            if (!viewField || !viewField.fieldDefinition) {
                return false;
            }
            return !!viewField.fieldDefinition.required;
        };
        RequiredValidator.prototype.getValidator = function (viewField) {
            if (viewField.type === 'boolean') {
                return [booleanRequiredValidator(this.utils)];
            }
            return [requiredValidator(this.utils)];
        };
        return RequiredValidator;
    }());
    RequiredValidator.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function RequiredValidator_Factory() { return new RequiredValidator(i0__namespace.ɵɵinject(FormControlUtils)); }, token: RequiredValidator, providedIn: "root" });
    RequiredValidator.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    RequiredValidator.ctorParameters = function () { return [
        { type: FormControlUtils }
    ]; };

    var RequiredAction = /** @class */ (function (_super) {
        __extends(RequiredAction, _super);
        function RequiredAction(requiredValidator) {
            var _this = _super.call(this) || this;
            _this.requiredValidator = requiredValidator;
            _this.key = 'required';
            _this.modes = ['edit', 'create', 'massupdate', 'filter'];
            return _this;
        }
        RequiredAction.prototype.run = function (data, action) {
            var record = data.record;
            var field = data.field;
            if (!record || !field) {
                return;
            }
            var activeOnFields = (action.params && action.params.activeOnFields) || {};
            var relatedFields = Object.keys(activeOnFields);
            var activeOnAttributes = (action.params && action.params.activeOnAttributes) || {};
            var relatedAttributesFields = Object.keys(activeOnAttributes);
            if (!relatedFields.length && !relatedAttributesFields.length) {
                return;
            }
            var isActive = this.isActive(relatedFields, record, activeOnFields, relatedAttributesFields, activeOnAttributes);
            var required = false;
            var validators = __spreadArray([], __read(data.field.validators || []));
            if (isActive) {
                required = true;
                validators = validators.concat(this.requiredValidator.getValidator(field));
            }
            data.field.definition.required = required;
            data.field.formControl.setValidators(validators);
            data.field.formControl.updateValueAndValidity({ onlySelf: true, emitEvent: true });
            record.formGroup.updateValueAndValidity({ onlySelf: true, emitEvent: true });
        };
        /**
         * Check if any of the configured values is currently set
         * @param {array} relatedFields
         * @param {object} record
         * @param {object} activeOnFields
         * @param {array} relatedAttributesFields
         * @param {object} activeOnAttributes
         */
        RequiredAction.prototype.isActive = function (relatedFields, record, activeOnFields, relatedAttributesFields, activeOnAttributes) {
            var isActive = this.areFieldsActive(relatedFields, record, activeOnFields);
            if (!isActive) {
                isActive = this.areAttributesActive(relatedAttributesFields, record, activeOnAttributes);
            }
            return isActive;
        };
        /**
         * Are attributes active
         * @param {array} relatedAttributesFields
         * @param {object} record
         * @param {object} activeOnAttributes
         */
        RequiredAction.prototype.areAttributesActive = function (relatedAttributesFields, record, activeOnAttributes) {
            var _this = this;
            return relatedAttributesFields.some(function (fieldKey) {
                var fields = record.fields;
                var field = (fields && record.fields[fieldKey]) || null;
                var attributes = activeOnAttributes[fieldKey] && Object.keys(activeOnAttributes[fieldKey]);
                if (!field || !attributes || !attributes.length) {
                    return;
                }
                return attributes.some(function (attributeKey) {
                    var activeValues = activeOnAttributes[fieldKey][attributeKey];
                    var attribute = field.attributes && field.attributes[attributeKey];
                    if (!activeValues || !activeValues.length || !attribute) {
                        return;
                    }
                    return _this.isValueActive(attribute, activeValues);
                });
            });
        };
        /**
         * Are fields active
         * @param {array} relatedFields
         * @param {object} record
         * @param {object} activeOnFields
         */
        RequiredAction.prototype.areFieldsActive = function (relatedFields, record, activeOnFields) {
            var _this = this;
            return relatedFields.some(function (fieldKey) {
                var fields = record.fields;
                var field = (fields && record.fields[fieldKey]) || null;
                var activeValues = activeOnFields[fieldKey];
                if (!field || !activeValues || !activeValues.length) {
                    return;
                }
                return _this.isValueActive(field, activeValues);
            });
        };
        /**
         * Is value active
         * @param {object} field
         * @param {array} activeValues
         */
        RequiredAction.prototype.isValueActive = function (field, activeValues) {
            var isActive = false;
            if (field.valueList && field.valueList.length) {
                field.valueList.some(function (value) {
                    return activeValues.some(function (activeValue) {
                        if (activeValue === value) {
                            isActive = true;
                            return true;
                        }
                    });
                });
                return isActive;
            }
            if (field.value) {
                activeValues.some(function (activeValue) {
                    if (activeValue === field.value) {
                        isActive = true;
                    }
                });
            }
            return isActive;
        };
        return RequiredAction;
    }(FieldLogicActionHandler));
    RequiredAction.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function RequiredAction_Factory() { return new RequiredAction(i0__namespace.ɵɵinject(RequiredValidator)); }, token: RequiredAction, providedIn: "root" });
    RequiredAction.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    RequiredAction.ctorParameters = function () { return [
        { type: RequiredValidator }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var CurrencyService = /** @class */ (function () {
        function CurrencyService(config, preferences) {
            this.config = config;
            this.preferences = preferences;
        }
        CurrencyService.prototype.getFieldCurrencyValue = function (field, record) {
            var isBase = this.isBase(field);
            var currencyId = this.getCurrencyId(record);
            if (!isBase && currencyId !== null) {
                return field.value;
            }
            var value = parseFloat(field.value);
            if (!isFinite(value)) {
                return field.value;
            }
            var userCurrency = this.getUserCurrency();
            return this.baseToCurrency(userCurrency.id, value).toString();
        };
        CurrencyService.prototype.baseToCurrency = function (currencyId, value) {
            var conversionRate = this.getConversionRate(currencyId);
            if (!isFinite(conversionRate)) {
                return value;
            }
            return this.round(mathjs.multiply(value, conversionRate));
        };
        CurrencyService.prototype.currencyToBase = function (currencyId, value) {
            var conversionRate = this.getConversionRate(currencyId);
            if (!isFinite(conversionRate)) {
                return value;
            }
            return this.round(mathjs.divide(value, conversionRate));
        };
        CurrencyService.prototype.round = function (value) {
            var precision = this.getPrecision();
            return mathjs.round(value, precision);
        };
        CurrencyService.prototype.getCurrencyId = function (record) {
            var _a, _b, _c;
            return (_c = (_b = (_a = record === null || record === void 0 ? void 0 : record.fields) === null || _a === void 0 ? void 0 : _a.currency_id) === null || _b === void 0 ? void 0 : _b.value) !== null && _c !== void 0 ? _c : null;
        };
        CurrencyService.prototype.isBase = function (field) {
            var _a, _b;
            return (_b = (_a = field === null || field === void 0 ? void 0 : field.metadata) === null || _a === void 0 ? void 0 : _a.isBaseCurrency) !== null && _b !== void 0 ? _b : false;
        };
        CurrencyService.prototype.getCurrency = function (id) {
            var _a;
            var currencies = this.config.getConfigValue('currencies');
            return (_a = currencies[id]) !== null && _a !== void 0 ? _a : [];
        };
        CurrencyService.prototype.getBaseCurrency = function () {
            return this.config.getConfigValue('currency');
        };
        CurrencyService.prototype.getUserCurrency = function () {
            return this.preferences.getUserPreference('currency');
        };
        CurrencyService.prototype.getPrecision = function () {
            var userPrecision = parseInt(this.preferences.getUserPreference('default_currency_significant_digits'));
            if (isFinite(userPrecision)) {
                return userPrecision;
            }
            var systemPrecision = parseInt(this.config.getConfigValue('default_currency_significant_digits'));
            if (isFinite(systemPrecision)) {
                return systemPrecision;
            }
            return 0;
        };
        CurrencyService.prototype.getConversionRate = function (id) {
            var currency = this.getCurrency(id);
            return parseFloat(currency['conversion_rate']);
        };
        CurrencyService.prototype.getCode = function (id) {
            return this.getCurrency(id).iso4217;
        };
        CurrencyService.prototype.getSymbol = function (id) {
            return this.getCurrency(id).symbol;
        };
        return CurrencyService;
    }());
    CurrencyService.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function CurrencyService_Factory() { return new CurrencyService(i0__namespace.ɵɵinject(SystemConfigStore), i0__namespace.ɵɵinject(UserPreferenceStore)); }, token: CurrencyService, providedIn: "root" });
    CurrencyService.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    CurrencyService.ctorParameters = function () { return [
        { type: SystemConfigStore },
        { type: UserPreferenceStore }
    ]; };

    var UpdateBaseCurrencyAction = /** @class */ (function (_super) {
        __extends(UpdateBaseCurrencyAction, _super);
        function UpdateBaseCurrencyAction(currencyService) {
            var _this = _super.call(this) || this;
            _this.currencyService = currencyService;
            _this.key = 'update-base-currency';
            _this.modes = ['edit', 'create', 'massupdate', 'filter'];
            return _this;
        }
        UpdateBaseCurrencyAction.prototype.run = function (data, action) {
            var _a, _b, _c, _d, _e, _f;
            var record = data.record;
            var field = data.field;
            if (!record || !field) {
                return;
            }
            var currencyIdFieldName = (_a = action.params.currencyIdField) !== null && _a !== void 0 ? _a : 'currency_id';
            var currencyFieldName = (_b = action.params.currencyField) !== null && _b !== void 0 ? _b : 'amount';
            var currencyId = (_d = (_c = record === null || record === void 0 ? void 0 : record.fields[currencyIdFieldName]) === null || _c === void 0 ? void 0 : _c.value) !== null && _d !== void 0 ? _d : null;
            var value = parseFloat((_f = (_e = record === null || record === void 0 ? void 0 : record.fields[currencyFieldName]) === null || _e === void 0 ? void 0 : _e.value) !== null && _f !== void 0 ? _f : null);
            if (!isFinite(value)) {
                return;
            }
            if (currencyId === null) {
                this.updateValue(field, value, record);
            }
            var baseValue = this.currencyService.currencyToBase(currencyId, value);
            if (!isFinite(baseValue)) {
                return;
            }
            this.updateValue(field, baseValue, record);
        };
        UpdateBaseCurrencyAction.prototype.updateValue = function (field, baseValue, record) {
            field.value = baseValue.toString();
            field.formControl.setValue(baseValue.toString());
            // re-validate the parent form-control after value update
            record.formGroup.updateValueAndValidity({ onlySelf: true, emitEvent: true });
        };
        return UpdateBaseCurrencyAction;
    }(FieldLogicActionHandler));
    UpdateBaseCurrencyAction.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function UpdateBaseCurrencyAction_Factory() { return new UpdateBaseCurrencyAction(i0__namespace.ɵɵinject(CurrencyService)); }, token: UpdateBaseCurrencyAction, providedIn: "root" });
    UpdateBaseCurrencyAction.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    UpdateBaseCurrencyAction.ctorParameters = function () { return [
        { type: CurrencyService }
    ]; };

    var UpdateCurrencyAction = /** @class */ (function (_super) {
        __extends(UpdateCurrencyAction, _super);
        function UpdateCurrencyAction(currencyService) {
            var _this = _super.call(this) || this;
            _this.currencyService = currencyService;
            _this.key = 'update-currency';
            _this.modes = ['edit', 'create', 'massupdate', 'filter'];
            return _this;
        }
        UpdateCurrencyAction.prototype.run = function (data, action) {
            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;
            var record = data.record;
            var field = data.field;
            var isBaseCurrency = (_c = (_b = (_a = field === null || field === void 0 ? void 0 : field.definition) === null || _a === void 0 ? void 0 : _a.metadata) === null || _b === void 0 ? void 0 : _b.isBaseCurrency) !== null && _c !== void 0 ? _c : false;
            if (!record || !field || isBaseCurrency) {
                return;
            }
            var currencyIdFieldName = (_d = action.params.currencyIdField) !== null && _d !== void 0 ? _d : 'currency_id';
            var baseCurrencyFieldName = (_e = action.params.baseCurrencyField) !== null && _e !== void 0 ? _e : 'amount_usdollar';
            var currencyId = (_g = (_f = record === null || record === void 0 ? void 0 : record.fields[currencyIdFieldName]) === null || _f === void 0 ? void 0 : _f.value) !== null && _g !== void 0 ? _g : null;
            var value = parseFloat((_h = field === null || field === void 0 ? void 0 : field.value) !== null && _h !== void 0 ? _h : null);
            var baseValue = parseFloat((_k = (_j = record === null || record === void 0 ? void 0 : record.fields[baseCurrencyFieldName]) === null || _j === void 0 ? void 0 : _j.value) !== null && _k !== void 0 ? _k : null);
            if (!isFinite(value) || !isFinite(baseValue) || currencyId === null) {
                return;
            }
            var newValue = this.currencyService.baseToCurrency(currencyId, baseValue);
            if (!isFinite(newValue)) {
                return;
            }
            this.updateValue(field, newValue, record);
        };
        UpdateCurrencyAction.prototype.updateValue = function (field, value, record) {
            field.value = value.toString();
            field.formControl.setValue(value.toString());
            // re-validate the parent form-control after value update
            record.formGroup.updateValueAndValidity({ onlySelf: true, emitEvent: true });
        };
        return UpdateCurrencyAction;
    }(FieldLogicActionHandler));
    UpdateCurrencyAction.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function UpdateCurrencyAction_Factory() { return new UpdateCurrencyAction(i0__namespace.ɵɵinject(CurrencyService)); }, token: UpdateCurrencyAction, providedIn: "root" });
    UpdateCurrencyAction.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    UpdateCurrencyAction.ctorParameters = function () { return [
        { type: CurrencyService }
    ]; };

    var UpdateFlexRelateModuleAction = /** @class */ (function (_super) {
        __extends(UpdateFlexRelateModuleAction, _super);
        function UpdateFlexRelateModuleAction() {
            var _this = _super.call(this) || this;
            _this.key = 'update-flex-relate-module';
            _this.modes = ['edit', 'create', 'massupdate', 'filter'];
            return _this;
        }
        UpdateFlexRelateModuleAction.prototype.run = function (data, action) {
            var _a, _b, _c, _d, _e, _f, _g;
            var record = data.record;
            var field = data.field;
            if (!record || !field) {
                return;
            }
            var typeField = (_a = field.definition.type_name) !== null && _a !== void 0 ? _a : '';
            if (typeField === '') {
                return;
            }
            var type = (_c = (_b = record === null || record === void 0 ? void 0 : record.fields[typeField]) === null || _b === void 0 ? void 0 : _b.value) !== null && _c !== void 0 ? _c : '';
            var fieldModule = (_e = (_d = field === null || field === void 0 ? void 0 : field.definition) === null || _d === void 0 ? void 0 : _d.module) !== null && _e !== void 0 ? _e : '';
            if (type !== fieldModule) {
                field.definition.module = (_g = (_f = record === null || record === void 0 ? void 0 : record.fields[typeField]) === null || _f === void 0 ? void 0 : _f.value) !== null && _g !== void 0 ? _g : '';
                this.updateValue(field, {}, '', record);
            }
        };
        UpdateFlexRelateModuleAction.prototype.updateValue = function (field, valueObject, value, record) {
            field.value = value;
            field.valueObject = valueObject;
            field.formControl.setValue(value);
            // re-validate the parent form-control after value update
            record.formGroup.updateValueAndValidity({ onlySelf: true, emitEvent: true });
        };
        return UpdateFlexRelateModuleAction;
    }(FieldLogicActionHandler));
    UpdateFlexRelateModuleAction.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function UpdateFlexRelateModuleAction_Factory() { return new UpdateFlexRelateModuleAction(); }, token: UpdateFlexRelateModuleAction, providedIn: "root" });
    UpdateFlexRelateModuleAction.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    UpdateFlexRelateModuleAction.ctorParameters = function () { return []; };

    var FieldLogicManager = /** @class */ (function (_super) {
        __extends(FieldLogicManager, _super);
        function FieldLogicManager(displayType, emailPrimarySelectAction, required, updateBaseCurrency, updateCurrency, updateFlexRelateModule) {
            var _this = _super.call(this) || this;
            displayType.modes.forEach(function (mode) { return _this.actions[mode][displayType.key] = displayType; });
            emailPrimarySelectAction.modes.forEach(function (mode) { return _this.actions[mode][emailPrimarySelectAction.key] = emailPrimarySelectAction; });
            required.modes.forEach(function (mode) { return _this.actions[mode][required.key] = required; });
            updateBaseCurrency.modes.forEach(function (mode) { return _this.actions[mode][updateBaseCurrency.key] = updateBaseCurrency; });
            updateCurrency.modes.forEach(function (mode) { return _this.actions[mode][updateCurrency.key] = updateCurrency; });
            updateFlexRelateModule.modes.forEach(function (mode) { return _this.actions[mode][updateFlexRelateModule.key] = updateFlexRelateModule; });
            return _this;
        }
        /**
         * Run logic for the given field
         * @param {object} field
         * @param {object} mode
         * @param {object} record
         */
        FieldLogicManager.prototype.runLogic = function (field, mode, record) {
            var _this = this;
            if (!field.logic) {
                return;
            }
            var actions = Object.keys(field.logic).map(function (key) { return field.logic[key]; });
            var modeActions = this.parseModeActions(actions, mode);
            var context = {
                record: record,
                field: field,
                module: record.module
            };
            modeActions.forEach(function (action) {
                _this.runAction(action, mode, context);
            });
        };
        /**
         * Run the action using given context
         * @param action
         * @param mode
         * @param context
         */
        FieldLogicManager.prototype.runAction = function (action, mode, context) {
            if (context === void 0) { context = null; }
            this.runFrontEndAction(action, mode, context);
        };
        /**
         * Run front end action
         * @param {object} action
         * @param {object} mode
         * @param {object} context
         */
        FieldLogicManager.prototype.runFrontEndAction = function (action, mode, context) {
            if (context === void 0) { context = null; }
            var data = this.buildActionData(action, context);
            this.run(action, mode, data);
        };
        /**
         * Get module name
         * @param {object} context
         */
        FieldLogicManager.prototype.getModuleName = function (context) {
            return context.module;
        };
        FieldLogicManager.prototype.buildActionData = function (action, context) {
            return {
                field: context.field,
                record: (context && context.record) || null,
            };
        };
        /**
         * Parse mode actions
         * @param declaredActions
         * @param mode
         */
        FieldLogicManager.prototype.parseModeActions = function (declaredActions, mode) {
            if (!declaredActions) {
                return [];
            }
            var availableActions = {
                list: [],
                detail: [],
                edit: [],
                create: [],
                massupdate: [],
                filter: [],
            };
            if (declaredActions && declaredActions.length) {
                declaredActions.forEach(function (action) {
                    if (!action.modes || !action.modes.length) {
                        return;
                    }
                    action.modes.forEach(function (actionMode) {
                        if (!availableActions[actionMode] && !action.asyncProcess) {
                            return;
                        }
                        availableActions[actionMode].push(action);
                    });
                });
            }
            var actions = [];
            availableActions[mode].forEach(function (action) {
                actions.push(action);
            });
            return actions;
        };
        return FieldLogicManager;
    }(BaseActionManager));
    FieldLogicManager.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function FieldLogicManager_Factory() { return new FieldLogicManager(i0__namespace.ɵɵinject(DisplayTypeAction), i0__namespace.ɵɵinject(EmailPrimarySelectAction), i0__namespace.ɵɵinject(RequiredAction), i0__namespace.ɵɵinject(UpdateBaseCurrencyAction), i0__namespace.ɵɵinject(UpdateCurrencyAction), i0__namespace.ɵɵinject(UpdateFlexRelateModuleAction)); }, token: FieldLogicManager, providedIn: "root" });
    FieldLogicManager.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    FieldLogicManager.ctorParameters = function () { return [
        { type: DisplayTypeAction },
        { type: EmailPrimarySelectAction },
        { type: RequiredAction },
        { type: UpdateBaseCurrencyAction },
        { type: UpdateCurrencyAction },
        { type: UpdateFlexRelateModuleAction }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var BaseFieldComponent = /** @class */ (function () {
        function BaseFieldComponent(typeFormatter, logic) {
            this.typeFormatter = typeFormatter;
            this.logic = logic;
            this.klass = null;
            this.dependentFields = [];
            this.dependentAttributes = [];
            this.subs = [];
        }
        BaseFieldComponent.prototype.ngOnInit = function () {
            this.baseInit();
        };
        BaseFieldComponent.prototype.baseInit = function () {
            this.initDependencyHandlers();
        };
        /**
         * Calculate and init dependency handlers
         */
        BaseFieldComponent.prototype.initDependencyHandlers = function () {
            var _this = this;
            if (!this.record) {
                return;
            }
            var fieldKeys = (this.record.fields && Object.keys(this.record.fields)) || [];
            if (fieldKeys.length > 1) {
                this.calculateDependentFields(fieldKeys);
                if (this.field.valueChanges$ && (this.dependentFields.length || this.dependentAttributes.length)) {
                    this.subs.push(this.field.valueChanges$.pipe(operators.debounceTime(500)).subscribe(function () {
                        _this.dependentFields.forEach(function (fieldKey) {
                            var field = _this.record.fields[fieldKey] || null;
                            if (!field) {
                                return;
                            }
                            _this.logic.runLogic(field, _this.mode, _this.record);
                        });
                        _this.dependentAttributes.forEach(function (dependency) {
                            var field = _this.record.fields[dependency.field] || {};
                            var attribute = (field && field.attributes && field.attributes[dependency.attribute]) || null;
                            if (!attribute) {
                                return;
                            }
                            _this.logic.runLogic(attribute, _this.mode, _this.record);
                        });
                    }));
                }
            }
        };
        /**
         * Calculate dependent fields
         * @param {array} fieldKeys
         */
        BaseFieldComponent.prototype.calculateDependentFields = function (fieldKeys) {
            var _this = this;
            fieldKeys.forEach(function (key) {
                if (_this.field.source === 'field') {
                    _this.addFieldDependency(key, _this.dependentFields, _this.dependentAttributes);
                    return;
                }
                if (_this.field.source === 'attribute') {
                    _this.addAttributeDependency(key, _this.dependentFields, _this.dependentAttributes);
                    return;
                }
            });
        };
        /**
         * Add field dependency
         * @param {string} fieldKey
         * @param {array} dependentFields
         * @param {object} dependentAttributes
         */
        BaseFieldComponent.prototype.addFieldDependency = function (fieldKey, dependentFields, dependentAttributes) {
            var _this = this;
            var field = this.record.fields[fieldKey];
            var name = this.field.name || this.field.definition.name || '';
            if (fieldKey === name || !field) {
                return;
            }
            if (field.fieldDependencies && field.fieldDependencies.length && this.isDependencyField(field.fieldDependencies)) {
                dependentFields.push(fieldKey);
            }
            var attributeKeys = (field.attributes && Object.keys(field.attributes)) || [];
            attributeKeys.forEach(function (attributeKey) {
                var attribute = field.attributes[attributeKey];
                if (!attribute || !attribute.fieldDependencies || !attribute.fieldDependencies.length) {
                    return;
                }
                if (_this.isDependencyField(attribute.fieldDependencies)) {
                    dependentAttributes.push({
                        field: fieldKey,
                        attribute: attributeKey
                    });
                }
            });
        };
        /**
         * Check if field is dependency
         * @param dependencies
         * @returns {boolean}
         */
        BaseFieldComponent.prototype.isDependencyField = function (dependencies) {
            var name = this.field.name || this.field.definition.name || '';
            return dependencies.some(function (dependency) { return name === dependency; });
        };
        /**
         * Add attribute dependency
         * @param {string} fieldKey
         * @param {array} dependentFields
         * @param {object} dependentAttributes
         */
        BaseFieldComponent.prototype.addAttributeDependency = function (fieldKey, dependentFields, dependentAttributes) {
            var _this = this;
            var field = this.record.fields[fieldKey];
            var name = this.field.name || this.field.definition.name || '';
            if (fieldKey === name || !field) {
                return;
            }
            if (field.attributeDependencies && field.attributeDependencies.length && this.isDependencyAttribute(field.attributeDependencies)) {
                dependentFields.push(fieldKey);
            }
            var attributeKeys = (field.attributes && Object.keys(field.attributes)) || [];
            attributeKeys.forEach(function (attributeKey) {
                var attribute = field.attributes[attributeKey];
                if (!attribute || !attribute.attributeDependencies || !attribute.attributeDependencies.length) {
                    return;
                }
                if (_this.isDependencyAttribute(attribute.attributeDependencies)) {
                    dependentAttributes.push({
                        field: fieldKey,
                        attribute: attributeKey
                    });
                }
            });
        };
        /**
         * Check if attribute is dependency
         * @param {object} attributeDependencies
         * @returns {boolean}
         */
        BaseFieldComponent.prototype.isDependencyAttribute = function (attributeDependencies) {
            var parentKey = this.field.parentKey || '';
            var name = this.field.name || this.field.definition.name || '';
            return attributeDependencies.some(function (dependency) { return parentKey === dependency.field && name === dependency.attribute; });
        };
        BaseFieldComponent.prototype.subscribeValueChanges = function () {
            var _this = this;
            if (this.field && this.field.formControl) {
                this.subs.push(this.field.formControl.valueChanges.subscribe(function (value) {
                    if (!i5.isVoid(value)) {
                        value = value.trim();
                    }
                    else {
                        value = '';
                    }
                    if (_this.typeFormatter && _this.field.type) {
                        value = _this.typeFormatter.toInternalFormat(_this.field.type, value);
                    }
                    _this.setFieldValue(value);
                }));
            }
        };
        BaseFieldComponent.prototype.setFieldValue = function (newValue) {
            this.field.value = newValue;
        };
        BaseFieldComponent.prototype.unsubscribeAll = function () {
            this.subs.forEach(function (sub) { return sub.unsubscribe(); });
        };
        return BaseFieldComponent;
    }());
    BaseFieldComponent.decorators = [
        { type: i0.Component, args: [{ template: '' },] }
    ];
    BaseFieldComponent.ctorParameters = function () { return [
        { type: DataTypeFormatter },
        { type: FieldLogicManager }
    ]; };
    BaseFieldComponent.propDecorators = {
        mode: [{ type: i0.Input }],
        field: [{ type: i0.Input }],
        record: [{ type: i0.Input }],
        parent: [{ type: i0.Input }],
        klass: [{ type: i0.Input }]
    };

    var PhoneDetailFieldComponent = /** @class */ (function (_super) {
        __extends(PhoneDetailFieldComponent, _super);
        function PhoneDetailFieldComponent(typeFormatter, logic) {
            var _this = _super.call(this, typeFormatter, logic) || this;
            _this.typeFormatter = typeFormatter;
            _this.logic = logic;
            return _this;
        }
        PhoneDetailFieldComponent.prototype.getTelLink = function (phone) {
            if (!phone) {
                return null;
            }
            return 'tel:' + this.getUnFormatted(phone);
        };
        PhoneDetailFieldComponent.prototype.getUnFormatted = function (phone) {
            if (!phone) {
                return '';
            }
            return phone.replace(/\s+/g, '');
        };
        return PhoneDetailFieldComponent;
    }(BaseFieldComponent));
    PhoneDetailFieldComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-phone-detail',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<a [href]=\"getTelLink(field.value)\">{{ field.value }}</a>\n"
                },] }
    ];
    PhoneDetailFieldComponent.ctorParameters = function () { return [
        { type: DataTypeFormatter },
        { type: FieldLogicManager }
    ]; };

    var BaseEnumComponent = /** @class */ (function (_super) {
        __extends(BaseEnumComponent, _super);
        function BaseEnumComponent(languages, typeFormatter, logic) {
            var _this = _super.call(this, typeFormatter, logic) || this;
            _this.languages = languages;
            _this.typeFormatter = typeFormatter;
            _this.logic = logic;
            _this.selectedValues = [];
            _this.valueLabel = '';
            _this.options = [];
            _this.subs = [];
            _this.isDynamicEnum = false;
            return _this;
        }
        BaseEnumComponent.prototype.ngOnInit = function () {
            var _this = this;
            _super.prototype.ngOnInit.call(this);
            if (this.field.metadata && this.field.metadata.options$) {
                this.subs.push(this.field.metadata.options$.subscribe(function (options) {
                    _this.buildProvidedOptions(options);
                    _this.initValue();
                }));
                return;
            }
            if (this.field.definition && this.field.definition.options) {
                this.subs.push(this.languages.vm$.subscribe(function (strings) {
                    _this.buildAppStringListOptions(strings.appListStrings);
                    _this.initValue();
                }));
            }
        };
        BaseEnumComponent.prototype.ngOnDestroy = function () {
            this.isDynamicEnum = false;
            this.subs.forEach(function (sub) { return sub.unsubscribe(); });
        };
        BaseEnumComponent.prototype.getInvalidClass = function () {
            if (this.field.formControl && this.field.formControl.invalid && this.field.formControl.touched) {
                return 'is-invalid';
            }
            return '';
        };
        BaseEnumComponent.prototype.buildProvidedOptions = function (options) {
            var _this = this;
            this.options = options;
            this.optionsMap = {};
            options.forEach(function (option) {
                _this.optionsMap[option.value] = option.label;
            });
        };
        BaseEnumComponent.prototype.buildAppStringListOptions = function (appStrings) {
            this.optionsMap = {};
            this.addExtraOptions();
            if (appStrings && this.field.definition.options && appStrings[this.field.definition.options]) {
                var options = appStrings[this.field.definition.options];
                if (this.options && Object.keys(this.options)) {
                    this.optionsMap = Object.assign(Object.assign({}, this.optionsMap), options);
                }
            }
            this.buildOptionsArray(appStrings);
        };
        BaseEnumComponent.prototype.addExtraOptions = function () {
            var _this = this;
            var extraOptions = (this.field.metadata && this.field.metadata.extraOptions) || [];
            extraOptions.forEach(function (item) {
                if (i5.isVoid(item.value)) {
                    return;
                }
                var label = item.label || '';
                if (item.labelKey) {
                    label = _this.languages.getFieldLabel(item.labelKey);
                }
                _this.optionsMap[item.value] = label;
            });
        };
        BaseEnumComponent.prototype.buildOptionsArray = function (appStrings) {
            var _this = this;
            this.options = [];
            Object.keys(this.optionsMap).forEach(function (key) {
                _this.options.push({
                    value: key,
                    label: _this.optionsMap[key]
                });
            });
            if (this.isDynamicEnum) {
                this.buildDynamicEnumOptions(appStrings);
            }
        };
        BaseEnumComponent.prototype.initValue = function () {
            this.selectedValues = [];
            if (!this.field.value) {
                this.initEnumDefault();
                return;
            }
            if (typeof this.field.value !== 'string') {
                return;
            }
            if (!this.optionsMap) {
                return;
            }
            if (typeof this.optionsMap[this.field.value] !== 'string') {
                return;
            }
            if (this.field.value) {
                this.valueLabel = this.optionsMap[this.field.value];
                this.selectedValues.push({
                    value: this.field.value,
                    label: this.valueLabel
                });
            }
        };
        /**
         *  Initialize the default value for the enum
         *
         *  @returns {void}
         *  @description set default enum value, if defined in vardefs
         * */
        BaseEnumComponent.prototype.initEnumDefault = function () {
            var _a, _b, _c;
            if (!i5.isEmptyString((_a = this.record) === null || _a === void 0 ? void 0 : _a.id)) {
                return;
            }
            var defaultVal = (_c = (_b = this.field) === null || _b === void 0 ? void 0 : _b.definition) === null || _c === void 0 ? void 0 : _c.default;
            if (typeof defaultVal === 'string') {
                defaultVal = defaultVal.trim();
            }
            if (!defaultVal) {
                return;
            }
            this.selectedValues.push({
                value: defaultVal,
                label: this.optionsMap[defaultVal]
            });
            this.initEnumDefaultFieldValues(defaultVal);
        };
        BaseEnumComponent.prototype.initEnumDefaultFieldValues = function (defaultVal) {
            if (this.field.type === 'multienum') {
                var defaultValues = this.selectedValues.map(function (option) { return option.value; });
                this.field.valueList = defaultValues;
                this.field.formControl.setValue(defaultValues);
            }
            else {
                this.field.value = defaultVal;
                this.field.formControl.setValue(defaultVal);
            }
            this.field.formControl.markAsDirty();
        };
        BaseEnumComponent.prototype.checkAndInitAsDynamicEnum = function () {
            var definition = (this.field && this.field.definition) || {};
            var dynamic = (definition && definition.dynamic) || false;
            var parentEnumKey = (definition && definition.parentenum) || '';
            var fields = (this.record && this.record.fields) || null;
            if (dynamic && parentEnumKey && fields) {
                this.isDynamicEnum = true;
                var parentEnum = fields[parentEnumKey];
                if (parentEnum) {
                    this.subscribeToParentValueChanges(parentEnum);
                }
            }
        };
        BaseEnumComponent.prototype.buildDynamicEnumOptions = function (appStrings) {
            var parentEnum = this.record.fields[this.field.definition.parentenum];
            if (parentEnum) {
                var parentOptionMap = appStrings[parentEnum.definition.options];
                if (parentOptionMap && Object.keys(parentOptionMap).length !== 0) {
                    this.mappedOptions = this.createParentChildOptionsMap(parentOptionMap, this.options);
                    var parentValues = [];
                    if (parentEnum.definition.type === 'multienum') {
                        parentValues = parentEnum.valueList;
                    }
                    else {
                        parentValues.push(parentEnum.value);
                    }
                    this.options = this.filterMatchingOptions(parentValues);
                }
            }
        };
        BaseEnumComponent.prototype.filterMatchingOptions = function (values) {
            var _this = this;
            var filteredOptions = [];
            if (!values || !values.length) {
                return [];
            }
            values.forEach(function (value) {
                if (!_this.mappedOptions[value]) {
                    return;
                }
                filteredOptions = filteredOptions.concat(__spreadArray([], __read(_this.mappedOptions[value])));
            });
            return filteredOptions;
        };
        BaseEnumComponent.prototype.createParentChildOptionsMap = function (parentOptions, childOptions) {
            var mappedOptions = {};
            Object.keys(parentOptions).forEach(function (key) {
                mappedOptions[key] = childOptions.filter(function (option) { return String(option.value).startsWith(parentOptions[key]); });
            });
            return mappedOptions;
        };
        BaseEnumComponent.prototype.subscribeToParentValueChanges = function (parentEnum) {
            var _this = this;
            if (parentEnum.formControl) {
                this.subs.push(parentEnum.formControl.valueChanges.subscribe(function (values) {
                    if (typeof values === 'string') {
                        values = [values];
                    }
                    // Reset selected values on Form Control
                    _this.field.value = '';
                    _this.field.formControl.setValue('');
                    // Rebuild available enum options
                    _this.options = _this.filterMatchingOptions(values);
                    _this.initValue();
                }));
            }
        };
        return BaseEnumComponent;
    }(BaseFieldComponent));
    BaseEnumComponent.decorators = [
        { type: i0.Component, args: [{ template: '' },] }
    ];
    BaseEnumComponent.ctorParameters = function () { return [
        { type: LanguageStore },
        { type: DataTypeFormatter },
        { type: FieldLogicManager }
    ]; };

    var BaseMultiEnumComponent = /** @class */ (function (_super) {
        __extends(BaseMultiEnumComponent, _super);
        function BaseMultiEnumComponent(languages, typeFormatter, logic) {
            var _this = _super.call(this, languages, typeFormatter, logic) || this;
            _this.languages = languages;
            _this.typeFormatter = typeFormatter;
            _this.logic = logic;
            return _this;
        }
        BaseMultiEnumComponent.prototype.initValue = function () {
            var _this = this;
            this.selectedValues = [];
            if (!this.field.valueList || this.field.valueList.length < 1) {
                this.initEnumDefault();
                return;
            }
            this.field.valueList.forEach(function (value) {
                if (typeof _this.optionsMap[value] !== 'string') {
                    return;
                }
                _this.selectedValues.push({
                    value: value,
                    label: _this.optionsMap[value]
                });
            });
        };
        return BaseMultiEnumComponent;
    }(BaseEnumComponent));
    BaseMultiEnumComponent.decorators = [
        { type: i0.Component, args: [{ template: '' },] }
    ];
    BaseMultiEnumComponent.ctorParameters = function () { return [
        { type: LanguageStore },
        { type: DataTypeFormatter },
        { type: FieldLogicManager }
    ]; };

    var MultiEnumFilterFieldComponent = /** @class */ (function (_super) {
        __extends(MultiEnumFilterFieldComponent, _super);
        function MultiEnumFilterFieldComponent(languages, typeFormatter, logic) {
            var _this = _super.call(this, languages, typeFormatter, logic) || this;
            _this.languages = languages;
            _this.typeFormatter = typeFormatter;
            _this.logic = logic;
            return _this;
        }
        MultiEnumFilterFieldComponent.prototype.ngOnInit = function () {
            this.field.valueList = [];
            if (this.field.criteria.values && this.field.criteria.values.length > 0) {
                this.field.valueList = this.field.criteria.values;
            }
            _super.prototype.ngOnInit.call(this);
        };
        MultiEnumFilterFieldComponent.prototype.onAdd = function () {
            var value = this.selectedValues.map(function (option) { return option.value; });
            this.field.valueList = value;
            this.field.formControl.setValue(value);
            this.field.formControl.markAsDirty();
            this.field.criteria.operator = '=';
            this.field.criteria.values = value;
            return;
        };
        MultiEnumFilterFieldComponent.prototype.onRemove = function () {
            var _this = this;
            var value = this.selectedValues.map(function (option) { return option.value; });
            if (!value) {
                value = [];
            }
            this.field.valueList = value;
            this.field.formControl.setValue(value);
            this.field.formControl.markAsDirty();
            this.field.criteria.operator = '=';
            this.field.criteria.values = value;
            setTimeout(function () {
                _this.tag.focus(true, true);
                _this.tag.dropdown.show();
            }, 200);
        };
        MultiEnumFilterFieldComponent.prototype.getPlaceholderLabel = function () {
            return this.languages.getAppString('LBL_SELECT_ITEM') || '';
        };
        MultiEnumFilterFieldComponent.prototype.selectFirstElement = function () {
            var filteredElements = this.tag.dropdown.items;
            if (filteredElements.length !== 0) {
                var firstElement = filteredElements[0];
                this.selectedValues.push(firstElement);
                this.onAdd();
                this.tag.dropdown.hide();
            }
        };
        return MultiEnumFilterFieldComponent;
    }(BaseMultiEnumComponent));
    MultiEnumFilterFieldComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-multienum-filter',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<tag-input [(ngModel)]=\"selectedValues\"\n           [onlyFromAutocomplete]=\"true\"\n           [clearOnBlur]=\"true\"\n           [displayBy]=\"'label'\"\n           [identifyBy]=\"'value'\"\n           [placeholder]=\"getPlaceholderLabel()\"\n           [secondaryPlaceholder]=\"getPlaceholderLabel()\"\n           [inputClass]=\"getInvalidClass()\"\n           #tag\n           (onAdd)=\"onAdd()\"\n           (onRemove)=\"onRemove()\"\n           (keyup.enter)=\"selectFirstElement()\">\n<tag-input-dropdown [displayBy]=\"'label'\"\n                        [identifyBy]=\"'value'\"\n                        [showDropdownIfEmpty]=\"true\"\n                        [keepOpen]=\"false\"\n                        [autocompleteItems]=\"this.options\">\n    </tag-input-dropdown>\n</tag-input>\n"
                },] }
    ];
    MultiEnumFilterFieldComponent.ctorParameters = function () { return [
        { type: LanguageStore },
        { type: DataTypeFormatter },
        { type: FieldLogicManager }
    ]; };
    MultiEnumFilterFieldComponent.propDecorators = {
        tag: [{ type: i0.ViewChild, args: ['tag',] }]
    };

    var EnumDetailFieldComponent = /** @class */ (function (_super) {
        __extends(EnumDetailFieldComponent, _super);
        function EnumDetailFieldComponent(languages, typeFormatter, logic) {
            var _this = _super.call(this, languages, typeFormatter, logic) || this;
            _this.languages = languages;
            _this.typeFormatter = typeFormatter;
            _this.logic = logic;
            return _this;
        }
        return EnumDetailFieldComponent;
    }(BaseEnumComponent));
    EnumDetailFieldComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-enum-detail',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n{{valueLabel}}\n"
                },] }
    ];
    EnumDetailFieldComponent.ctorParameters = function () { return [
        { type: LanguageStore },
        { type: DataTypeFormatter },
        { type: FieldLogicManager }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var EnumDetailFieldModule = /** @class */ (function () {
        function EnumDetailFieldModule() {
        }
        return EnumDetailFieldModule;
    }());
    EnumDetailFieldModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [EnumDetailFieldComponent],
                    exports: [EnumDetailFieldComponent],
                    imports: [
                        common.CommonModule,
                        forms.FormsModule
                    ]
                },] }
    ];

    var BaseNameComponent = /** @class */ (function (_super) {
        __extends(BaseNameComponent, _super);
        function BaseNameComponent(typeFormatter, logic) {
            var _this = _super.call(this, typeFormatter, logic) || this;
            _this.typeFormatter = typeFormatter;
            _this.logic = logic;
            return _this;
        }
        BaseNameComponent.prototype.getNameField = function (field, record) {
            if (!field.value || !record.attributes) {
                return;
            }
            var format = field.value.split(' ');
            var groupField = [];
            format.forEach(function (item) {
                if (record.attributes[item]) {
                    groupField.push(record.attributes[item]);
                }
            });
            return groupField.join(' ');
        };
        return BaseNameComponent;
    }(BaseFieldComponent));
    BaseNameComponent.decorators = [
        { type: i0.Component, args: [{ template: '' },] }
    ];
    BaseNameComponent.ctorParameters = function () { return [
        { type: DataTypeFormatter },
        { type: FieldLogicManager }
    ]; };

    var FullNameDetailFieldsComponent = /** @class */ (function (_super) {
        __extends(FullNameDetailFieldsComponent, _super);
        function FullNameDetailFieldsComponent(typeFormatter, logic) {
            var _this = _super.call(this, typeFormatter, logic) || this;
            _this.typeFormatter = typeFormatter;
            _this.logic = logic;
            return _this;
        }
        FullNameDetailFieldsComponent.prototype.ngOnInit = function () {
            _super.prototype.ngOnInit.call(this);
            this.data = this.getNameField(this.field, this.record);
        };
        return FullNameDetailFieldsComponent;
    }(BaseNameComponent));
    FullNameDetailFieldsComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-fullname-detail',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n{{this.data}}\n"
                },] }
    ];
    FullNameDetailFieldsComponent.ctorParameters = function () { return [
        { type: DataTypeFormatter },
        { type: FieldLogicManager }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var FullNameDetailFieldsModule = /** @class */ (function () {
        function FullNameDetailFieldsModule() {
        }
        return FullNameDetailFieldsModule;
    }());
    FullNameDetailFieldsModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [FullNameDetailFieldsComponent],
                    exports: [FullNameDetailFieldsComponent],
                    imports: [
                        common.CommonModule,
                    ]
                },] }
    ];

    var VarcharDetailFieldComponent = /** @class */ (function (_super) {
        __extends(VarcharDetailFieldComponent, _super);
        function VarcharDetailFieldComponent(typeFormatter, logic) {
            var _this = _super.call(this, typeFormatter, logic) || this;
            _this.typeFormatter = typeFormatter;
            _this.logic = logic;
            return _this;
        }
        return VarcharDetailFieldComponent;
    }(BaseFieldComponent));
    VarcharDetailFieldComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-varchar-detail',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n{{field.value}}\n"
                },] }
    ];
    VarcharDetailFieldComponent.ctorParameters = function () { return [
        { type: DataTypeFormatter },
        { type: FieldLogicManager }
    ]; };

    var UrlDetailFieldComponent = /** @class */ (function (_super) {
        __extends(UrlDetailFieldComponent, _super);
        function UrlDetailFieldComponent(typeFormatter, logic) {
            var _this = _super.call(this, typeFormatter, logic) || this;
            _this.typeFormatter = typeFormatter;
            _this.logic = logic;
            return _this;
        }
        Object.defineProperty(UrlDetailFieldComponent.prototype, "target", {
            get: function () {
                if (this.field.metadata && this.field.metadata.target) {
                    return this.field.metadata.target;
                }
                return '_blank';
            },
            enumerable: false,
            configurable: true
        });
        return UrlDetailFieldComponent;
    }(BaseFieldComponent));
    UrlDetailFieldComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-url-detail',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<a [target]=\"target\" href=\"{{ this.field.value }}\">{{ this.field.value }}</a>\n"
                },] }
    ];
    UrlDetailFieldComponent.ctorParameters = function () { return [
        { type: DataTypeFormatter },
        { type: FieldLogicManager }
    ]; };

    var BaseDateTimeComponent = /** @class */ (function (_super) {
        __extends(BaseDateTimeComponent, _super);
        function BaseDateTimeComponent(formatter, typeFormatter, logic) {
            var _this = _super.call(this, typeFormatter, logic) || this;
            _this.formatter = formatter;
            _this.typeFormatter = typeFormatter;
            _this.logic = logic;
            _this.vm$ = _this.formatter.format$;
            return _this;
        }
        BaseDateTimeComponent.prototype.getDateFormat = function () {
            return this.formatter.getDateFormat();
        };
        BaseDateTimeComponent.prototype.getDateTimeFormat = function () {
            return this.formatter.getDateTimeFormat();
        };
        return BaseDateTimeComponent;
    }(BaseFieldComponent));
    BaseDateTimeComponent.decorators = [
        { type: i0.Component, args: [{ template: '' },] }
    ];
    BaseDateTimeComponent.ctorParameters = function () { return [
        { type: DatetimeFormatter },
        { type: DataTypeFormatter },
        { type: FieldLogicManager }
    ]; };

    var DateDetailFieldComponent = /** @class */ (function (_super) {
        __extends(DateDetailFieldComponent, _super);
        function DateDetailFieldComponent(formatter, typeFormatter, logic) {
            var _this = _super.call(this, formatter, typeFormatter, logic) || this;
            _this.formatter = formatter;
            _this.typeFormatter = typeFormatter;
            _this.logic = logic;
            return _this;
        }
        return DateDetailFieldComponent;
    }(BaseDateTimeComponent));
    DateDetailFieldComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-date-detail',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<ng-container *ngIf=\"(vm$ | async) as vm\">\n    {{field.value | date:getDateFormat()}}\n</ng-container>\n"
                },] }
    ];
    DateDetailFieldComponent.ctorParameters = function () { return [
        { type: DatetimeFormatter },
        { type: DataTypeFormatter },
        { type: FieldLogicManager }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var DateDetailFieldModule = /** @class */ (function () {
        function DateDetailFieldModule() {
        }
        return DateDetailFieldModule;
    }());
    DateDetailFieldModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [DateDetailFieldComponent],
                    exports: [DateDetailFieldComponent],
                    imports: [
                        common.CommonModule,
                    ]
                },] }
    ];

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var FormatCurrencyPipe = /** @class */ (function () {
        function FormatCurrencyPipe(formatter) {
            this.formatter = formatter;
        }
        FormatCurrencyPipe.prototype.transform = function (value, options) {
            if (options === void 0) { options = null; }
            return this.formatter.toUserFormat(value, options);
        };
        return FormatCurrencyPipe;
    }());
    FormatCurrencyPipe.decorators = [
        { type: i0.Pipe, args: [{
                    name: 'formatCurrency'
                },] }
    ];
    FormatCurrencyPipe.ctorParameters = function () { return [
        { type: CurrencyFormatter }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var FormatCurrencyModule = /** @class */ (function () {
        function FormatCurrencyModule() {
        }
        return FormatCurrencyModule;
    }());
    FormatCurrencyModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [
                        FormatCurrencyPipe
                    ],
                    exports: [
                        FormatCurrencyPipe
                    ],
                    imports: [
                        common.CommonModule,
                    ]
                },] }
    ];

    var BaseNumberComponent = /** @class */ (function (_super) {
        __extends(BaseNumberComponent, _super);
        function BaseNumberComponent(userPreferences, systemConfig, typeFormatter, logic) {
            var _this = _super.call(this, typeFormatter, logic) || this;
            _this.userPreferences = userPreferences;
            _this.systemConfig = systemConfig;
            _this.typeFormatter = typeFormatter;
            _this.logic = logic;
            _this.preferences$ = _this.userPreferences.userPreferences$;
            _this.configs$ = _this.systemConfig.configs$;
            _this.vm$ = rxjs.combineLatest([_this.configs$, _this.preferences$]).pipe(operators.map(function (_a) {
                var _b = __read(_a, 2), configs = _b[0], preferences = _b[1];
                return ({
                    configs: configs,
                    preferences: preferences,
                });
            }));
            return _this;
        }
        Object.defineProperty(BaseNumberComponent.prototype, "format", {
            get: function () {
                if (!this.field.metadata) {
                    return true;
                }
                return this.field.metadata.format !== false;
            },
            enumerable: false,
            configurable: true
        });
        return BaseNumberComponent;
    }(BaseFieldComponent));
    BaseNumberComponent.decorators = [
        { type: i0.Component, args: [{ template: '' },] }
    ];
    BaseNumberComponent.ctorParameters = function () { return [
        { type: UserPreferenceStore },
        { type: SystemConfigStore },
        { type: DataTypeFormatter },
        { type: FieldLogicManager }
    ]; };

    var CurrencyDetailFieldComponent = /** @class */ (function (_super) {
        __extends(CurrencyDetailFieldComponent, _super);
        function CurrencyDetailFieldComponent(userPreferences, systemConfig, typeFormatter, logic, currencyService) {
            var _this = _super.call(this, userPreferences, systemConfig, typeFormatter, logic) || this;
            _this.userPreferences = userPreferences;
            _this.systemConfig = systemConfig;
            _this.typeFormatter = typeFormatter;
            _this.logic = logic;
            _this.currencyService = currencyService;
            return _this;
        }
        CurrencyDetailFieldComponent.prototype.getOptions = function () {
            var options = {};
            if (this.field && this.field.metadata && this.field.metadata.digits !== null && isFinite(this.field.metadata.digits)) {
                options = {
                    digits: this.field.metadata.digits
                };
            }
            var isBase = this.currencyService.isBase(this.field);
            var currencyId = this.currencyService.getCurrencyId(this.record);
            if (isBase || currencyId === null) {
                currencyId = this.currencyService.getUserCurrency().id;
            }
            options.symbol = this.currencyService.getSymbol(currencyId);
            options.code = this.currencyService.getCode(currencyId);
            return options;
        };
        CurrencyDetailFieldComponent.prototype.getCurrencyValue = function () {
            return this.currencyService.getFieldCurrencyValue(this.field, this.record);
        };
        return CurrencyDetailFieldComponent;
    }(BaseNumberComponent));
    CurrencyDetailFieldComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-currency-detail',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<ng-container *ngIf=\"(vm$ | async) as vm\">\n    {{this.getCurrencyValue() | formatCurrency:getOptions()}}\n</ng-container>\n"
                },] }
    ];
    CurrencyDetailFieldComponent.ctorParameters = function () { return [
        { type: UserPreferenceStore },
        { type: SystemConfigStore },
        { type: DataTypeFormatter },
        { type: FieldLogicManager },
        { type: CurrencyService }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var CurrencyDetailFieldModule = /** @class */ (function () {
        function CurrencyDetailFieldModule() {
        }
        return CurrencyDetailFieldModule;
    }());
    CurrencyDetailFieldModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [CurrencyDetailFieldComponent],
                    exports: [CurrencyDetailFieldComponent],
                    imports: [
                        common.CommonModule,
                        FormatCurrencyModule,
                    ]
                },] }
    ];

    var TextDetailFieldComponent = /** @class */ (function (_super) {
        __extends(TextDetailFieldComponent, _super);
        function TextDetailFieldComponent(typeFormatter, logic) {
            var _this = _super.call(this, typeFormatter, logic) || this;
            _this.typeFormatter = typeFormatter;
            _this.logic = logic;
            return _this;
        }
        Object.defineProperty(TextDetailFieldComponent.prototype, "rows", {
            get: function () {
                if (this.field.metadata && this.field.metadata.rows) {
                    return this.field.metadata.rows;
                }
                return 6;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TextDetailFieldComponent.prototype, "cols", {
            get: function () {
                if (this.field.metadata && this.field.metadata.cols) {
                    return this.field.metadata.cols;
                }
                return 20;
            },
            enumerable: false,
            configurable: true
        });
        return TextDetailFieldComponent;
    }(BaseFieldComponent));
    TextDetailFieldComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-text-detail',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<textarea [rows]=\"rows\" [cols]=\"cols\" [ngClass]=\"klass\" readonly>{{field.value}}</textarea>\n"
                },] }
    ];
    TextDetailFieldComponent.ctorParameters = function () { return [
        { type: DataTypeFormatter },
        { type: FieldLogicManager }
    ]; };

    var VarcharEditFieldComponent = /** @class */ (function (_super) {
        __extends(VarcharEditFieldComponent, _super);
        function VarcharEditFieldComponent(typeFormatter, logic) {
            var _this = _super.call(this, typeFormatter, logic) || this;
            _this.typeFormatter = typeFormatter;
            _this.logic = logic;
            return _this;
        }
        VarcharEditFieldComponent.prototype.ngOnInit = function () {
            _super.prototype.ngOnInit.call(this);
            this.subscribeValueChanges();
        };
        VarcharEditFieldComponent.prototype.ngOnDestroy = function () {
            this.unsubscribeAll();
        };
        return VarcharEditFieldComponent;
    }(BaseFieldComponent));
    VarcharEditFieldComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-varchar-edit',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<input [class.is-invalid]=\"field.formControl.invalid && field.formControl.touched\"\n       [formControl]=\"field.formControl\"\n       [value]=\"field.value\"\n       [ngClass]=\"klass\"\n       type=\"text\">\n"
                },] }
    ];
    VarcharEditFieldComponent.ctorParameters = function () { return [
        { type: DataTypeFormatter },
        { type: FieldLogicManager }
    ]; };

    var DateTimeModel = /** @class */ (function () {
        function DateTimeModel(init) {
            this.hourStep = 1;
            this.minuteStep = 15;
            this.secondStep = 30;
            this.displaySeconds = false;
            Object.assign(this, init);
        }
        DateTimeModel.toDateTimeStruct = function (formatter, dateString) {
            if (!dateString) {
                return null;
            }
            var dateTimeStruct = formatter.userDateTimeFormatToStruct(dateString);
            if (!dateTimeStruct) {
                return null;
            }
            var date = dateTimeStruct.date, time = dateTimeStruct.time;
            return new DateTimeModel({
                date: date,
                time: time
            });
        };
        DateTimeModel.prototype.toUserFormat = function (formatter) {
            //prepare datetime string in yyyy-M-d H:m:s format (datetimepicker default)
            var dateString = [this.date.year, this.date.month, this.date.day].join('-');
            var timeString = [this.time.hour, this.time.minute, this.time.second].join(':');
            var datetimeString = [dateString, timeString].join(' ');
            //convert from yyyy-M-d H:m:s format to user format
            return formatter.toUserFormat(datetimeString, { fromFormat: 'yyyy-M-d H:m:s' });
        };
        return DateTimeModel;
    }());

    var DateTimeEditFieldComponent = /** @class */ (function (_super) {
        __extends(DateTimeEditFieldComponent, _super);
        function DateTimeEditFieldComponent(formatter, typeFormatter, calendar, config, logic) {
            var _this = _super.call(this, formatter, typeFormatter, logic) || this;
            _this.formatter = formatter;
            _this.typeFormatter = typeFormatter;
            _this.calendar = calendar;
            _this.config = config;
            _this.logic = logic;
            _this.dateTimeModel = new DateTimeModel();
            config.autoClose = "outside";
            config.placement = _this.getPlacement();
            return _this;
        }
        DateTimeEditFieldComponent.prototype.ngOnInit = function () {
            // Note: handle NgbDatePicker default validation
            // Note: convert empty form value to null for the ngb date validator to pass it
            if (i5.isEmptyString(this.field.value)) {
                this.dateTimeModel.date = this.calendar.getToday();
                this.dateTimeModel.time = { hour: 0, minute: 0, second: 0 };
                this.field.formControl.setValue(null);
            }
            else {
                this.dateTimeModel = DateTimeModel.toDateTimeStruct(this.formatter, this.field.value);
                if (this.dateTimeModel === null) {
                    this.field.formControl.setValue(null);
                    return;
                }
                this.setFormValues(this.dateTimeModel.toUserFormat(this.formatter));
            }
            // enable seconds in timepicker
            if (this.formatter.getTimeFormat().includes('ss')) {
                this.dateTimeModel.displaySeconds = true;
            }
            this.subscribeValueChanges();
        };
        DateTimeEditFieldComponent.prototype.ngOnDestroy = function () {
            this.unsubscribeAll();
        };
        DateTimeEditFieldComponent.prototype.setFormValues = function (dateTimeString) {
            this.field.value = dateTimeString;
            this.field.formControl.setValue(dateTimeString);
            this.field.formControl.markAsDirty();
        };
        DateTimeEditFieldComponent.prototype.onDateChange = function (date) {
            this.dateTimeModel.date = date;
            this.setFormValues(this.dateTimeModel.toUserFormat(this.formatter));
        };
        DateTimeEditFieldComponent.prototype.onTimeChange = function (time) {
            this.dateTimeModel.time = time;
            this.setFormValues(this.dateTimeModel.toUserFormat(this.formatter));
        };
        DateTimeEditFieldComponent.prototype.onInputChange = function ($event) {
            var dateTimeModel = DateTimeModel.toDateTimeStruct(this.formatter, $event.target.value);
            if (!dateTimeModel) {
                return;
            }
            this.dateTimeModel = dateTimeModel;
        };
        DateTimeEditFieldComponent.prototype.getOpenButton = function () {
            return {
                klass: 'btn btn-sm btn-outline-secondary m-0 border-0',
                icon: 'calendar'
            };
        };
        DateTimeEditFieldComponent.prototype.getPlacement = function () {
            return ['bottom-right', 'top-right', 'bottom-left', 'top-left'];
        };
        return DateTimeEditFieldComponent;
    }(BaseDateTimeComponent));
    DateTimeEditFieldComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-datetime-edit',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n\n<div class=\"input-group mr-2\">\n\n    <input\n        [ngClass]=\"klass\"\n        [placeholder]=\"getDateTimeFormat().toLowerCase()\"\n        [class.is-invalid]=\"field.formControl.invalid && field.formControl.touched\"\n        [formControl]=\"field.formControl\"\n        (change)=\"onInputChange($event)\"\n    >\n\n    <div class=\"input-group-append\">\n        <scrm-button [config]=\"getOpenButton()\" [ngbPopover]=\"calendarContent\">\n        </scrm-button>\n    </div>\n</div>\n\n<ng-template #calendarContent>\n    <div>\n        <div>\n            <ngb-datepicker name=\"datepicker\"\n                            [ngModel]=\"dateTimeModel.date\"\n                            (dateSelect)=\"onDateChange($event)\" [startDate]=\"dateTimeModel.date\"></ngb-datepicker>\n        </div>\n\n        <div class=\"d-flex justify-content-center mt-auto\">\n            <ngb-timepicker name=\"timepicker\"\n                            [ngModel]=\"dateTimeModel.time\" (ngModelChange)=\"onTimeChange($event)\"\n                            [seconds]=\"dateTimeModel.displaySeconds\" [hourStep]=\"dateTimeModel.hourStep\"\n                            [minuteStep]=\"dateTimeModel.minuteStep\"\n                            [secondStep]=\"dateTimeModel.secondStep\">\n            </ngb-timepicker>\n        </div>\n    </div>\n</ng-template>\n"
                },] }
    ];
    DateTimeEditFieldComponent.ctorParameters = function () { return [
        { type: DatetimeFormatter },
        { type: DataTypeFormatter },
        { type: i1$2.NgbCalendar },
        { type: i1$2.NgbPopoverConfig },
        { type: FieldLogicManager }
    ]; };
    DateTimeEditFieldComponent.propDecorators = {
        popover: [{ type: i0.ViewChild, args: [i1$2.NgbPopover, { static: true },] }]
    };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var DateTimeEditFieldModule = /** @class */ (function () {
        function DateTimeEditFieldModule() {
        }
        return DateTimeEditFieldModule;
    }());
    DateTimeEditFieldModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [DateTimeEditFieldComponent],
                    exports: [DateTimeEditFieldComponent],
                    imports: [
                        common.CommonModule,
                        forms.FormsModule,
                        i1$2.NgbDatepickerModule,
                        i1$2.NgbTimepickerModule,
                        ImageModule,
                        ButtonModule,
                        forms.ReactiveFormsModule,
                        i1$2.NgbModule
                    ]
                },] }
    ];

    var DateParserFormatter = /** @class */ (function (_super) {
        __extends(DateParserFormatter, _super);
        function DateParserFormatter(formatter) {
            var _this = _super.call(this) || this;
            _this.formatter = formatter;
            return _this;
        }
        DateParserFormatter.prototype.parse = function (value) {
            if (!value) {
                return null;
            }
            return this.formatter.userDateFormatToStruct(value);
        };
        DateParserFormatter.prototype.format = function (date) {
            if (!date) {
                return null;
            }
            var dateString = [date.year, date.month, date.day].join('-');
            return this.formatter.toUserFormat(dateString, { fromFormat: 'yyyy-M-d' });
        };
        return DateParserFormatter;
    }(i1$2.NgbDateParserFormatter));
    DateParserFormatter.decorators = [
        { type: i0.Injectable }
    ];
    DateParserFormatter.ctorParameters = function () { return [
        { type: DateFormatter }
    ]; };

    var DateAdapter = /** @class */ (function (_super) {
        __extends(DateAdapter, _super);
        function DateAdapter(formatter) {
            var _this = _super.call(this) || this;
            _this.formatter = formatter;
            return _this;
        }
        DateAdapter.prototype.fromModel = function (value) {
            if (!value) {
                return null;
            }
            return this.formatter.userDateFormatToStruct(value);
        };
        DateAdapter.prototype.toModel = function (date) {
            if (!date) {
                return null;
            }
            var dateString = [date.year, date.month, date.day].join('-');
            return this.formatter.toUserFormat(dateString, { fromFormat: 'yyyy-M-d' });
        };
        return DateAdapter;
    }(i1$2.NgbDateAdapter));
    DateAdapter.decorators = [
        { type: i0.Injectable }
    ];
    DateAdapter.ctorParameters = function () { return [
        { type: DateFormatter }
    ]; };

    var DateFilterFieldComponent = /** @class */ (function (_super) {
        __extends(DateFilterFieldComponent, _super);
        function DateFilterFieldComponent(formatter, typeFormatter, logic) {
            var _this = _super.call(this, formatter, typeFormatter, logic) || this;
            _this.formatter = formatter;
            _this.typeFormatter = typeFormatter;
            _this.logic = logic;
            return _this;
        }
        DateFilterFieldComponent.prototype.ngOnInit = function () {
            _super.prototype.ngOnInit.call(this);
            var current = '';
            if (this.field.criteria.values && this.field.criteria.values.length > 0) {
                current = this.field.criteria.values[0];
            }
            var formattedValue = null;
            if (!i5.isEmptyString(current)) {
                current = current.trim();
                formattedValue = this.typeFormatter.toUserFormat(this.field.type, current, { mode: 'edit' });
            }
            this.field.value = current;
            this.field.formControl.setValue(formattedValue);
            this.field.formControl.markAsDirty();
            this.setModel(current);
            this.subscribeValueChanges();
        };
        DateFilterFieldComponent.prototype.ngOnDestroy = function () {
            this.unsubscribeAll();
        };
        DateFilterFieldComponent.prototype.setModel = function ($event) {
            this.dateModel = this.formatter.userDateFormatToStruct($event);
        };
        DateFilterFieldComponent.prototype.getOpenButton = function (datepicker) {
            var _this = this;
            return {
                klass: 'btn btn-sm btn-outline-secondary m-0 border-0',
                // eslint-disable-next-line @typescript-eslint/explicit-function-return-type
                onClick: function () {
                    datepicker.toggle();
                    datepicker.navigateTo(_this.dateModel);
                },
                icon: 'calendar'
            };
        };
        DateFilterFieldComponent.prototype.getPlacement = function () {
            return ['bottom-left', 'bottom-right', 'top-left', 'top-right'];
        };
        DateFilterFieldComponent.prototype.setFieldValue = function (newValue) {
            this.field.value = newValue;
            this.field.criteria.operator = '=';
            this.field.criteria.values = [newValue];
        };
        return DateFilterFieldComponent;
    }(BaseDateTimeComponent));
    DateFilterFieldComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-date-filter',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<div class=\"input-group\">\n    <input ngbDatepicker\n           [ngClass]=\"klass\"\n           [placement]=\"getPlacement()\"\n           [placeholder]=\"getDateFormat().toLowerCase()\"\n           [class.is-invalid]=\"field.formControl.invalid && field.formControl.touched\"\n           [formControl]=\"field.formControl\"\n           [startDate]=\"dateModel\"\n           (ngModelChange)=\"setModel($event)\"\n           #datepicker=\"ngbDatepicker\">\n    <span class=\"input-group-append align-items-end\">\n        <scrm-button [config]=\"getOpenButton(datepicker)\">\n        </scrm-button>\n    </span>\n</div>\n",
                    providers: [
                        { provide: i1$2.NgbDateAdapter, useClass: DateAdapter },
                        { provide: i1$2.NgbDateParserFormatter, useClass: DateParserFormatter }
                    ]
                },] }
    ];
    DateFilterFieldComponent.ctorParameters = function () { return [
        { type: DateFormatter },
        { type: DataTypeFormatter },
        { type: FieldLogicManager }
    ]; };

    var DateTimeDetailFieldComponent = /** @class */ (function (_super) {
        __extends(DateTimeDetailFieldComponent, _super);
        function DateTimeDetailFieldComponent(formatter, typeFormatter, logic) {
            var _this = _super.call(this, formatter, typeFormatter, logic) || this;
            _this.formatter = formatter;
            _this.typeFormatter = typeFormatter;
            _this.logic = logic;
            return _this;
        }
        return DateTimeDetailFieldComponent;
    }(BaseDateTimeComponent));
    DateTimeDetailFieldComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-datetime-detail',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<ng-container *ngIf=\"(vm$ | async) as vm\">\n    <span *ngIf=\"field.value\">\n    {{field.value | date:getDateTimeFormat()}}\n    </span>\n</ng-container>\n"
                },] }
    ];
    DateTimeDetailFieldComponent.ctorParameters = function () { return [
        { type: DatetimeFormatter },
        { type: DataTypeFormatter },
        { type: FieldLogicManager }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var DateTimeDetailFieldModule = /** @class */ (function () {
        function DateTimeDetailFieldModule() {
        }
        return DateTimeDetailFieldModule;
    }());
    DateTimeDetailFieldModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [DateTimeDetailFieldComponent],
                    exports: [DateTimeDetailFieldComponent],
                    imports: [
                        common.CommonModule,
                    ]
                },] }
    ];

    var DateTimeFilterFieldComponent = /** @class */ (function (_super) {
        __extends(DateTimeFilterFieldComponent, _super);
        function DateTimeFilterFieldComponent(formatter, typeFormatter, calendar, config, logic) {
            var _this = _super.call(this, formatter, typeFormatter, logic) || this;
            _this.formatter = formatter;
            _this.typeFormatter = typeFormatter;
            _this.calendar = calendar;
            _this.config = config;
            _this.logic = logic;
            _this.dateTimeModel = new DateTimeModel();
            config.autoClose = "outside";
            config.placement = _this.getPlacement();
            return _this;
        }
        DateTimeFilterFieldComponent.prototype.ngOnInit = function () {
            _super.prototype.ngOnInit.call(this);
            var values = (this.field && this.field.criteria && this.field.criteria.values) || [];
            var criteria = '';
            if (values.length > 0) {
                criteria = this.field.criteria.values[0];
            }
            // Note: handle NgbDatePicker default validation
            // Note: convert empty form value to null for the ngb date validator to pass it
            if (i5.isEmptyString(criteria)) {
                this.dateTimeModel.date = this.calendar.getToday();
                this.dateTimeModel.time = { hour: 0, minute: 0, second: 0 };
                this.field.formControl.setValue(null);
            }
            else {
                this.dateTimeModel = DateTimeModel.toDateTimeStruct(this.formatter, criteria);
                if (this.dateTimeModel === null) {
                    this.field.formControl.setValue(null);
                    return;
                }
                this.setFormValues(this.dateTimeModel.toUserFormat(this.formatter));
            }
            // enable seconds in timepicker
            if (this.formatter.getTimeFormat().includes('ss')) {
                this.dateTimeModel.displaySeconds = true;
            }
            this.subscribeValueChanges();
        };
        DateTimeFilterFieldComponent.prototype.ngOnDestroy = function () {
            this.unsubscribeAll();
        };
        DateTimeFilterFieldComponent.prototype.setFormValues = function (dateTimeString) {
            this.field.formControl.setValue(dateTimeString);
            this.field.formControl.markAsDirty();
        };
        DateTimeFilterFieldComponent.prototype.setFieldValue = function (newValue) {
            this.field.value = newValue;
            this.field.criteria.operator = '=';
            this.field.criteria.values = [newValue];
        };
        DateTimeFilterFieldComponent.prototype.onDateChange = function (date) {
            this.dateTimeModel.date = date;
            this.setFormValues(this.dateTimeModel.toUserFormat(this.formatter));
        };
        DateTimeFilterFieldComponent.prototype.onTimeChange = function (time) {
            this.dateTimeModel.time = time;
            this.setFormValues(this.dateTimeModel.toUserFormat(this.formatter));
        };
        DateTimeFilterFieldComponent.prototype.onInputChange = function ($event) {
            var dateTimeModel = DateTimeModel.toDateTimeStruct(this.formatter, $event.target.value);
            if (!dateTimeModel) {
                return;
            }
            this.dateTimeModel = dateTimeModel;
        };
        DateTimeFilterFieldComponent.prototype.getOpenButton = function () {
            return {
                klass: 'btn btn-sm btn-outline-secondary m-0 border-0',
                icon: 'calendar'
            };
        };
        DateTimeFilterFieldComponent.prototype.getPlacement = function () {
            return ['bottom-right', 'top-right', 'bottom-left', 'top-left'];
        };
        return DateTimeFilterFieldComponent;
    }(BaseDateTimeComponent));
    DateTimeFilterFieldComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-datetime-filter',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n\n<div class=\"input-group mr-2\">\n\n    <input\n        [ngClass]=\"klass\"\n        [placeholder]=\"getDateTimeFormat().toLowerCase()\"\n        [class.is-invalid]=\"field.formControl.invalid && field.formControl.touched\"\n        [formControl]=\"field.formControl\"\n        (change)=\"onInputChange($event)\"\n    >\n\n    <div class=\"input-group-append\">\n        <scrm-button [config]=\"getOpenButton()\" [ngbPopover]=\"calendarContent\">\n        </scrm-button>\n    </div>\n</div>\n\n<ng-template #calendarContent>\n    <div>\n        <div>\n            <ngb-datepicker name=\"datepicker\"\n                            [ngModel]=\"dateTimeModel.date\"\n                            (dateSelect)=\"onDateChange($event)\" [startDate]=\"dateTimeModel.date\"></ngb-datepicker>\n        </div>\n\n        <div class=\"d-flex justify-content-center mt-auto\">\n            <ngb-timepicker name=\"timepicker\"\n                            [ngModel]=\"dateTimeModel.time\" (ngModelChange)=\"onTimeChange($event)\"\n                            [seconds]=\"dateTimeModel.displaySeconds\" [hourStep]=\"dateTimeModel.hourStep\"\n                            [minuteStep]=\"dateTimeModel.minuteStep\"\n                            [secondStep]=\"dateTimeModel.secondStep\">\n            </ngb-timepicker>\n        </div>\n    </div>\n</ng-template>\n"
                },] }
    ];
    DateTimeFilterFieldComponent.ctorParameters = function () { return [
        { type: DatetimeFormatter },
        { type: DataTypeFormatter },
        { type: i1$2.NgbCalendar },
        { type: i1$2.NgbPopoverConfig },
        { type: FieldLogicManager }
    ]; };
    DateTimeFilterFieldComponent.propDecorators = {
        popover: [{ type: i0.ViewChild, args: [i1$2.NgbPopover, { static: true },] }]
    };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var DateTimeFilterFieldModule = /** @class */ (function () {
        function DateTimeFilterFieldModule() {
        }
        return DateTimeFilterFieldModule;
    }());
    DateTimeFilterFieldModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [DateTimeFilterFieldComponent],
                    exports: [DateTimeFilterFieldComponent],
                    imports: [
                        common.CommonModule,
                        forms.FormsModule,
                        i1$2.NgbDatepickerModule,
                        i1$2.NgbTimepickerModule,
                        ImageModule,
                        ButtonModule,
                        forms.ReactiveFormsModule,
                        i1$2.NgbModule
                    ]
                },] }
    ];

    var MultiEnumDetailFieldComponent = /** @class */ (function (_super) {
        __extends(MultiEnumDetailFieldComponent, _super);
        function MultiEnumDetailFieldComponent(languages, typeFormatter, logic) {
            var _this = _super.call(this, languages, typeFormatter, logic) || this;
            _this.languages = languages;
            _this.typeFormatter = typeFormatter;
            _this.logic = logic;
            return _this;
        }
        return MultiEnumDetailFieldComponent;
    }(BaseMultiEnumComponent));
    MultiEnumDetailFieldComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-multienum-detail',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<ul>\n    <li *ngFor=\"let selected of selectedValues;\">{{selected.label}}</li>\n</ul>\n"
                },] }
    ];
    MultiEnumDetailFieldComponent.ctorParameters = function () { return [
        { type: LanguageStore },
        { type: DataTypeFormatter },
        { type: FieldLogicManager }
    ]; };

    var EnumEditFieldComponent = /** @class */ (function (_super) {
        __extends(EnumEditFieldComponent, _super);
        function EnumEditFieldComponent(languages, typeFormatter, logic) {
            var _this = _super.call(this, languages, typeFormatter, logic) || this;
            _this.languages = languages;
            _this.typeFormatter = typeFormatter;
            _this.logic = logic;
            return _this;
        }
        EnumEditFieldComponent.prototype.ngOnInit = function () {
            this.checkAndInitAsDynamicEnum();
            _super.prototype.ngOnInit.call(this);
        };
        EnumEditFieldComponent.prototype.onAdd = function (item) {
            if (item && item.value) {
                this.field.value = item.value;
                this.field.formControl.setValue(item.value);
                this.field.formControl.markAsDirty();
                return;
            }
            this.field.value = '';
            this.field.formControl.setValue('');
            this.field.formControl.markAsDirty();
            this.selectedValues = [];
            return;
        };
        EnumEditFieldComponent.prototype.onRemove = function () {
            var _this = this;
            this.field.value = '';
            this.field.formControl.setValue('');
            this.field.formControl.markAsDirty();
            setTimeout(function () {
                _this.tag.focus(true, true);
                _this.tag.dropdown.show();
            }, 200);
        };
        EnumEditFieldComponent.prototype.getPlaceholderLabel = function () {
            return this.languages.getAppString('LBL_SELECT_ITEM') || '';
        };
        EnumEditFieldComponent.prototype.selectFirstElement = function () {
            var filteredElements = this.tag.dropdown.items;
            if (filteredElements.length !== 0) {
                var firstElement = filteredElements[0];
                this.selectedValues.push(firstElement);
                this.onAdd(firstElement);
                this.tag.dropdown.hide();
            }
        };
        return EnumEditFieldComponent;
    }(BaseEnumComponent));
    EnumEditFieldComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-enum-edit',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<tag-input [(ngModel)]=\"selectedValues\"\n           [onlyFromAutocomplete]=\"true\"\n           [clearOnBlur]=\"true\"\n           [displayBy]=\"'label'\"\n           [identifyBy]=\"'value'\"\n           [placeholder]=\"getPlaceholderLabel()\"\n           [secondaryPlaceholder]=\"getPlaceholderLabel()\"\n           [class]=\"getInvalidClass()\"\n           [inputClass]=\"getInvalidClass()\"\n           maxItems=\"1\"\n           #tag\n           (onAdd)=\"onAdd($event)\"\n           (onRemove)=\"onRemove()\"\n           (keyup.enter)=\"selectFirstElement()\">\n    <tag-input-dropdown [displayBy]=\"'label'\"\n                        [identifyBy]=\"'value'\"\n                        [showDropdownIfEmpty]=\"true\"\n                        [keepOpen]=\"false\"\n                        [autocompleteItems]=\"this.options\">\n    </tag-input-dropdown>\n</tag-input>\n"
                },] }
    ];
    EnumEditFieldComponent.ctorParameters = function () { return [
        { type: LanguageStore },
        { type: DataTypeFormatter },
        { type: FieldLogicManager }
    ]; };
    EnumEditFieldComponent.propDecorators = {
        tag: [{ type: i0.ViewChild, args: ['tag',] }]
    };

    var BaseBooleanComponent = /** @class */ (function (_super) {
        __extends(BaseBooleanComponent, _super);
        function BaseBooleanComponent() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Object.defineProperty(BaseBooleanComponent.prototype, "checked", {
            get: function () {
                return i5.isTrue(this.field.value);
            },
            enumerable: false,
            configurable: true
        });
        BaseBooleanComponent.prototype.toggle = function () {
            var newValue = 'true';
            if (this.checked) {
                newValue = 'false';
            }
            this.field.value = newValue;
            this.field.formControl.setValue(newValue);
            this.field.formControl.markAsDirty();
        };
        return BaseBooleanComponent;
    }(BaseFieldComponent));
    BaseBooleanComponent.decorators = [
        { type: i0.Component, args: [{ template: '' },] }
    ];

    var BooleanDetailFieldComponent = /** @class */ (function (_super) {
        __extends(BooleanDetailFieldComponent, _super);
        function BooleanDetailFieldComponent(typeFormatter, logic) {
            var _this = _super.call(this, typeFormatter, logic) || this;
            _this.typeFormatter = typeFormatter;
            _this.logic = logic;
            return _this;
        }
        return BooleanDetailFieldComponent;
    }(BaseBooleanComponent));
    BooleanDetailFieldComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-boolean-detail',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<label class=\"checkbox-container\">\n    <input type=\"checkbox\"\n           [checked]=\"checked\"\n           disabled\n           readonly\n           aria-hidden=\"true\">\n    <span class=\"checkmark\"></span>\n</label>\n"
                },] }
    ];
    BooleanDetailFieldComponent.ctorParameters = function () { return [
        { type: DataTypeFormatter },
        { type: FieldLogicManager }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var ModuleNameMapper = /** @class */ (function () {
        function ModuleNameMapper(systemConfig) {
            this.systemConfig = systemConfig;
        }
        /**
         * Public Api
         */
        /**
         * Map the legacy name to frontend
         *
         * @param {string} module the module name
         * @returns {string} frontend name
         */
        ModuleNameMapper.prototype.toFrontend = function (module) {
            var map = this.getLegacyToFrontendMap();
            if (!map[module]) {
                return module;
            }
            return map[module];
        };
        /**
         * Map the frontend name to legacy
         *
         * @param {string} module the module name
         * @returns {string} frontend name
         */
        ModuleNameMapper.prototype.toLegacy = function (module) {
            var map = this.getFrontendToLegacyMap();
            if (!map[module]) {
                return module;
            }
            return map[module];
        };
        /**
         * Check if module is valid
         *
         * @param {string} module the module name
         * @returns {boolean} is valid
         */
        ModuleNameMapper.prototype.isValid = function (module) {
            var map = this.getFrontendToLegacyMap();
            var valid = false;
            if (map[module]) {
                valid = true;
            }
            return valid;
        };
        /**
         * Internal API
         */
        /**
         * Get the legacy to frontend map
         *
         * @returns {{}} map
         */
        ModuleNameMapper.prototype.getLegacyToFrontendMap = function () {
            return this.systemConfig.getConfigValue('module_name_map');
        };
        /**
         * Get the frontend to legacy map
         *
         * @returns {{}} map
         */
        ModuleNameMapper.prototype.getFrontendToLegacyMap = function () {
            var map = this.systemConfig.getConfigValue('module_name_map');
            var invertedMap = {};
            Object.keys(map).forEach(function (legacyName) {
                var frontendName = map[legacyName];
                invertedMap[frontendName] = legacyName;
            });
            return invertedMap;
        };
        return ModuleNameMapper;
    }());
    ModuleNameMapper.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function ModuleNameMapper_Factory() { return new ModuleNameMapper(i0__namespace.ɵɵinject(SystemConfigStore)); }, token: ModuleNameMapper, providedIn: "root" });
    ModuleNameMapper.decorators = [
        { type: i0.Injectable, args: [{ providedIn: 'root' },] }
    ];
    ModuleNameMapper.ctorParameters = function () { return [
        { type: SystemConfigStore }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var ActionNameMapper = /** @class */ (function () {
        function ActionNameMapper(systemConfig) {
            this.systemConfig = systemConfig;
        }
        /**
         * Public Api
         */
        /**
         * Map the legacy name to frontend
         *
         * @param {string} action the action name
         * @returns {string} frontend name
         */
        ActionNameMapper.prototype.toFrontend = function (action) {
            var map = this.getLegacyToFrontendMap();
            if (!map[action]) {
                return action;
            }
            return map[action];
        };
        /**
         * Map the frontend name to legacy
         *
         * @param {string} action the action name
         * @returns {string} frontend name
         */
        ActionNameMapper.prototype.toLegacy = function (action) {
            var map = this.getFrontendToLegacyMap();
            if (!map[action]) {
                return action;
            }
            return map[action];
        };
        /**
         * Check if action is valid
         *
         * @param {string} action the action name
         * @returns {boolean} is valid
         */
        ActionNameMapper.prototype.isValid = function (action) {
            var map = this.getFrontendToLegacyMap();
            var valid = false;
            if (map[action]) {
                valid = true;
            }
            return valid;
        };
        /**
         * Internal API
         */
        /**
         * Get the legacy to frontend map
         *
         * @returns {{}} legacy to frontend map
         */
        ActionNameMapper.prototype.getLegacyToFrontendMap = function () {
            return this.systemConfig.getConfigValue('action_name_map');
        };
        /**
         * Get the frontend to legacy map
         *
         * @returns {{}} frontend to legacy map
         */
        ActionNameMapper.prototype.getFrontendToLegacyMap = function () {
            var map = this.systemConfig.getConfigValue('action_name_map');
            var invertedMap = {};
            Object.keys(map).forEach(function (legacyName) {
                var frontendName = map[legacyName];
                invertedMap[frontendName] = legacyName;
            });
            return invertedMap;
        };
        return ActionNameMapper;
    }());
    ActionNameMapper.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function ActionNameMapper_Factory() { return new ActionNameMapper(i0__namespace.ɵɵinject(SystemConfigStore)); }, token: ActionNameMapper, providedIn: "root" });
    ActionNameMapper.decorators = [
        { type: i0.Injectable, args: [{ providedIn: 'root' },] }
    ];
    ActionNameMapper.ctorParameters = function () { return [
        { type: SystemConfigStore }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var ROUTE_PREFIX$1 = './#';
    var ModuleNavigation = /** @class */ (function () {
        function ModuleNavigation(router, moduleNameMapper, actionNameMapper) {
            this.router = router;
            this.moduleNameMapper = moduleNameMapper;
            this.actionNameMapper = actionNameMapper;
        }
        /**
         * Public Api
         */
        /**
         * Get module info
         *
         * @param {string} module name
         * @param {object} navigation info
         * @returns {object} module info
         */
        ModuleNavigation.prototype.getModuleInfo = function (module, navigation) {
            if (!navigation || !navigation.modules) {
                return null;
            }
            return navigation.modules[module];
        };
        /**
         * Get module label
         *
         * @param {object} module info
         * @param {object} appListStrings map
         * @returns {string} the module label
         */
        ModuleNavigation.prototype.getModuleLabel = function (module, appListStrings) {
            if (!appListStrings || !appListStrings.moduleList || !module) {
                return '';
            }
            var labelKey = (module && module.labelKey) || '';
            return appListStrings.moduleList[labelKey] || labelKey;
        };
        /**
         * Get module route
         *
         * @param {object} module NavbarModule
         * @returns {object} NavigationRoute
         */
        ModuleNavigation.prototype.getModuleRoute = function (module) {
            var url = (module && module.defaultRoute) || '';
            var route = null;
            var params = null;
            if (url.startsWith(ROUTE_PREFIX$1)) {
                route = url.replace(ROUTE_PREFIX$1, '');
                url = null;
            }
            return { route: route, url: url, params: params };
        };
        /**
         * Navigate using action information
         *
         * @param {object} item ModuleAction
         * @returns {object} Promise<boolean>
         */
        ModuleNavigation.prototype.navigate = function (item) {
            var route = this.getActionRoute(item);
            return this.router.navigate([route.route], {
                queryParams: route.params
            });
        };
        /**
         * Get action route info
         *
         * @param {object} action ModuleAction
         * @returns {object} NavigationRoute
         */
        ModuleNavigation.prototype.getActionRoute = function (action) {
            var url = action.url;
            var route = null;
            var params = null;
            if (url.startsWith(ROUTE_PREFIX$1)) {
                route = url.replace(ROUTE_PREFIX$1, '');
                url = null;
                if (action.params) {
                    params = action.params;
                }
            }
            return { route: route, url: url, params: params };
        };
        /**
         * Get label for module action item
         *
         * @param {string} module name
         * @param {object} item action
         * @param {object} languages map
         * @param {string} labelKey to use
         * @returns {string} label
         */
        ModuleNavigation.prototype.getActionLabel = function (module, item, languages, labelKey) {
            if (labelKey === void 0) { labelKey = ''; }
            if (!languages || !languages.modStrings || !item || !module) {
                return '';
            }
            var key = labelKey;
            if (!key) {
                key = item.labelKey;
            }
            var label = languages.modStrings[module] && languages.modStrings[module][key];
            if (!label) {
                label = languages.appStrings && languages.appStrings[key];
            }
            if (!label && item.module) {
                label = languages.modStrings[item.module] && languages.modStrings[item.module][key];
            }
            if (!label) {
                label = languages.modStrings.administration && languages.modStrings.administration[key];
            }
            return label || '';
        };
        /**
         * Get record router link route info
         *
         * @param {string} module name
         * @param {string} id fo the record
         * @returns {string} router link
         */
        ModuleNavigation.prototype.getRecordRouterLink = function (module, id) {
            return "/" + module + "/record/" + id;
        };
        /**
         * Navigate back using return params
         * @param record
         * @param moduleName
         * @param params
         */
        ModuleNavigation.prototype.navigateBack = function (record, moduleName, params) {
            var returnModule = this.getReturnModule(params);
            var returnAction = this.getReturnAction(params);
            var returnId = this.getReturnId(params);
            var route = '';
            if (returnModule) {
                route += '/' + returnModule;
            }
            if (returnAction) {
                route += '/' + returnAction;
            }
            if (returnId) {
                route += '/' + returnId;
            }
            if (returnModule === moduleName && returnAction === 'record') {
                var rid = !returnId ? record.id : returnId;
                route = '/' + moduleName + '/record/' + rid;
            }
            if (!route && record && record.id) {
                route = '/' + moduleName + '/record/' + record.id;
            }
            if (!route && record && record.id) {
                route = '/' + moduleName;
            }
            this.router.navigate([route]).then();
        };
        /**
         * Extract return id
         * @param params
         */
        ModuleNavigation.prototype.getReturnId = function (params) {
            return params.return_id || '';
        };
        /**
         * Extract and map return action
         * @param params
         */
        ModuleNavigation.prototype.getReturnAction = function (params) {
            var returnAction = '';
            if (params.return_action) {
                returnAction = this.actionNameMapper.toFrontend(params.return_action);
            }
            return returnAction;
        };
        /**
         * Extract and map return action
         * @param params
         */
        ModuleNavigation.prototype.getReturnModule = function (params) {
            var returnModule = '';
            if (params.return_module) {
                returnModule = this.moduleNameMapper.toFrontend(params.return_module);
            }
            return returnModule;
        };
        return ModuleNavigation;
    }());
    ModuleNavigation.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function ModuleNavigation_Factory() { return new ModuleNavigation(i0__namespace.ɵɵinject(i2__namespace.Router), i0__namespace.ɵɵinject(ModuleNameMapper), i0__namespace.ɵɵinject(ActionNameMapper)); }, token: ModuleNavigation, providedIn: "root" });
    ModuleNavigation.decorators = [
        { type: i0.Injectable, args: [{ providedIn: 'root' },] }
    ];
    ModuleNavigation.ctorParameters = function () { return [
        { type: i2.Router },
        { type: ModuleNameMapper },
        { type: ActionNameMapper }
    ]; };

    var EmailListFieldsComponent = /** @class */ (function (_super) {
        __extends(EmailListFieldsComponent, _super);
        function EmailListFieldsComponent(typeFormatter, logic, preferences, navigation, moduleNameMapper, actionNameMapper, appState, modalService, router) {
            var _this = _super.call(this, typeFormatter, logic) || this;
            _this.typeFormatter = typeFormatter;
            _this.logic = logic;
            _this.preferences = preferences;
            _this.navigation = navigation;
            _this.moduleNameMapper = moduleNameMapper;
            _this.actionNameMapper = actionNameMapper;
            _this.appState = appState;
            _this.modalService = modalService;
            _this.router = router;
            return _this;
        }
        EmailListFieldsComponent.prototype.ngOnInit = function () {
            this.linkType = this.preferences.getUserPreference('email_link_type') || 'mailto';
        };
        EmailListFieldsComponent.prototype.openEmail = function () {
            var view = this.actionNameMapper.toLegacy(this.appState.getView());
            var module = this.moduleNameMapper.toLegacy(this.parent.module);
            var parent_id = this.parent.id;
            var parent_name = this.parent.attributes.name;
            var email = this.field.value;
            var return_id;
            if (view !== 'ListView' && view !== 'index') {
                return_id = parent_id;
            }
            this.router.navigate(['emails', 'compose'], {
                queryParams: {
                    return_module: module,
                    return_action: view,
                    return_id: return_id,
                    to_addrs_names: email,
                    parent_type: module,
                    parent_name: parent_name,
                    parent_id: parent_id,
                }
            });
        };
        return EmailListFieldsComponent;
    }(BaseFieldComponent));
    EmailListFieldsComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-email-list',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<div class=\"mailto-field\">\n    <a *ngIf=\"linkType === 'mailto'\" href=\"mailto:{{ this.field.value }}\">{{ this.field.value }}</a>\n\n    <a *ngIf=\"linkType === 'sugar'\" class=\"clickable field-link\" (click)=\"openEmail()\">{{ this.field.value }}</a>\n</div>\n"
                },] }
    ];
    EmailListFieldsComponent.ctorParameters = function () { return [
        { type: DataTypeFormatter },
        { type: FieldLogicManager },
        { type: UserPreferenceStore },
        { type: ModuleNavigation },
        { type: ModuleNameMapper },
        { type: ActionNameMapper },
        { type: AppStateStore },
        { type: i1$2.NgbModal },
        { type: i2.Router }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var EmailListFieldsModule = /** @class */ (function () {
        function EmailListFieldsModule() {
        }
        return EmailListFieldsModule;
    }());
    EmailListFieldsModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [EmailListFieldsComponent],
                    exports: [EmailListFieldsComponent],
                    imports: [
                        common.CommonModule,
                    ]
                },] }
    ];

    var VarcharFilterFieldComponent = /** @class */ (function (_super) {
        __extends(VarcharFilterFieldComponent, _super);
        function VarcharFilterFieldComponent(typeFormatter, logic) {
            var _this = _super.call(this, typeFormatter, logic) || this;
            _this.typeFormatter = typeFormatter;
            _this.logic = logic;
            return _this;
        }
        VarcharFilterFieldComponent.prototype.ngOnInit = function () {
            _super.prototype.ngOnInit.call(this);
            var current = '';
            if (this.field.criteria && this.field.criteria.values && this.field.criteria.values.length > 0) {
                current = this.field.criteria.values[0];
            }
            if (!i5.isVoid(current)) {
                current = current.trim();
            }
            else {
                current = '';
            }
            this.field.value = current;
            var formattedValue = this.typeFormatter.toUserFormat(this.field.type, current, { mode: 'edit' });
            this.field.formControl.setValue(formattedValue);
            this.field.formControl.markAsDirty();
            this.subscribeValueChanges();
        };
        VarcharFilterFieldComponent.prototype.ngOnDestroy = function () {
            this.unsubscribeAll();
        };
        VarcharFilterFieldComponent.prototype.setFieldValue = function (newValue) {
            this.field.value = newValue;
            this.field.criteria.operator = '=';
            this.field.criteria.values = [newValue];
        };
        return VarcharFilterFieldComponent;
    }(BaseFieldComponent));
    VarcharFilterFieldComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-varchar-filter',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<input [class.is-invalid]=\"field.formControl.invalid && field.formControl.touched\"\n       [formControl]=\"field.formControl\"\n       [value]=\"field.value\"\n       [ngClass]=\"klass\"\n       type=\"text\">\n"
                },] }
    ];
    VarcharFilterFieldComponent.ctorParameters = function () { return [
        { type: DataTypeFormatter },
        { type: FieldLogicManager }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var EnumEditFieldModule = /** @class */ (function () {
        function EnumEditFieldModule() {
        }
        return EnumEditFieldModule;
    }());
    EnumEditFieldModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [EnumEditFieldComponent],
                    exports: [EnumEditFieldComponent],
                    imports: [
                        common.CommonModule,
                        ngxChips.TagInputModule,
                        forms.FormsModule
                    ]
                },] }
    ];

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var MultiEnumDetailFieldModule = /** @class */ (function () {
        function MultiEnumDetailFieldModule() {
        }
        return MultiEnumDetailFieldModule;
    }());
    MultiEnumDetailFieldModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [MultiEnumDetailFieldComponent],
                    exports: [MultiEnumDetailFieldComponent],
                    imports: [
                        common.CommonModule,
                        forms.FormsModule
                    ]
                },] }
    ];

    var FloatDetailFieldComponent = /** @class */ (function (_super) {
        __extends(FloatDetailFieldComponent, _super);
        function FloatDetailFieldComponent(userPreferences, systemConfig, typeFormatter, logic) {
            var _this = _super.call(this, userPreferences, systemConfig, typeFormatter, logic) || this;
            _this.userPreferences = userPreferences;
            _this.systemConfig = systemConfig;
            _this.typeFormatter = typeFormatter;
            _this.logic = logic;
            return _this;
        }
        return FloatDetailFieldComponent;
    }(BaseNumberComponent));
    FloatDetailFieldComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-float-detail',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<ng-container *ngIf=\"(vm$ | async) as vm\">\n    {{field.value | formatNumber}}\n</ng-container>\n"
                },] }
    ];
    FloatDetailFieldComponent.ctorParameters = function () { return [
        { type: UserPreferenceStore },
        { type: SystemConfigStore },
        { type: DataTypeFormatter },
        { type: FieldLogicManager }
    ]; };

    var FormatNumberPipe = /** @class */ (function (_super) {
        __extends(FormatNumberPipe, _super);
        function FormatNumberPipe(formatter, locale) {
            var _this = _super.call(this, locale) || this;
            _this.formatter = formatter;
            _this.locale = locale;
            return _this;
        }
        // eslint-disable-next-line no-dupe-class-members,@typescript-eslint/no-unused-vars
        FormatNumberPipe.prototype.transform = function (value, digitsInfo, locale) {
            if (!value) {
                return null;
            }
            return this.formatter.toUserFormat('' + value);
        };
        return FormatNumberPipe;
    }(common.DecimalPipe));
    FormatNumberPipe.decorators = [
        { type: i0.Pipe, args: [{
                    name: 'formatNumber'
                },] }
    ];
    FormatNumberPipe.ctorParameters = function () { return [
        { type: NumberFormatter },
        { type: String, decorators: [{ type: i0.Inject, args: [i0.LOCALE_ID,] }] }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var FormatNumberModule = /** @class */ (function () {
        function FormatNumberModule() {
        }
        return FormatNumberModule;
    }());
    FormatNumberModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [
                        FormatNumberPipe
                    ],
                    exports: [
                        FormatNumberPipe
                    ],
                    imports: [
                        common.CommonModule,
                    ]
                },] }
    ];

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var FloatDetailFieldModule = /** @class */ (function () {
        function FloatDetailFieldModule() {
        }
        return FloatDetailFieldModule;
    }());
    FloatDetailFieldModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [FloatDetailFieldComponent],
                    exports: [FloatDetailFieldComponent],
                    imports: [
                        common.CommonModule,
                        FormatNumberModule
                    ]
                },] }
    ];

    var DateEditFieldComponent = /** @class */ (function (_super) {
        __extends(DateEditFieldComponent, _super);
        function DateEditFieldComponent(formatter, dateAdapter, typeFormatter, logic) {
            var _this = _super.call(this, formatter, typeFormatter, logic) || this;
            _this.formatter = formatter;
            _this.dateAdapter = dateAdapter;
            _this.typeFormatter = typeFormatter;
            _this.logic = logic;
            return _this;
        }
        DateEditFieldComponent.prototype.ngOnInit = function () {
            // Note: handle NgbDatePicker default validation
            // Note: convert empty form value to null for the ngb date validator to pass it
            if (i5.isEmptyString(this.field.value)) {
                this.field.formControl.setValue(null);
            }
            this.setModel(this.field.value);
            this.subscribeValueChanges();
        };
        DateEditFieldComponent.prototype.ngOnDestroy = function () {
            this.unsubscribeAll();
        };
        DateEditFieldComponent.prototype.setModel = function ($event) {
            this.dateModel = this.formatter.userDateFormatToStruct($event);
        };
        DateEditFieldComponent.prototype.getOpenButton = function (datepicker) {
            var _this = this;
            return {
                klass: 'btn btn-sm btn-outline-secondary m-0 border-0',
                // eslint-disable-next-line @typescript-eslint/explicit-function-return-type
                onClick: function () {
                    datepicker.toggle();
                    datepicker.navigateTo(_this.dateModel);
                },
                icon: 'calendar'
            };
        };
        DateEditFieldComponent.prototype.getPlacement = function () {
            return ['bottom-left', 'bottom-right', 'top-left', 'top-right'];
        };
        return DateEditFieldComponent;
    }(BaseDateTimeComponent));
    DateEditFieldComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-date-edit',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<div class=\"field-datetime-edit input-group\">\n    <input ngbDatepicker\n           [ngClass]=\"klass\"\n           [placement]=\"getPlacement()\"\n           [placeholder]=\"getDateFormat().toLowerCase()\"\n           [class.is-invalid]=\"field.formControl.invalid && field.formControl.touched\"\n           [formControl]=\"field.formControl\"\n           [startDate]=\"dateModel\"\n           (ngModelChange)=\"setModel($event)\"\n           #datepicker=\"ngbDatepicker\">\n    <span class=\"input-group-append align-items-end\">\n        <scrm-button [config]=\"getOpenButton(datepicker)\">\n        </scrm-button>\n    </span>\n</div>\n",
                    providers: [
                        { provide: i1$2.NgbDateAdapter, useClass: DateAdapter },
                        { provide: i1$2.NgbDateParserFormatter, useClass: DateParserFormatter }
                    ]
                },] }
    ];
    DateEditFieldComponent.ctorParameters = function () { return [
        { type: DateFormatter },
        { type: i1$2.NgbDateAdapter },
        { type: DataTypeFormatter },
        { type: FieldLogicManager }
    ]; };

    var BooleanFilterFieldComponent = /** @class */ (function (_super) {
        __extends(BooleanFilterFieldComponent, _super);
        function BooleanFilterFieldComponent(languages, typeFormatter, logic) {
            var _this = _super.call(this, languages, typeFormatter, logic) || this;
            _this.languages = languages;
            _this.typeFormatter = typeFormatter;
            _this.logic = logic;
            return _this;
        }
        BooleanFilterFieldComponent.prototype.ngOnInit = function () {
            this.field.value = '';
            if (this.field.criteria.values && this.field.criteria.values.length > 0) {
                this.field.value = this.field.criteria.values[0];
            }
            _super.prototype.ngOnInit.call(this);
        };
        BooleanFilterFieldComponent.prototype.onAdd = function (item) {
            if (item && item.value) {
                this.field.value = item.value;
                this.field.formControl.setValue(item.value);
                this.field.formControl.markAsDirty();
                this.field.criteria.operator = '=';
                this.field.criteria.values = [item.value];
                return;
            }
            this.field.value = '';
            this.field.formControl.setValue('');
            this.field.formControl.markAsDirty();
            this.selectedValues = [];
            this.field.criteria.operator = '';
            this.field.criteria.values = [];
            return;
        };
        BooleanFilterFieldComponent.prototype.onRemove = function () {
            var _this = this;
            this.field.value = '';
            this.field.formControl.setValue('');
            this.field.formControl.markAsDirty();
            this.field.criteria.operator = '';
            this.field.criteria.values = [];
            setTimeout(function () {
                _this.tag.focus(true, true);
                _this.tag.dropdown.show();
            }, 200);
        };
        BooleanFilterFieldComponent.prototype.getPlaceholderLabel = function () {
            return this.languages.getAppString('LBL_SELECT_ITEM') || '';
        };
        return BooleanFilterFieldComponent;
    }(BaseEnumComponent));
    BooleanFilterFieldComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-boolean-filter',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<tag-input #tag\n           (onAdd)=\"onAdd($event)\"\n           (onRemove)=\"onRemove()\"\n           [(ngModel)]=\"selectedValues\"\n           [class]=\"getInvalidClass()\"\n           [clearOnBlur]=\"true\"\n           [displayBy]=\"'label'\"\n           [identifyBy]=\"'value'\"\n           [inputClass]=\"getInvalidClass()\"\n           [onlyFromAutocomplete]=\"true\"\n           [placeholder]=\"getPlaceholderLabel()\"\n           [secondaryPlaceholder]=\"getPlaceholderLabel()\"\n           maxItems=\"1\">\n    <tag-input-dropdown [autocompleteItems]=\"this.options\"\n                        [displayBy]=\"'label'\"\n                        [identifyBy]=\"'value'\"\n                        [keepOpen]=\"false\"\n                        [showDropdownIfEmpty]=\"true\">\n    </tag-input-dropdown>\n</tag-input>\n"
                },] }
    ];
    BooleanFilterFieldComponent.ctorParameters = function () { return [
        { type: LanguageStore },
        { type: DataTypeFormatter },
        { type: FieldLogicManager }
    ]; };
    BooleanFilterFieldComponent.propDecorators = {
        tag: [{ type: i0.ViewChild, args: ['tag',] }]
    };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var VarcharFilterFieldModule = /** @class */ (function () {
        function VarcharFilterFieldModule() {
        }
        return VarcharFilterFieldModule;
    }());
    VarcharFilterFieldModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [VarcharFilterFieldComponent],
                    exports: [VarcharFilterFieldComponent],
                    imports: [
                        common.CommonModule,
                        forms.FormsModule,
                        forms.ReactiveFormsModule
                    ]
                },] }
    ];

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var BooleanFilterFieldModule = /** @class */ (function () {
        function BooleanFilterFieldModule() {
        }
        return BooleanFilterFieldModule;
    }());
    BooleanFilterFieldModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [BooleanFilterFieldComponent],
                    exports: [BooleanFilterFieldComponent],
                    imports: [
                        common.CommonModule,
                        forms.FormsModule,
                        forms.ReactiveFormsModule,
                        ngxChips.TagInputModule
                    ]
                },] }
    ];

    var RelateDetailFieldComponent = /** @class */ (function (_super) {
        __extends(RelateDetailFieldComponent, _super);
        function RelateDetailFieldComponent(typeFormatter, logic) {
            var _this = _super.call(this, typeFormatter, logic) || this;
            _this.typeFormatter = typeFormatter;
            _this.logic = logic;
            return _this;
        }
        return RelateDetailFieldComponent;
    }(BaseFieldComponent));
    RelateDetailFieldComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-relate-detail',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n{{field.value}}\n"
                },] }
    ];
    RelateDetailFieldComponent.ctorParameters = function () { return [
        { type: DataTypeFormatter },
        { type: FieldLogicManager }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var ModalRecordFilterAdapter = /** @class */ (function () {
        function ModalRecordFilterAdapter() {
        }
        ModalRecordFilterAdapter.prototype.getConfig = function (store) {
            return {
                klass: 'light-filter',
                panelMode: 'collapsible',
                isCollapsed: true,
                collapseOnSearch: true,
                savedFilterEdit: false,
                module: store.recordList.getModule(),
                filter$: store.recordList.criteria$.pipe(operators.map(function (criteria) {
                    return {
                        key: 'default',
                        criteria: criteria
                    };
                })),
                savedFilters$: rxjs.of([]),
                searchFields$: store.searchMetadata$.pipe(operators.map(function (searchMeta) {
                    if (!searchMeta) {
                        return {};
                    }
                    var type = 'advanced';
                    if (!searchMeta.layout.advanced) {
                        type = 'basic';
                    }
                    return searchMeta.layout[type];
                })),
                listFields: [],
                onClose: function () {
                },
                onSearch: function () {
                },
                updateFilter: function (filter, reload) {
                    if (reload === void 0) { reload = true; }
                    store.recordList.updateSearchCriteria(filter.criteria, reload);
                },
                resetFilter: function (reload) {
                    store.recordList.resetSearchCriteria(reload);
                },
                addSavedFilter: function (filter) {
                },
                removeSavedFilter: function (filter) {
                },
                setOpenFilter: function (filter) {
                },
            };
        };
        return ModalRecordFilterAdapter;
    }());
    ModalRecordFilterAdapter.decorators = [
        { type: i0.Injectable }
    ];

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var ModalRecordListTableAdapter = /** @class */ (function () {
        function ModalRecordListTableAdapter() {
        }
        /**
         * Get table config
         *
         * @param {object} store to use
         * @returns {object} TableConfig
         */
        ModalRecordListTableAdapter.prototype.getTable = function (store) {
            var _this = this;
            return {
                showHeader: true,
                showFooter: true,
                klass: 'light-table',
                module: store.recordList.getModule(),
                columns: store.columns$.pipe(operators.map(function (columns) { return _this.mapColumns(store, columns); })),
                sort$: store.recordList.sort$,
                maxColumns$: rxjs.of(5),
                loading$: store.recordList.loading$,
                dataSource: store.recordList,
                pagination: store.recordList,
                toggleRecordSelection: function (id) {
                    store.recordList.toggleSelection(id);
                },
                updateSorting: function (orderBy, sortOrder) {
                    store.recordList.updateSorting(orderBy, sortOrder);
                },
            };
        };
        /**
         * Parse and override column definitions
         *
         * @param {object} store to use
         * @param {[]} columns to map
         * @returns {[]} ColumnDefinition[]
         */
        ModalRecordListTableAdapter.prototype.mapColumns = function (store, columns) {
            var _this = this;
            var mappedColumns = [];
            columns.forEach(function (column) {
                var mapped = Object.assign({}, column);
                var metadata = column.metadata || {};
                mapped.metadata = Object.assign({}, metadata);
                _this.disableRelateFieldsLink(mapped);
                _this.addLinkSelectHandler(store, mapped);
                mappedColumns.push(mapped);
            });
            return mappedColumns;
        };
        /**
         * Disable link for relate fields
         *
         * @param {object} definition to update
         */
        ModalRecordListTableAdapter.prototype.disableRelateFieldsLink = function (definition) {
            if (definition.type !== 'relate') {
                return;
            }
            definition.link = false;
            definition.metadata.link = false;
        };
        /**
         * Add onClick handler for link fields
         *
         * @param {object} store to use
         * @param {object} definition to update
         */
        ModalRecordListTableAdapter.prototype.addLinkSelectHandler = function (store, definition) {
            if (!definition.link) {
                return;
            }
            definition.metadata.onClick = function (field, record) {
                store.recordList.toggleSelection(record.id);
            };
        };
        return ModalRecordListTableAdapter;
    }());

    var ListGQL = /** @class */ (function () {
        function ListGQL(apollo) {
            this.apollo = apollo;
            this.fieldsMetadata = {
                fields: [
                    'id',
                    '_id',
                    'meta',
                    'records'
                ]
            };
        }
        /**
         * Fetch data either from backend
         *
         * @param {string} module to get from
         * @param {number} limit  page limit
         * @param {number} offset  current offset
         * @param {object} criteria filter criteria
         * @param {object} sort selection
         * @param {object} metadata with the fields to ask for
         * @returns {object} Observable<ApolloQueryResult<any>>
         */
        ListGQL.prototype.fetch = function (module, limit, offset, criteria, sort, metadata) {
            var fields = metadata.fields;
            var queryOptions = {
                query: gql__default['default'](templateObject_1$4 || (templateObject_1$4 = __makeTemplateObject(["\n              query getRecordList($module: String!, $limit: Int, $offset: Int, $criteria: Iterable, $sort: Iterable) {\n                getRecordList(module: $module, limit: $limit, offset: $offset, criteria: $criteria, sort: $sort) {\n                  ", "\n                }\n              }\n            "], ["\n              query getRecordList($module: String!, $limit: Int, $offset: Int, $criteria: Iterable, $sort: Iterable) {\n                getRecordList(module: $module, limit: $limit, offset: $offset, criteria: $criteria, sort: $sort) {\n                  ", "\n                }\n              }\n            "])), fields.join('\n')),
                variables: {
                    module: module,
                    limit: limit,
                    offset: offset,
                    criteria: criteria,
                    sort: sort
                },
            };
            return this.apollo.query(queryOptions);
        };
        /**
         * Fetch the List records from the backend
         *
         * @param {string} module to use
         * @param {object} criteria to use
         * @param {object} sort to use
         * @param {object} pagination to use
         * @returns {object} Observable<any>
         */
        ListGQL.prototype.get = function (module, criteria, sort, pagination) {
            var _this = this;
            var mappedSort = this.mapSort(sort);
            return this.fetch(module, pagination.pageSize, pagination.current, criteria, mappedSort, this.fieldsMetadata)
                .pipe(operators.map(function (_a) {
                var data = _a.data;
                var recordsList = {
                    records: [],
                    pagination: Object.assign({}, pagination)
                };
                if (!data || !data.getRecordList) {
                    return recordsList;
                }
                var listData = data.getRecordList;
                if (listData.records) {
                    listData.records.forEach(function (record) {
                        recordsList.records.push(_this.mapRecord(record));
                    });
                }
                if (!listData.meta) {
                    return recordsList;
                }
                if (listData.meta.offsets) {
                    var paginationFieldMap_1 = {
                        current: 'current',
                        next: 'next',
                        prev: 'previous',
                        total: 'total',
                        end: 'last',
                    };
                    Object.keys(paginationFieldMap_1).forEach(function (key) {
                        if (key in listData.meta.offsets) {
                            var paginationField = paginationFieldMap_1[key];
                            recordsList.pagination[paginationField] = listData.meta.offsets[key];
                        }
                    });
                }
                return recordsList;
            }));
        };
        /**
         * Map sort.
         * @param {object} sort to map
         */
        ListGQL.prototype.mapSort = function (sort) {
            var sortOrderMap = {
                NONE: '',
                ASC: 'ASC',
                DESC: 'DESC'
            };
            return {
                sortOrder: sortOrderMap[sort.sortOrder],
                orderBy: sort.orderBy
            };
        };
        /**
         * Map record. Allow for extensions
         * @param record
         */
        ListGQL.prototype.mapRecord = function (record) {
            return record;
        };
        return ListGQL;
    }());
    ListGQL.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function ListGQL_Factory() { return new ListGQL(i0__namespace.ɵɵinject(i1__namespace.Apollo)); }, token: ListGQL, providedIn: "root" });
    ListGQL.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    ListGQL.ctorParameters = function () { return [
        { type: i1.Apollo }
    ]; };
    var templateObject_1$4;

    var MessageService = /** @class */ (function () {
        function MessageService(config) {
            this.config = config;
            this.messages = [];
            this.timeout = 3;
            this.messagesStage = new rxjs.BehaviorSubject([]);
            this.messages$ = this.messagesStage.asObservable();
            this.initTimeOut();
        }
        MessageService.prototype.updateState = function (messages) {
            this.messagesStage.next(this.messages = messages);
        };
        MessageService.prototype.removeMessages = function () {
            this.updateState([]);
        };
        MessageService.prototype.contains = function (message, remove) {
            if (remove === void 0) { remove = false; }
            var found = false;
            for (var i = 0; i < this.messages.length; i++) {
                if (message.text === this.messages[i].text) {
                    found = true;
                    if (remove) {
                        var messages = __spreadArray([], __read(this.messages));
                        messages.splice(i, 1);
                        this.updateState(messages);
                    }
                    break;
                }
            }
            return found;
        };
        MessageService.prototype.addMessage = function (message) {
            var _this = this;
            // push message only if it does not contains already...
            var ret = -1;
            if (!this.contains(message)) {
                var newMessages = __spreadArray([], __read(this.messages));
                ret = newMessages.push(message);
                if (message.type === i5.MessageTypes.success || message.type === i5.MessageTypes.warning) {
                    setTimeout(function () {
                        _this.contains(message, true);
                    }, this.timeout * 1000);
                }
                this.updateState(newMessages);
            }
            return ret;
        };
        MessageService.prototype.addPrimaryMessage = function (text) {
            return this.addMessage({
                type: i5.MessageTypes.primary,
                text: text
            });
        };
        MessageService.prototype.addSecondaryMessage = function (text) {
            return this.addMessage({
                type: i5.MessageTypes.secondary,
                text: text
            });
        };
        MessageService.prototype.addSuccessMessage = function (text) {
            return this.addMessage({
                type: i5.MessageTypes.success,
                text: text
            });
        };
        MessageService.prototype.addSuccessMessageByKey = function (labelKey) {
            return this.addMessage({
                type: i5.MessageTypes.success,
                labelKey: labelKey
            });
        };
        MessageService.prototype.addDangerMessage = function (text) {
            return this.addMessage({
                type: i5.MessageTypes.danger,
                text: text
            });
        };
        MessageService.prototype.addDangerMessageByKey = function (labelKey) {
            return this.addMessage({
                type: i5.MessageTypes.danger,
                labelKey: labelKey
            });
        };
        MessageService.prototype.addWarningMessage = function (text) {
            return this.addMessage({
                type: i5.MessageTypes.warning,
                text: text
            });
        };
        MessageService.prototype.addWarningMessageByKey = function (labelKey) {
            return this.addMessage({
                type: i5.MessageTypes.warning,
                labelKey: labelKey
            });
        };
        MessageService.prototype.addInfoMessage = function (text) {
            return this.addMessage({
                type: i5.MessageTypes.info,
                text: text
            });
        };
        MessageService.prototype.addDarkMessage = function (text) {
            return this.addMessage({
                type: i5.MessageTypes.dark,
                text: text
            });
        };
        // --- LOG ---
        MessageService.prototype.log = function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            console.log.apply(console, args);
        };
        MessageService.prototype.error = function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            console.error.apply(console, args);
        };
        MessageService.prototype.initTimeOut = function () {
            var ui = this.config.getConfigValue('ui');
            if (ui && ui.alert_timeout) {
                var parsed = parseInt(ui.alert_timeout, 10);
                if (!isNaN(parsed)) {
                    this.timeout = parsed;
                }
            }
        };
        return MessageService;
    }());
    MessageService.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function MessageService_Factory() { return new MessageService(i0__namespace.ɵɵinject(SystemConfigStore)); }, token: MessageService, providedIn: "root" });
    MessageService.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    MessageService.ctorParameters = function () { return [
        { type: SystemConfigStore }
    ]; };

    var initialSearchCriteria = {
        filters: {}
    };
    var initialListSort = {
        orderBy: '',
        sortOrder: i5.SortDirection.DESC
    };
    var initialSelection = {
        all: false,
        status: i5.SelectionStatus.NONE,
        selected: {},
        count: 0
    };
    var initialState$d = {
        module: '',
        records: [],
        criteria: i5.deepClone(initialSearchCriteria),
        sort: i5.deepClone(initialListSort),
        pagination: {
            pageSize: 5,
            current: 0,
            previous: 0,
            next: 5,
            last: 0,
            total: 0,
            pageFirst: 0,
            pageLast: 0
        },
        selection: i5.deepClone(initialSelection),
        loading: false,
    };
    var RecordListStore = /** @class */ (function () {
        function RecordListStore(listGQL, configStore, preferencesStore, appStateStore, languageStore, message) {
            this.listGQL = listGQL;
            this.configStore = configStore;
            this.preferencesStore = preferencesStore;
            this.appStateStore = appStateStore;
            this.languageStore = languageStore;
            this.message = message;
            /** Internal Properties */
            this.cache$ = null;
            this.internalState = i5.deepClone(initialState$d);
            this.store = new rxjs.BehaviorSubject(this.internalState);
            this.state$ = this.store.asObservable();
            this.records$ = this.state$.pipe(operators.map(function (state) { return state.records; }), operators.distinctUntilChanged());
            this.criteria$ = this.state$.pipe(operators.map(function (state) { return state.criteria; }), operators.distinctUntilChanged());
            this.sort$ = this.state$.pipe(operators.map(function (state) { return state.sort; }), operators.distinctUntilChanged());
            this.pagination$ = this.state$.pipe(operators.map(function (state) { return state.pagination; }), operators.distinctUntilChanged());
            this.selection$ = this.state$.pipe(operators.map(function (state) { return state.selection; }), operators.distinctUntilChanged());
            this.selectedCount$ = this.state$.pipe(operators.map(function (state) { return state.selection.count; }), operators.distinctUntilChanged());
            this.selectedStatus$ = this.state$.pipe(operators.map(function (state) { return state.selection.status; }), operators.distinctUntilChanged());
            this.loading$ = this.state$.pipe(operators.map(function (state) { return state.loading; }));
        }
        RecordListStore.prototype.connect = function () {
            return this.records$;
        };
        RecordListStore.prototype.disconnect = function () {
        };
        Object.defineProperty(RecordListStore.prototype, "criteria", {
            get: function () {
                if (!this.internalState.criteria) {
                    return i5.deepClone(initialSearchCriteria);
                }
                return i5.deepClone(this.internalState.criteria);
            },
            set: function (criteria) {
                this.updateState(Object.assign(Object.assign({}, this.internalState), { criteria: criteria }));
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(RecordListStore.prototype, "sort", {
            get: function () {
                if (!this.internalState.sort) {
                    return i5.deepClone(initialListSort);
                }
                return i5.deepClone(this.internalState.sort);
            },
            set: function (sort) {
                this.updateState(Object.assign(Object.assign({}, this.internalState), { sort: sort }));
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(RecordListStore.prototype, "selection", {
            get: function () {
                if (!this.internalState.selection) {
                    return i5.deepClone(initialSelection);
                }
                return i5.deepClone(this.internalState.selection);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(RecordListStore.prototype, "records", {
            get: function () {
                if (!this.internalState.records) {
                    return [];
                }
                return this.internalState.records;
            },
            enumerable: false,
            configurable: true
        });
        RecordListStore.prototype.getModule = function () {
            return this.internalState.module;
        };
        RecordListStore.prototype.getRecord = function (id) {
            var record = null;
            this.records.some(function (item) {
                if (item.id === id) {
                    record = item;
                    return true;
                }
            });
            return record;
        };
        /**
         * Clean destroy
         */
        RecordListStore.prototype.destroy = function () {
            this.clear();
        };
        /**
         * Initial list records load if not cached and update state.
         * Returns observable to be used in resolver if needed
         *
         * @param {string} module to use
         * @param {boolean} load if to load
         * @param {string} pageSizeConfigKey string
         * @returns {object} Observable<any>
         */
        RecordListStore.prototype.init = function (module, load, pageSizeConfigKey) {
            if (load === void 0) { load = true; }
            if (pageSizeConfigKey === void 0) { pageSizeConfigKey = 'list_max_entries_per_page'; }
            this.internalState.module = module;
            this.watchPageSize(pageSizeConfigKey);
            if (load === false) {
                return null;
            }
            return this.load();
        };
        /**
         * Load / reload records using current pagination and criteria
         *
         * @param {boolean} useCache if to use cache
         * @returns {object} Observable<ListViewState>
         */
        RecordListStore.prototype.load = function (useCache) {
            var _this = this;
            if (useCache === void 0) { useCache = true; }
            this.updateState(Object.assign(Object.assign({}, this.internalState), { loading: true }));
            return this.getRecords(this.internalState.module, this.internalState.criteria, this.internalState.sort, this.internalState.pagination, useCache).pipe(operators.catchError(function () {
                _this.message.addDangerMessageByKey('LBL_GET_RECORD_LIST_ERROR');
                return rxjs.of({
                    records: [],
                    criteria: i5.deepClone(initialSearchCriteria),
                    sort: i5.deepClone(initialListSort),
                    pagination: {
                        pageSize: 5,
                        current: 0,
                        previous: 0,
                        next: 5,
                        last: 0,
                        total: 0,
                        pageFirst: 0,
                        pageLast: 0
                    },
                    selection: i5.deepClone(initialSelection),
                });
            }), operators.tap(function (data) {
                _this.calculatePageCount(data.records, data.pagination);
                _this.updateState(Object.assign(Object.assign({}, _this.internalState), { records: data.records, pagination: data.pagination, loading: false }));
            }));
        };
        /**
         * Update the search criteria
         *
         * @param {object} criteria to set
         * @param {boolean} reload flag
         */
        RecordListStore.prototype.updateSearchCriteria = function (criteria, reload) {
            if (reload === void 0) { reload = true; }
            this.updateState(Object.assign(Object.assign({}, this.internalState), { criteria: criteria }));
            if (reload) {
                this.updateSelection(i5.SelectionStatus.NONE);
                // Reset pagination to default first page
                this.resetPagination();
            }
        };
        /**
         * Reset search criteria
         * @param {boolean} reload flag
         */
        RecordListStore.prototype.resetSearchCriteria = function (reload) {
            if (reload === void 0) { reload = true; }
            this.updateSearchCriteria(i5.deepClone(initialSearchCriteria), reload);
        };
        /**
         * Update current list view sorting
         *
         * @param {string} orderBy to set
         * @param {string} sortOrder to set
         * @param {boolean} reload flag
         */
        RecordListStore.prototype.updateSorting = function (orderBy, sortOrder, reload) {
            if (reload === void 0) { reload = true; }
            if (sortOrder === i5.SortDirection.NONE) {
                orderBy = '';
                sortOrder = i5.SortDirection.DESC;
            }
            var sort = { orderBy: orderBy, sortOrder: sortOrder };
            this.updateState(Object.assign(Object.assign({}, this.internalState), { sort: sort }));
            if (reload) {
                this.load(false).pipe(operators.take(1)).subscribe();
            }
        };
        /**
         * Map sort order to SortDirection enum
         * @param {string} sortOrder to map
         * @returns {string} SortDirection
         */
        RecordListStore.prototype.mapSortOrder = function (sortOrder) {
            var direction = i5.SortDirection.NONE;
            var sort = sortOrder.toLowerCase();
            if (sort === 'asc') {
                direction = i5.SortDirection.ASC;
            }
            else if (sort === 'desc') {
                direction = i5.SortDirection.DESC;
            }
            return direction;
        };
        /**
         * Update the pagination
         *
         * @param {number} current to set
         */
        RecordListStore.prototype.updatePagination = function (current) {
            var pagination = Object.assign(Object.assign({}, this.internalState.pagination), { current: current });
            this.updateState(Object.assign(Object.assign({}, this.internalState), { pagination: pagination }));
            this.load(false).pipe(operators.take(1)).subscribe();
        };
        /**
         * Reset/Clear the pagination
         */
        RecordListStore.prototype.resetPagination = function () {
            this.updatePagination(0);
        };
        /**
         * Clear observable cache
         */
        RecordListStore.prototype.clear = function () {
            this.cache$ = null;
            this.store.unsubscribe();
            this.preferencesSub.unsubscribe();
        };
        RecordListStore.prototype.clearAuthBased = function () {
            this.clear();
        };
        /**
         * Selection public api
         */
        RecordListStore.prototype.getSelectionStatus = function () {
            return this.selectedStatus$;
        };
        RecordListStore.prototype.getSelectedCount = function () {
            return this.selectedCount$;
        };
        RecordListStore.prototype.updateSelection = function (state) {
            if (state === i5.SelectionStatus.NONE) {
                this.clearSelection();
                return;
            }
            if (state === i5.SelectionStatus.ALL) {
                this.selectAll();
                return;
            }
            if (state === i5.SelectionStatus.PAGE) {
                this.selectPage();
                return;
            }
        };
        RecordListStore.prototype.clearSelection = function () {
            this.updateState(Object.assign(Object.assign({}, this.internalState), { selection: i5.deepClone(initialSelection) }));
        };
        RecordListStore.prototype.selectAll = function () {
            var total = this.internalState.pagination.total;
            this.updateState(Object.assign(Object.assign({}, this.internalState), { selection: {
                    all: true,
                    status: i5.SelectionStatus.ALL,
                    selected: {},
                    count: total
                } }));
        };
        RecordListStore.prototype.selectPage = function () {
            var selected = Object.assign({}, this.internalState.selection.selected);
            if (this.internalState.records && this.internalState.records.length) {
                this.internalState.records.forEach(function (value) {
                    if (value && value.id) {
                        selected[value.id] = value.id;
                    }
                });
            }
            this.updateState(Object.assign(Object.assign({}, this.internalState), { selection: {
                    all: false,
                    status: i5.SelectionStatus.SOME,
                    selected: selected,
                    count: Object.keys(selected).length
                } }));
        };
        RecordListStore.prototype.toggleSelection = function (id) {
            var selection = i5.deepClone(this.internalState.selection);
            if (selection.selected[id]) {
                delete selection.selected[id];
            }
            else {
                selection.selected[id] = id;
            }
            selection.count = Object.keys(selection.selected).length;
            if (selection.count === 0) {
                selection.status = i5.SelectionStatus.NONE;
            }
            else {
                selection.status = i5.SelectionStatus.SOME;
            }
            this.updateState(Object.assign(Object.assign({}, this.internalState), { selection: selection }));
        };
        /**
         * Pagination Public API
         */
        RecordListStore.prototype.getPaginationCount = function () {
            return this.pagination$.pipe(operators.map(function (pagination) { return ({
                pageFirst: pagination.pageFirst,
                pageLast: pagination.pageLast,
                total: pagination.total
            }); }), operators.distinctUntilChanged());
        };
        RecordListStore.prototype.getPagination = function () {
            return this.store.value.pagination;
        };
        RecordListStore.prototype.changePage = function (page) {
            var pageToLoad = 0;
            var pageMap = {};
            pageMap[i5.PageSelection.FIRST] = 0;
            pageMap[i5.PageSelection.PREVIOUS] = this.internalState.pagination.previous;
            pageMap[i5.PageSelection.NEXT] = this.internalState.pagination.next;
            pageMap[i5.PageSelection.LAST] = this.internalState.pagination.last;
            if (page in pageMap && pageMap[page] >= 0) {
                pageToLoad = pageMap[page];
                if (pageToLoad > this.internalState.pagination.last) {
                    return;
                }
                if (pageToLoad < 0) {
                    return;
                }
                this.updatePagination(pageToLoad);
            }
        };
        /**
         * Set Pagination page size
         *
         * @param {number} pageSize to set
         */
        RecordListStore.prototype.setPageSize = function (pageSize) {
            var pagination = Object.assign(Object.assign({}, this.internalState.pagination), { pageSize: pageSize });
            this.updateState(Object.assign(Object.assign({}, this.internalState), { pagination: pagination }));
        };
        /**
         * Internal API
         */
        /**
         * Subscribe to page size changes
         *
         * @param {string} pageSizeConfigKey key
         */
        RecordListStore.prototype.watchPageSize = function (pageSizeConfigKey) {
            var _this = this;
            var pageSizePreference = this.preferencesStore.getUserPreference(pageSizeConfigKey);
            var pageSizeConfig = this.configStore.getConfigValue(pageSizeConfigKey);
            this.determinePageSize(pageSizePreference, pageSizeConfig);
            this.preferencesSub = rxjs.combineLatest([this.configStore.configs$, this.preferencesStore.userPreferences$])
                .pipe(operators.tap(function (_a) {
                var _b = __read(_a, 2), configs = _b[0], preferences = _b[1];
                var key = pageSizeConfigKey;
                var sizePreference = (preferences && preferences[key]) || null;
                var sizeConfig = (configs && configs[key] && configs[key].value) || null;
                _this.determinePageSize(sizePreference, sizeConfig);
            })).subscribe();
        };
        /**
         * Determine page size to use
         *
         * @param {} pageSizePreference to use
         * @param {string} pageSizeConfig to use
         */
        RecordListStore.prototype.determinePageSize = function (pageSizePreference, pageSizeConfig) {
            var size = 0;
            if (pageSizePreference) {
                size = pageSizePreference;
            }
            else if (pageSizeConfig) {
                size = parseInt(pageSizeConfig, 10);
            }
            this.setPageSize(size);
        };
        /**
         * Update the state
         *
         * @param {object} state to set
         */
        RecordListStore.prototype.updateState = function (state) {
            this.store.next(this.internalState = state);
        };
        /**
         * Calculate page count
         *
         * @param {object} records list
         * @param {object} pagination info
         */
        RecordListStore.prototype.calculatePageCount = function (records, pagination) {
            var recordCount = (records && records.length) || 0;
            var pageFirst = 0;
            var pageLast = 0;
            if (recordCount > 0) {
                pageFirst = pagination.current + 1;
                pageLast = pagination.current + recordCount;
            }
            pagination.pageFirst = pageFirst;
            pagination.pageLast = pageLast;
        };
        /**
         * Get records cached Observable or call the backend
         *
         * @param {string} module to use
         * @param {object} criteria to use
         * @param {object} sort to use
         * @param {object} pagination to use
         * @param {boolean} useCache if to use cache
         * @returns {object} Observable<any>
         */
        RecordListStore.prototype.getRecords = function (module, criteria, sort, pagination, useCache) {
            if (useCache === void 0) { useCache = true; }
            if (this.cache$ == null || useCache === false) {
                this.cache$ = this.listGQL.get(module, criteria, sort, pagination).pipe(operators.shareReplay(1));
            }
            return this.cache$;
        };
        return RecordListStore;
    }());
    RecordListStore.decorators = [
        { type: i0.Injectable }
    ];
    RecordListStore.ctorParameters = function () { return [
        { type: ListGQL },
        { type: SystemConfigStore },
        { type: UserPreferenceStore },
        { type: AppStateStore },
        { type: LanguageStore },
        { type: MessageService }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var RecordListStoreFactory = /** @class */ (function () {
        function RecordListStoreFactory(listGQL, configStore, preferencesStore, appStateStore, languageStore, message) {
            this.listGQL = listGQL;
            this.configStore = configStore;
            this.preferencesStore = preferencesStore;
            this.appStateStore = appStateStore;
            this.languageStore = languageStore;
            this.message = message;
        }
        RecordListStoreFactory.prototype.create = function () {
            return new RecordListStore(this.listGQL, this.configStore, this.preferencesStore, this.appStateStore, this.languageStore, this.message);
        };
        return RecordListStoreFactory;
    }());
    RecordListStoreFactory.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function RecordListStoreFactory_Factory() { return new RecordListStoreFactory(i0__namespace.ɵɵinject(ListGQL), i0__namespace.ɵɵinject(SystemConfigStore), i0__namespace.ɵɵinject(UserPreferenceStore), i0__namespace.ɵɵinject(AppStateStore), i0__namespace.ɵɵinject(LanguageStore), i0__namespace.ɵɵinject(MessageService)); }, token: RecordListStoreFactory, providedIn: "root" });
    RecordListStoreFactory.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root',
                },] }
    ];
    RecordListStoreFactory.ctorParameters = function () { return [
        { type: ListGQL },
        { type: SystemConfigStore },
        { type: UserPreferenceStore },
        { type: AppStateStore },
        { type: LanguageStore },
        { type: MessageService }
    ]; };

    var initialState$c = {
        detailView: {},
        editView: {},
        listView: {},
        search: {},
        recordView: {},
        subPanel: {},
        massUpdate: {}
    };
    var internalState$1 = i5.deepClone(initialState$c);
    var initialCache = {};
    var cache = i5.deepClone(initialCache);
    var MetadataStore = /** @class */ (function () {
        function MetadataStore(recordGQL, appState) {
            this.recordGQL = recordGQL;
            this.appState = appState;
            this.store = new rxjs.BehaviorSubject(internalState$1);
            this.state$ = this.store.asObservable();
            this.resourceName = 'viewDefinition';
            this.fieldsMetadata = {
                fields: [
                    'id',
                    '_id',
                ]
            };
            this.types = [
                'listView',
                'search',
                'recordView',
                'subPanel',
                'massUpdate'
            ];
            this.listViewColumns$ = this.state$.pipe(operators.map(function (state) { return state.listView.fields; }), operators.distinctUntilChanged());
            this.listViewLineActions$ = this.state$.pipe(operators.map(function (state) { return state.listView.lineActions; }), operators.distinctUntilChanged());
            this.listMetadata$ = this.state$.pipe(operators.map(function (state) { return state.listView; }), operators.distinctUntilChanged());
            this.searchMetadata$ = this.state$.pipe(operators.map(function (state) { return state.search; }), operators.distinctUntilChanged());
            this.recordViewMetadata$ = this.state$.pipe(operators.map(function (state) { return state.recordView; }), operators.distinctUntilChanged());
            this.subPanelMetadata$ = this.state$.pipe(operators.map(function (state) { return state.subPanel; }), operators.distinctUntilChanged());
            this.metadata$ = this.state$;
        }
        /**
         * Clear state
         */
        MetadataStore.prototype.clear = function () {
            Object.keys(cache).forEach(function (key) {
                cache[key].unsubscribe();
            });
            cache = i5.deepClone(initialCache);
            this.updateState(i5.deepClone(initialState$c));
        };
        MetadataStore.prototype.clearAuthBased = function () {
            this.clear();
        };
        /**
         * Get all metadata types
         *
         * @returns {string[]} metadata types
         */
        MetadataStore.prototype.getMetadataTypes = function () {
            return this.types;
        };
        MetadataStore.prototype.get = function () {
            return internalState$1;
        };
        /**
         * Initial ListViewMeta load if not cached and update state.
         *
         * @param {string} moduleID to fetch
         * @param {string[]} types to fetch
         * @returns any data
         */
        MetadataStore.prototype.load = function (moduleID, types) {
            var _this = this;
            if (!types) {
                types = this.getMetadataTypes();
            }
            return this.getMetadata(moduleID, types).pipe(operators.tap(function (metadata) {
                _this.updateState(metadata);
            }));
        };
        /**
         * Get ListViewMeta cached Observable or call the backend
         *
         * @param {string} module to fetch
         * @param {string[]} types to retrieve
         * @returns {object} Observable<any>
         */
        MetadataStore.prototype.getMetadata = function (module, types) {
            if (types === void 0) { types = null; }
            if (types === null) {
                types = this.getMetadataTypes();
            }
            var metadataCache = null;
            // check for currently missing and
            var missing = {};
            var loadedTypes = {};
            if (cache[module]) {
                metadataCache = cache[module];
                types.forEach(function (type) {
                    var cached = metadataCache.value;
                    if (!cached[type]) {
                        missing[type] = type;
                        return;
                    }
                    if (Object.keys(cached[type]).length === 0) {
                        missing[type] = type;
                    }
                    else {
                        loadedTypes[type] = cached[type];
                    }
                });
                if (Object.keys(missing).length === 0) {
                    return rxjs.of(metadataCache.value).pipe(operators.shareReplay());
                }
            }
            else {
                cache[module] = new rxjs.BehaviorSubject({});
            }
            return this.fetchMetadata(module, types).pipe(operators.map(function (value) {
                Object.keys(loadedTypes).forEach(function (type) {
                    if (!value[type] && loadedTypes[type]) {
                        value[type] = loadedTypes[type];
                    }
                });
                return value;
            }), operators.shareReplay(), operators.tap(function (value) {
                cache[module].next(value);
            }));
        };
        /**
         * Internal API
         */
        /**
         * Update the state
         *
         * @param {object} state to set
         */
        MetadataStore.prototype.updateState = function (state) {
            this.store.next(internalState$1 = state);
        };
        /**
         * Fetch the Metadata from the backend
         *
         * @param {string} module to fetch
         * @param {string[]} types to retrieve
         * @returns {object} Observable<{}>
         */
        MetadataStore.prototype.fetchMetadata = function (module, types) {
            var _this = this;
            var fieldsToRetrieve = {
                fields: __spreadArray(__spreadArray([], __read(this.fieldsMetadata.fields)), __read(types))
            };
            return this.recordGQL.fetch(this.resourceName, "/api/metadata/view-definitions/" + module, fieldsToRetrieve)
                .pipe(operators.map(function (_a) {
                var data = _a.data;
                var metadata = {};
                _this.parseListViewMetadata(data, metadata);
                _this.parseSearchMetadata(data, metadata);
                _this.parseRecordViewMetadata(data, metadata);
                _this.parseSubPanelMetadata(data, metadata);
                _this.parseMassUpdateMetadata(data, metadata);
                return metadata;
            }));
        };
        MetadataStore.prototype.parseListViewMetadata = function (data, metadata) {
            if (!data || !data.viewDefinition.listView) {
                return;
            }
            var listViewMeta = {
                fields: [],
                bulkActions: {},
                lineActions: [],
                chartTypes: {},
                filters: []
            };
            if (data.viewDefinition.listView.columns) {
                data.viewDefinition.listView.columns.forEach(function (field) {
                    listViewMeta.fields.push(field);
                });
            }
            var entries = {
                bulkActions: 'bulkActions',
                lineActions: 'lineActions',
                sidebarWidgets: 'sidebarWidgets',
                availableFilters: 'filters'
            };
            this.addDefinedMeta(listViewMeta, data.viewDefinition.listView, entries);
            metadata.listView = listViewMeta;
        };
        MetadataStore.prototype.parseSearchMetadata = function (data, metadata) {
            if (data && data.viewDefinition.search) {
                metadata.search = data.viewDefinition.search;
            }
        };
        MetadataStore.prototype.parseSubPanelMetadata = function (data, metadata) {
            if (data && data.viewDefinition.subPanel) {
                metadata.subPanel = data.viewDefinition.subPanel;
            }
        };
        MetadataStore.prototype.parseMassUpdateMetadata = function (data, metadata) {
            if (data && data.viewDefinition.massUpdate) {
                metadata.massUpdate = data.viewDefinition.massUpdate;
            }
        };
        MetadataStore.prototype.parseRecordViewMetadata = function (data, metadata) {
            if (!data || !data.viewDefinition.recordView) {
                return;
            }
            var recordViewMeta = {
                actions: [],
                templateMeta: {},
                panels: []
            };
            var receivedMeta = data.viewDefinition.recordView;
            var entries = {
                templateMeta: 'templateMeta',
                actions: 'actions',
                panels: 'panels',
                topWidget: 'topWidget',
                sidebarWidgets: 'sidebarWidgets',
                summaryTemplates: 'summaryTemplates',
                vardefs: 'vardefs'
            };
            this.addDefinedMeta(recordViewMeta, receivedMeta, entries);
            metadata.recordView = recordViewMeta;
        };
        MetadataStore.prototype.addDefinedMeta = function (metadata, received, keyMap) {
            Object.keys(keyMap).forEach(function (dataKey) {
                var metadataKey = keyMap[dataKey];
                if (received[dataKey]) {
                    metadata[metadataKey] = received[dataKey];
                }
            });
        };
        return MetadataStore;
    }());
    MetadataStore.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function MetadataStore_Factory() { return new MetadataStore(i0__namespace.ɵɵinject(EntityGQL), i0__namespace.ɵɵinject(AppStateStore)); }, token: MetadataStore, providedIn: "root" });
    MetadataStore.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root',
                },] }
    ];
    MetadataStore.ctorParameters = function () { return [
        { type: EntityGQL },
        { type: AppStateStore }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var RecordListModalStore = /** @class */ (function () {
        function RecordListModalStore(listStoreFactory, meta) {
            this.listStoreFactory = listStoreFactory;
            this.meta = meta;
            this.recordList = listStoreFactory.create();
            this.loading$ = this.recordList.loading$;
            this.metadataLoadingState = new rxjs.BehaviorSubject(false);
            this.metadataLoading$ = this.metadataLoadingState.asObservable();
        }
        RecordListModalStore.prototype.clear = function () {
            this.recordList.clear();
            this.recordList = null;
        };
        RecordListModalStore.prototype.clearAuthBased = function () {
            this.recordList.clearAuthBased();
        };
        /**
         * Initial list records load if not cached and update state.
         * Returns observable to be used in resolver if needed
         *
         * @param {string} module name
         */
        RecordListModalStore.prototype.init = function (module) {
            var _this = this;
            this.metadataLoadingState.next(true);
            var meta$ = this.meta.getMetadata(module).pipe(operators.tap(function () {
                _this.metadataLoadingState.next(false);
                _this.recordList.load().pipe(operators.take(1)).subscribe();
            }));
            this.listMetadata$ = meta$.pipe(operators.map(function (meta) { return meta.listView; }));
            this.searchMetadata$ = meta$.pipe(operators.map(function (meta) { return meta.search; }));
            this.recordList.init(module, false, 'list_max_entries_per_subpanel');
            this.columns$ = this.listMetadata$.pipe(operators.map(function (metadata) { return metadata.fields; }));
        };
        /**
         * Load / reload records using current pagination and criteria
         *
         * @param {boolean} useCache if to use cache
         * @returns {object} Observable<RecordList>
         */
        RecordListModalStore.prototype.load = function (useCache) {
            if (useCache === void 0) { useCache = true; }
            return this.recordList.load(useCache);
        };
        return RecordListModalStore;
    }());
    RecordListModalStore.decorators = [
        { type: i0.Injectable }
    ];
    RecordListModalStore.ctorParameters = function () { return [
        { type: RecordListStoreFactory },
        { type: MetadataStore }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var RecordListModalStoreFactory = /** @class */ (function () {
        function RecordListModalStoreFactory(listStoreFactory, metadataStore) {
            this.listStoreFactory = listStoreFactory;
            this.metadataStore = metadataStore;
        }
        RecordListModalStoreFactory.prototype.create = function () {
            return new RecordListModalStore(this.listStoreFactory, this.metadataStore);
        };
        return RecordListModalStoreFactory;
    }());
    RecordListModalStoreFactory.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function RecordListModalStoreFactory_Factory() { return new RecordListModalStoreFactory(i0__namespace.ɵɵinject(RecordListStoreFactory), i0__namespace.ɵɵinject(MetadataStore)); }, token: RecordListModalStoreFactory, providedIn: "root" });
    RecordListModalStoreFactory.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root',
                },] }
    ];
    RecordListModalStoreFactory.ctorParameters = function () { return [
        { type: RecordListStoreFactory },
        { type: MetadataStore }
    ]; };

    var MaxColumnsCalculator = /** @class */ (function () {
        function MaxColumnsCalculator(screenSize, systemConfigStore) {
            this.screenSize = screenSize;
            this.systemConfigStore = systemConfigStore;
            this.screen = exports.ScreenSize.Medium;
            this.maxColumns = 5;
        }
        MaxColumnsCalculator.prototype.getMaxColumns = function (sidebarActive$) {
            var _this = this;
            return rxjs.combineLatest([sidebarActive$, this.screenSize.screenSize$]).pipe(operators.map(function (_a) {
                var _b = __read(_a, 2), sidebarActive = _b[0], screenSize = _b[1];
                if (screenSize) {
                    _this.screen = screenSize;
                }
                return _this.calculateMaxColumns(sidebarActive);
            }), operators.distinctUntilChanged());
        };
        MaxColumnsCalculator.prototype.calculateMaxColumns = function (sideBar) {
            if (sideBar === void 0) { sideBar = true; }
            var sizeMap;
            sizeMap = this.systemConfigStore.getConfigValue('listview_column_limits');
            if (sideBar) {
                sizeMap = sizeMap.with_sidebar;
            }
            else {
                sizeMap = sizeMap.without_sidebar;
            }
            if (this.screen && sizeMap) {
                var maxCols = sizeMap[this.screen];
                if (maxCols) {
                    this.maxColumns = maxCols;
                }
            }
            return this.maxColumns;
        };
        return MaxColumnsCalculator;
    }());
    MaxColumnsCalculator.decorators = [
        { type: i0.Injectable }
    ];
    MaxColumnsCalculator.ctorParameters = function () { return [
        { type: ScreenSizeObserverService },
        { type: SystemConfigStore }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var RecordListModalComponent = /** @class */ (function () {
        function RecordListModalComponent(activeModal, storeFactory, languages, maxColumnCalculator) {
            this.activeModal = activeModal;
            this.storeFactory = storeFactory;
            this.languages = languages;
            this.maxColumnCalculator = maxColumnCalculator;
            this.titleKey = '';
            this.adapter = null;
            this.filterAdapter = null;
            this.subs = [];
            this.store = this.storeFactory.create();
        }
        RecordListModalComponent.prototype.ngOnInit = function () {
            var _this = this;
            this.closeButton = {
                klass: ['btn', 'btn-outline-light', 'btn-sm'],
                onClick: function () {
                    _this.activeModal.close({
                        type: 'close-button'
                    });
                }
            };
            this.init();
        };
        RecordListModalComponent.prototype.ngOnDestroy = function () {
            this.subs.forEach(function (sub) { return sub.unsubscribe(); });
        };
        RecordListModalComponent.prototype.init = function () {
            if (!this.module) {
                return;
            }
            this.initStore();
            this.initTableAdapter();
            this.initFilterAdapters();
        };
        RecordListModalComponent.prototype.getMaxColumns = function () {
            return this.maxColumnCalculator.getMaxColumns(rxjs.of(true));
        };
        RecordListModalComponent.prototype.initTableAdapter = function () {
            if (this.adapter === null) {
                this.adapter = new ModalRecordListTableAdapter();
            }
            this.tableConfig = this.adapter.getTable(this.store);
            this.tableConfig.maxColumns$ = this.getMaxColumns();
        };
        RecordListModalComponent.prototype.initFilterAdapters = function () {
            if (this.filterAdapter === null) {
                this.filterAdapter = new ModalRecordFilterAdapter();
            }
            this.filterConfig = this.filterAdapter.getConfig(this.store);
        };
        RecordListModalComponent.prototype.initStore = function () {
            var _this = this;
            this.store.init(this.module);
            this.loading$ = this.store.metadataLoading$;
            this.subs.push(this.store.recordList.selection$.pipe(operators.distinctUntilChanged(), operators.skip(1)).subscribe(function (selection) {
                if (!selection || !selection.selected || Object.keys(selection.selected).length < 1) {
                    return;
                }
                _this.activeModal.close({
                    selection: selection,
                    records: _this.store.recordList.records
                });
            }));
        };
        return RecordListModalComponent;
    }());
    RecordListModalComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-record-list-modal',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<scrm-modal [closable]=\"true\"\n            [close]=\"closeButton\"\n            [title]=\"titleKey\"\n            bodyKlass=\"m-0 small-font\"\n            footerKlass=\"border-0\"\n            headerKlass=\"border-0\"\n            klass=\"record-list-modal\">\n\n    <div modal-body>\n\n        <ng-container *ngIf=\"!tableConfig\">\n            <scrm-label labelKey=\"LBL_CONFIG_NO_CONFIG\"></scrm-label>\n        </ng-container>\n\n        <ng-container *ngIf=\"tableConfig\">\n            <div>\n                <div class=\"container-fluid\">\n                    <div class=\"row pb-3\">\n                        <div class=\"col\">\n                            <scrm-list-filter *ngIf=\"filterConfig\" [config]=\"filterConfig\"></scrm-list-filter>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col\">\n                            <scrm-table [config]=\"tableConfig\"></scrm-table>\n                        </div>\n                    </div>\n                </div>\n\n                <ng-container *ngIf=\"(loading$ | async) as loading\">\n                    <scrm-loading-spinner *ngIf=\"loading\" [overlay]=\"true\"></scrm-loading-spinner>\n                </ng-container>\n            </div>\n\n        </ng-container>\n    </div>\n\n</scrm-modal>\n",
                    providers: [MaxColumnsCalculator],
                    animations: [
                        animations.trigger('modalFade', [
                            animations.transition('void <=> *', [
                                animations.animate('800ms')
                            ]),
                        ]),
                    ]
                },] }
    ];
    RecordListModalComponent.ctorParameters = function () { return [
        { type: i1$2.NgbActiveModal },
        { type: RecordListModalStoreFactory },
        { type: LanguageStore },
        { type: MaxColumnsCalculator }
    ]; };
    RecordListModalComponent.propDecorators = {
        titleKey: [{ type: i0.Input }],
        module: [{ type: i0.Input }],
        adapter: [{ type: i0.Input }],
        filterAdapter: [{ type: i0.Input }]
    };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var RelateService = /** @class */ (function () {
        function RelateService(recordListStoreFactory) {
            this.recordList = recordListStoreFactory.create();
        }
        RelateService.prototype.init = function (module) {
            this.recordList.init(module, false);
        };
        RelateService.prototype.search = function (term, field) {
            var criteria = this.recordList.criteria;
            criteria.filters[field] = {
                field: field,
                operator: '=',
                values: [term]
            };
            this.recordList.updateSearchCriteria(criteria, false);
            return this.recordList.load(false).pipe(operators.map(function (value) { return value.records; }), operators.take(1), operators.shareReplay(1));
        };
        return RelateService;
    }());
    RelateService.decorators = [
        { type: i0.Injectable }
    ];
    RelateService.ctorParameters = function () { return [
        { type: RecordListStoreFactory }
    ]; };

    var BaseRelateComponent = /** @class */ (function (_super) {
        __extends(BaseRelateComponent, _super);
        function BaseRelateComponent(languages, typeFormatter, relateService, moduleNameMapper, logic) {
            var _this = _super.call(this, typeFormatter, logic) || this;
            _this.languages = languages;
            _this.typeFormatter = typeFormatter;
            _this.relateService = relateService;
            _this.moduleNameMapper = moduleNameMapper;
            _this.logic = logic;
            _this.selectedValues = [];
            _this.status = '';
            _this.initModule = '';
            _this.search = function (text) {
                _this.status = 'searching';
                return _this.relateService.search(text, _this.getRelateFieldName()).pipe(operators.tap(function () { return _this.status = 'found'; }), operators.catchError(function () {
                    _this.status = 'error';
                    return rxjs.of([]);
                }), operators.map(function (records) {
                    if (!records || records.length < 1) {
                        _this.status = 'not-found';
                        return [];
                    }
                    var flatRecords = [];
                    records.forEach(function (record) {
                        if (record && record.attributes) {
                            flatRecords.push(record.attributes);
                        }
                    });
                    _this.status = '';
                    return flatRecords;
                }));
            };
            return _this;
        }
        Object.defineProperty(BaseRelateComponent.prototype, "module", {
            get: function () {
                if (!this.record || !this.record.module) {
                    return null;
                }
                return this.record.module;
            },
            enumerable: false,
            configurable: true
        });
        BaseRelateComponent.prototype.ngOnInit = function () {
            var _this = this;
            _super.prototype.ngOnInit.call(this);
            this.init();
            this.subs.push(this.field.valueChanges$.subscribe(function () {
                _this.onModuleChange();
            }));
        };
        BaseRelateComponent.prototype.ngOnDestroy = function () {
            this.subs.forEach(function (sub) { return sub.unsubscribe(); });
        };
        BaseRelateComponent.prototype.onModuleChange = function () {
            var _a, _b, _c;
            var currentModule = this.initModule;
            var newModule = (_c = (_b = (_a = this === null || this === void 0 ? void 0 : this.field) === null || _a === void 0 ? void 0 : _a.definition) === null || _b === void 0 ? void 0 : _b.module) !== null && _c !== void 0 ? _c : '';
            if (currentModule === newModule) {
                return;
            }
            this.initModule = newModule;
            if (currentModule === '' && currentModule !== newModule) {
                this.init();
            }
            if (newModule === '') {
                this.status = 'no-module';
            }
            else {
                this.status = '';
            }
        };
        BaseRelateComponent.prototype.getRelateFieldName = function () {
            return (this.field && this.field.definition && this.field.definition.rname) || 'name';
        };
        BaseRelateComponent.prototype.getRelateIdField = function () {
            return (this.field && this.field.definition && this.field.definition.id_name) || '';
        };
        BaseRelateComponent.prototype.getRelatedModule = function () {
            var legacyName = (this.field && this.field.definition && this.field.definition.module) || '';
            if (!legacyName) {
                return '';
            }
            return this.moduleNameMapper.toFrontend(legacyName);
        };
        BaseRelateComponent.prototype.getMessage = function () {
            var messages = {
                searching: 'LBL_SEARCHING',
                'not-found': 'LBL_NOT_FOUND',
                error: 'LBL_SEARCH_ERROR',
                found: 'LBL_FOUND',
                'no-module': 'LBL_NO_MODULE_SELECTED'
            };
            if (messages[this.status]) {
                return messages[this.status];
            }
            return '';
        };
        BaseRelateComponent.prototype.getInvalidClass = function () {
            if (this.field.formControl && this.field.formControl.invalid && this.field.formControl.touched) {
                return 'is-invalid';
            }
            if (this.hasSearchError()) {
                return 'is-invalid';
            }
            return '';
        };
        BaseRelateComponent.prototype.hasSearchError = function () {
            return this.status === 'error' || this.status === 'not-found';
        };
        BaseRelateComponent.prototype.resetStatus = function () {
            this.status = '';
        };
        BaseRelateComponent.prototype.getPlaceholderLabel = function () {
            return this.languages.getAppString('LBL_TYPE_TO_SEARCH') || '';
        };
        BaseRelateComponent.prototype.init = function () {
            var _a, _b, _c;
            this.initModule = (_c = (_b = (_a = this === null || this === void 0 ? void 0 : this.field) === null || _a === void 0 ? void 0 : _a.definition) === null || _b === void 0 ? void 0 : _b.module) !== null && _c !== void 0 ? _c : '';
            if (this.relateService) {
                this.relateService.init(this.getRelatedModule());
            }
        };
        BaseRelateComponent.prototype.buildRelate = function (id, relateValue) {
            var relate = { id: id };
            if (this.getRelateFieldName()) {
                relate[this.getRelateFieldName()] = relateValue;
            }
            return relate;
        };
        return BaseRelateComponent;
    }(BaseFieldComponent));
    BaseRelateComponent.decorators = [
        { type: i0.Component, args: [{ template: '' },] }
    ];
    BaseRelateComponent.ctorParameters = function () { return [
        { type: LanguageStore },
        { type: DataTypeFormatter },
        { type: RelateService },
        { type: ModuleNameMapper },
        { type: FieldLogicManager }
    ]; };

    var RelateEditFieldComponent = /** @class */ (function (_super) {
        __extends(RelateEditFieldComponent, _super);
        /**
         * Constructor
         *
         * @param {object} languages service
         * @param {object} typeFormatter service
         * @param {object} relateService service
         * @param {object} moduleNameMapper service
         * @param {object} modalService service
         * @param {object} logic
         */
        function RelateEditFieldComponent(languages, typeFormatter, relateService, moduleNameMapper, modalService, logic) {
            var _this = _super.call(this, languages, typeFormatter, relateService, moduleNameMapper, logic) || this;
            _this.languages = languages;
            _this.typeFormatter = typeFormatter;
            _this.relateService = relateService;
            _this.moduleNameMapper = moduleNameMapper;
            _this.modalService = modalService;
            _this.logic = logic;
            _this.selectButton = {
                klass: ['btn', 'btn-sm', 'btn-outline-secondary', 'select-button', 'm-0'],
                onClick: function () {
                    _this.showSelectModal();
                },
                icon: 'cursor'
            };
            return _this;
        }
        /**
         * On init handler
         */
        RelateEditFieldComponent.prototype.ngOnInit = function () {
            _super.prototype.ngOnInit.call(this);
            this.init();
        };
        RelateEditFieldComponent.prototype.init = function () {
            _super.prototype.init.call(this);
            this.initValue();
            var idFieldName = this.getRelateIdField();
            if (idFieldName && this.record && this.record.fields && this.record.fields[idFieldName]) {
                this.idField = this.record.fields[idFieldName];
            }
        };
        RelateEditFieldComponent.prototype.initValue = function () {
            if (!this.field.valueObject) {
                this.selectedValues = [];
                return;
            }
            if (!this.field.valueObject.id) {
                this.selectedValues = [];
                return;
            }
            this.selectedValues = [];
            this.selectedValues.push(this.field.valueObject);
        };
        /**
         * Handle newly added item
         *
         * @param {object} item added
         */
        RelateEditFieldComponent.prototype.onAdd = function (item) {
            if (item) {
                var relateName = this.getRelateFieldName();
                this.setValue(item.id, item[relateName]);
                return;
            }
            this.setValue('', '');
            this.selectedValues = [];
            return;
        };
        /**
         * Handle item removal
         */
        RelateEditFieldComponent.prototype.onRemove = function () {
            var _this = this;
            this.setValue('', '');
            this.selectedValues = [];
            setTimeout(function () {
                _this.tag.focus(true, true);
            }, 200);
        };
        /**
         * Set value on field
         *
         * @param {string} id to set
         * @param {string} relateValue to set
         */
        RelateEditFieldComponent.prototype.setValue = function (id, relateValue) {
            var relate = this.buildRelate(id, relateValue);
            this.field.value = relateValue;
            this.field.valueObject = relate;
            this.field.formControl.setValue(relateValue);
            this.field.formControl.markAsDirty();
            if (this.idField) {
                this.idField.value = id;
                this.idField.formControl.setValue(id);
                this.idField.formControl.markAsDirty();
            }
        };
        /**
         * Show record selection modal
         */
        RelateEditFieldComponent.prototype.showSelectModal = function () {
            var _this = this;
            var modal = this.modalService.open(RecordListModalComponent, { size: 'xl', scrollable: true });
            modal.componentInstance.module = this.getRelatedModule();
            modal.result.then(function (data) {
                if (!data || !data.selection || !data.selection.selected) {
                    return;
                }
                var record = _this.getSelectedRecord(data);
                _this.setItem(record);
            });
        };
        /**
         * Get Selected Record
         *
         * @param {object} data RecordListModalResult
         * @returns {object} Record
         */
        RelateEditFieldComponent.prototype.getSelectedRecord = function (data) {
            var id = '';
            Object.keys(data.selection.selected).some(function (selected) {
                id = selected;
                return true;
            });
            var record = null;
            data.records.some(function (rec) {
                if (rec && rec.id === id) {
                    record = rec;
                    return true;
                }
            });
            return record;
        };
        /**
         * Set the record as the selected item
         *
         * @param {object} record to set
         */
        RelateEditFieldComponent.prototype.setItem = function (record) {
            this.tag.writeValue([record.attributes]);
            this.onAdd(record.attributes);
        };
        RelateEditFieldComponent.prototype.selectFirstElement = function () {
            var filteredElements = this.tag.dropdown.items;
            if (filteredElements.length !== 0) {
                var firstElement = filteredElements[0];
                this.selectedValues.push(firstElement);
                this.onAdd(firstElement);
                this.tag.dropdown.hide();
            }
        };
        return RelateEditFieldComponent;
    }(BaseRelateComponent));
    RelateEditFieldComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-relate-edit',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<div class=\"d-flex\">\n    <ng-container *ngIf=\"initModule\">\n        <div class=\"flex-grow-1\">\n            <tag-input #tag\n                       (keyup.enter)=\"selectFirstElement()\"\n                       (onAdd)=\"onAdd($event)\"\n                       (onBlur)=\"resetStatus()\"\n                       (onRemove)=\"onRemove()\"\n                       [(ngModel)]=\"selectedValues\"\n                       [class]=\"getInvalidClass()\"\n                       [clearOnBlur]=\"true\"\n                       [displayBy]=\"getRelateFieldName()\"\n                       [inputClass]=\"getInvalidClass()\"\n                       [onTextChangeDebounce]=\"500\"\n                       [onlyFromAutocomplete]=\"true\"\n                       [placeholder]=\"getPlaceholderLabel()\"\n                       [secondaryPlaceholder]=\"getPlaceholderLabel()\"\n                       maxItems=\"1\">\n                <tag-input-dropdown [autocompleteObservable]=\"search\"\n                                    [displayBy]=\"getRelateFieldName()\"\n                                    [keepOpen]=\"false\"\n                                    [showDropdownIfEmpty]=\"true\">\n                </tag-input-dropdown>\n            </tag-input>\n        </div>\n        <div class=\"relate-btn\">\n            <scrm-button [config]=\"selectButton\">\n            </scrm-button>\n        </div>\n    </ng-container>\n</div>\n<small *ngIf=\"getMessage()\" class=\"text-danger form-text text-muted\">\n    <scrm-label [labelKey]=\"getMessage()\" [module]=\"module\"></scrm-label>\n</small>\n",
                    providers: [RelateService]
                },] }
    ];
    RelateEditFieldComponent.ctorParameters = function () { return [
        { type: LanguageStore },
        { type: DataTypeFormatter },
        { type: RelateService },
        { type: ModuleNameMapper },
        { type: i1$2.NgbModal },
        { type: FieldLogicManager }
    ]; };
    RelateEditFieldComponent.propDecorators = {
        tag: [{ type: i0.ViewChild, args: ['tag',] }]
    };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var InlineLoadingSpinnerComponent = /** @class */ (function () {
        function InlineLoadingSpinnerComponent() {
        }
        InlineLoadingSpinnerComponent.prototype.ngOnInit = function () {
        };
        return InlineLoadingSpinnerComponent;
    }());
    InlineLoadingSpinnerComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-inline-loading-spinner',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<div class=\"inline-spinner\">\n    <div class=\"bounce1\"></div>\n    <div class=\"bounce2\"></div>\n    <div class=\"bounce3\"></div>\n</div>\n",
                    styles: [".inline-spinner{text-align:center}.inline-spinner>div{border-radius:100%;display:inline-block;-webkit-animation:sk-bouncedelay 1.4s infinite ease-in-out both;animation:sk-bouncedelay 1.4s infinite ease-in-out both}.inline-spinner .bounce1{-webkit-animation-delay:-.32s;animation-delay:-.32s}.inline-spinner .bounce2{-webkit-animation-delay:-.16s;animation-delay:-.16s}@-webkit-keyframes sk-bouncedelay{0%,80%,to{-webkit-transform:scale(0)}40%{-webkit-transform:scale(1)}}@keyframes sk-bouncedelay{0%,80%,to{transform:scale(0)}40%{transform:scale(1)}}\n"]
                },] }
    ];
    InlineLoadingSpinnerComponent.ctorParameters = function () { return []; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var InlineLoadingSpinnerModule = /** @class */ (function () {
        function InlineLoadingSpinnerModule() {
        }
        return InlineLoadingSpinnerModule;
    }());
    InlineLoadingSpinnerModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [InlineLoadingSpinnerComponent],
                    exports: [InlineLoadingSpinnerComponent],
                    imports: [
                        common.CommonModule
                    ]
                },] }
    ];

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var RelateEditFieldModule = /** @class */ (function () {
        function RelateEditFieldModule() {
        }
        return RelateEditFieldModule;
    }());
    RelateEditFieldModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [RelateEditFieldComponent],
                    exports: [RelateEditFieldComponent],
                    imports: [
                        common.CommonModule,
                        ngxChips.TagInputModule,
                        LabelModule,
                        forms.FormsModule,
                        InlineLoadingSpinnerModule,
                        ButtonModule
                    ]
                },] }
    ];

    var RelateFilterFieldComponent = /** @class */ (function (_super) {
        __extends(RelateFilterFieldComponent, _super);
        /**
         * Constructor
         *
         * @param {object} languages service
         * @param {object} typeFormatter service
         * @param {object} relateService service
         * @param {object} moduleNameMapper service
         * @param {object} modalService service
         * @param {object} logic
         */
        function RelateFilterFieldComponent(languages, typeFormatter, relateService, moduleNameMapper, modalService, logic) {
            var _this = _super.call(this, languages, typeFormatter, relateService, moduleNameMapper, logic) || this;
            _this.languages = languages;
            _this.typeFormatter = typeFormatter;
            _this.relateService = relateService;
            _this.moduleNameMapper = moduleNameMapper;
            _this.modalService = modalService;
            _this.logic = logic;
            _this.selectButton = {
                klass: ['btn', 'btn-sm', 'btn-outline-secondary', 'select-button', 'm-0'],
                onClick: function () {
                    _this.showSelectModal();
                },
                icon: 'cursor'
            };
            return _this;
        }
        /**
         * On init handler
         */
        RelateFilterFieldComponent.prototype.ngOnInit = function () {
            var filter = this.record;
            this.field.valueList = [];
            this.field.valueObjectArray = [];
            var values = (this.field && this.field.criteria && this.field.criteria.values) || [];
            if (values.length > 0) {
                this.field.valueList = values;
                this.selectedTags = values;
            }
            var valueObjectArray = (this.field && this.field.criteria && this.field.criteria.valueObjectArray) || [];
            if (valueObjectArray.length > 0) {
                this.field.valueObjectArray = i5.deepClone(valueObjectArray);
                this.selectedTags = i5.deepClone(valueObjectArray);
            }
            _super.prototype.ngOnInit.call(this);
            var idFieldName = this.getRelateIdField();
            if (idFieldName && filter && filter.criteriaFields && filter.criteriaFields[idFieldName]) {
                this.idField = filter.criteriaFields[idFieldName];
                this.idField.valueList = [];
                var idValues = (this.idField && this.idField.criteria && this.idField.criteria.values) || [];
                if (idValues.length > 0) {
                    this.idField.valueList = i5.deepClone(idValues);
                }
            }
        };
        /**
         * Handle newly added item
         *
         * @param {object} item added
         */
        RelateFilterFieldComponent.prototype.onAdd = function (item) {
            if (item) {
                this.setValue(item);
                return;
            }
        };
        RelateFilterFieldComponent.prototype.onAdding = function (item) {
            if (!item) {
                return rxjs.EMPTY;
            }
            if (this.idField && this.idField.valueList.includes(item.id)) {
                return rxjs.EMPTY;
            }
            var relateName = this.getRelateFieldName();
            if (!this.idField && this.field.valueList.includes(item[relateName])) {
                return rxjs.EMPTY;
            }
            return rxjs.of(item);
        };
        /**
         * Handle item removal
         */
        RelateFilterFieldComponent.prototype.onRemove = function (item) {
            var _this = this;
            var _a, _b;
            var id = (_a = item.id) !== null && _a !== void 0 ? _a : '';
            var value = (_b = item.name) !== null && _b !== void 0 ? _b : '';
            this.field.valueList = this.field.valueList.filter(function (element) { return element !== value; });
            this.field.valueObjectArray = this.field.valueObjectArray.filter(function (element) { return element.id !== id; });
            this.updateSearchCriteria(this.field);
            this.field.criteria.valueObjectArray = i5.deepClone(this.field.valueObjectArray);
            if (this.idField && id) {
                this.idField.valueList = this.idField.valueList.filter(function (element) { return element !== id; });
                this.updateSearchCriteria(this.idField);
            }
            setTimeout(function () {
                _this.tag.focus(true, true);
            }, 200);
        };
        RelateFilterFieldComponent.prototype.selectFirstElement = function () {
            var filteredElements = this.tag.dropdown.items;
            if (filteredElements.length !== 0) {
                var firstElement = filteredElements[0];
                this.tag.appendTag(firstElement);
                this.onAdd(firstElement);
                this.tag.dropdown.hide();
            }
        };
        /**
         * Set value on field
         *
         * @param item: any
         */
        RelateFilterFieldComponent.prototype.setValue = function (item) {
            var relateName = this.getRelateFieldName();
            var id = item.id;
            var relateValue = item[relateName];
            if (this.idField && this.idField.valueList.includes(id)) {
                return;
            }
            if (!this.idField && this.field.valueList.includes(relateValue)) {
                return;
            }
            var valueObject = {};
            valueObject.id = id;
            valueObject[relateName] = relateValue;
            this.field.valueObjectArray.push(valueObject);
            this.field.valueList.push(relateValue);
            if (this.idField) {
                this.idField.valueList.push(id);
                this.updateSearchCriteria(this.idField);
            }
            this.updateSearchCriteria(this.field);
            if (!this.field.criteria.valueObjectArray) {
                this.field.criteria.valueObjectArray = [];
            }
            this.field.criteria.valueObjectArray.push(valueObject);
        };
        /**
         * Set value on field criteria and form
         */
        RelateFilterFieldComponent.prototype.updateSearchCriteria = function (field) {
            field.criteria.operator = '=';
            field.criteria.values = field.valueList;
            field.formControl.setValue(field.valueList);
            field.formControl.markAsDirty();
        };
        /**
         * Show record selection modal
         */
        RelateFilterFieldComponent.prototype.showSelectModal = function () {
            var _this = this;
            var modal = this.modalService.open(RecordListModalComponent, { size: 'xl', scrollable: true });
            modal.componentInstance.module = this.getRelatedModule();
            modal.result.then(function (data) {
                if (!data || !data.selection || !data.selection.selected) {
                    return;
                }
                var record = _this.getSelectedRecord(data);
                var found = _this.field.valueObjectArray.find(function (element) { return element.id === record.id; });
                if (found) {
                    return;
                }
                _this.setItem(record);
            });
        };
        /**
         * Get Selected Record
         *
         * @param {object} data RecordListModalResult
         * @returns {object} Record
         */
        RelateFilterFieldComponent.prototype.getSelectedRecord = function (data) {
            var id = '';
            Object.keys(data.selection.selected).some(function (selected) {
                id = selected;
                return true;
            });
            var record = null;
            data.records.some(function (rec) {
                if (rec && rec.id === id) {
                    record = rec;
                    return true;
                }
            });
            return record;
        };
        /**
         * Set the record as the selected item
         *
         * @param {object} record to set
         */
        RelateFilterFieldComponent.prototype.setItem = function (record) {
            this.tag.appendTag(record.attributes);
            this.onAdd(record.attributes);
        };
        return RelateFilterFieldComponent;
    }(BaseRelateComponent));
    RelateFilterFieldComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-relate-filter',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<div class=\"d-flex\">\n    <div class=\"flex-grow-1\">\n        <tag-input #tag\n                   (keyup.enter)=\"selectFirstElement()\"\n                   (onAdd)=\"onAdd($event)\"\n                   (onBlur)=\"resetStatus()\"\n                   (onRemove)=\"onRemove($event)\"\n                   [(ngModel)]=\"selectedTags\"\n                   [class]=\"getInvalidClass()\"\n                   [clearOnBlur]=\"true\"\n                   [identifyBy]=\"'id'\"\n                   [displayBy]=\"getRelateFieldName()\"\n                   [inputClass]=\"getInvalidClass()\"\n                   [onTextChangeDebounce]=\"500\"\n                   [onlyFromAutocomplete]=\"true\"\n                   [placeholder]=\"getPlaceholderLabel()\"\n                   [secondaryPlaceholder]=\"getPlaceholderLabel()\">\n            <tag-input-dropdown [autocompleteObservable]=\"search\"\n                                [identifyBy]=\"'id'\"\n                                [displayBy]=\"getRelateFieldName()\"\n                                [keepOpen]=\"false\"\n                                [showDropdownIfEmpty]=\"true\">\n            </tag-input-dropdown>\n        </tag-input>\n    </div>\n   <div class=\"relate-btn\">\n        <scrm-button [config]=\"selectButton\">\n        </scrm-button>\n    </div>\n</div>\n<small *ngIf=\"getMessage()\" class=\"text-danger form-text text-muted\">\n    <scrm-label [labelKey]=\"getMessage()\" [module]=\"module\"></scrm-label>\n</small>\n",
                    providers: [RelateService]
                },] }
    ];
    RelateFilterFieldComponent.ctorParameters = function () { return [
        { type: LanguageStore },
        { type: DataTypeFormatter },
        { type: RelateService },
        { type: ModuleNameMapper },
        { type: i1$2.NgbModal },
        { type: FieldLogicManager }
    ]; };
    RelateFilterFieldComponent.propDecorators = {
        tag: [{ type: i0.ViewChild, args: ['tag',] }]
    };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var TextDetailFieldModule = /** @class */ (function () {
        function TextDetailFieldModule() {
        }
        return TextDetailFieldModule;
    }());
    TextDetailFieldModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [TextDetailFieldComponent],
                    exports: [TextDetailFieldComponent],
                    imports: [
                        common.CommonModule,
                        forms.FormsModule
                    ]
                },] }
    ];

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var PhoneDetailFieldModule = /** @class */ (function () {
        function PhoneDetailFieldModule() {
        }
        return PhoneDetailFieldModule;
    }());
    PhoneDetailFieldModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [PhoneDetailFieldComponent],
                    exports: [PhoneDetailFieldComponent],
                    imports: [
                        common.CommonModule,
                    ]
                },] }
    ];

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var DateEditFieldModule = /** @class */ (function () {
        function DateEditFieldModule() {
        }
        return DateEditFieldModule;
    }());
    DateEditFieldModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [DateEditFieldComponent],
                    exports: [DateEditFieldComponent],
                    imports: [
                        common.CommonModule,
                        forms.FormsModule,
                        i1$2.NgbDatepickerModule,
                        ButtonModule,
                        forms.ReactiveFormsModule
                    ]
                },] }
    ];

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var MultiEnumFilterFieldModule = /** @class */ (function () {
        function MultiEnumFilterFieldModule() {
        }
        return MultiEnumFilterFieldModule;
    }());
    MultiEnumFilterFieldModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [MultiEnumFilterFieldComponent],
                    exports: [MultiEnumFilterFieldComponent],
                    imports: [
                        common.CommonModule,
                        forms.FormsModule,
                        forms.ReactiveFormsModule,
                        ngxChips.TagInputModule
                    ]
                },] }
    ];

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var RelateDetailFieldsModule = /** @class */ (function () {
        function RelateDetailFieldsModule() {
        }
        return RelateDetailFieldsModule;
    }());
    RelateDetailFieldsModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [RelateDetailFieldComponent],
                    exports: [RelateDetailFieldComponent],
                    imports: [
                        common.CommonModule,
                    ]
                },] }
    ];

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var RelateFilterFieldModule = /** @class */ (function () {
        function RelateFilterFieldModule() {
        }
        return RelateFilterFieldModule;
    }());
    RelateFilterFieldModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [RelateFilterFieldComponent],
                    exports: [RelateFilterFieldComponent],
                    imports: [
                        common.CommonModule,
                        ngxChips.TagInputModule,
                        LabelModule,
                        forms.FormsModule,
                        InlineLoadingSpinnerModule,
                        ButtonModule,
                        ngxChips.TagInputModule
                    ]
                },] }
    ];

    var BooleanEditFieldComponent = /** @class */ (function (_super) {
        __extends(BooleanEditFieldComponent, _super);
        function BooleanEditFieldComponent(typeFormatter, logic) {
            var _this = _super.call(this, typeFormatter, logic) || this;
            _this.typeFormatter = typeFormatter;
            _this.logic = logic;
            return _this;
        }
        return BooleanEditFieldComponent;
    }(BaseBooleanComponent));
    BooleanEditFieldComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-boolean-edit',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<div class=\"pb-4 checkbox-field\">\n<label class=\"checkbox-container\">\n    <input type=\"checkbox\"\n           [checked]=\"checked\"\n           (change)=\"toggle()\"\n           aria-hidden=\"true\">\n    <span class=\"checkmark\"></span>\n</label>\n</div>\n"
                },] }
    ];
    BooleanEditFieldComponent.ctorParameters = function () { return [
        { type: DataTypeFormatter },
        { type: FieldLogicManager }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var BooleanEditFieldModule = /** @class */ (function () {
        function BooleanEditFieldModule() {
        }
        return BooleanEditFieldModule;
    }());
    BooleanEditFieldModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [BooleanEditFieldComponent],
                    exports: [BooleanEditFieldComponent],
                    imports: [
                        common.CommonModule,
                    ]
                },] }
    ];

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var VarcharEditFieldModule = /** @class */ (function () {
        function VarcharEditFieldModule() {
        }
        return VarcharEditFieldModule;
    }());
    VarcharEditFieldModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [VarcharEditFieldComponent],
                    exports: [VarcharEditFieldComponent],
                    imports: [
                        common.CommonModule,
                        forms.FormsModule,
                        forms.ReactiveFormsModule,
                        LabelModule
                    ]
                },] }
    ];

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var BooleanDetailFieldModule = /** @class */ (function () {
        function BooleanDetailFieldModule() {
        }
        return BooleanDetailFieldModule;
    }());
    BooleanDetailFieldModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [BooleanDetailFieldComponent],
                    exports: [BooleanDetailFieldComponent],
                    imports: [
                        common.CommonModule,
                    ]
                },] }
    ];

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var UrlDetailFieldModule = /** @class */ (function () {
        function UrlDetailFieldModule() {
        }
        return UrlDetailFieldModule;
    }());
    UrlDetailFieldModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [UrlDetailFieldComponent],
                    exports: [UrlDetailFieldComponent],
                    imports: [
                        common.CommonModule,
                    ]
                },] }
    ];

    var MultiEnumEditFieldComponent = /** @class */ (function (_super) {
        __extends(MultiEnumEditFieldComponent, _super);
        function MultiEnumEditFieldComponent(languages, typeFormatter, logic) {
            var _this = _super.call(this, languages, typeFormatter, logic) || this;
            _this.languages = languages;
            _this.typeFormatter = typeFormatter;
            _this.logic = logic;
            return _this;
        }
        MultiEnumEditFieldComponent.prototype.ngOnInit = function () {
            this.checkAndInitAsDynamicEnum();
            _super.prototype.ngOnInit.call(this);
        };
        MultiEnumEditFieldComponent.prototype.onAdd = function () {
            var value = this.selectedValues.map(function (option) { return option.value; });
            this.field.valueList = value;
            this.field.formControl.setValue(value);
            this.field.formControl.markAsDirty();
            return;
        };
        MultiEnumEditFieldComponent.prototype.onRemove = function () {
            var _this = this;
            var value = this.selectedValues.map(function (option) { return option.value; });
            this.field.valueList = value;
            this.field.formControl.setValue(value);
            this.field.formControl.markAsDirty();
            setTimeout(function () {
                _this.tag.focus(true, true);
                _this.tag.dropdown.show();
            }, 200);
        };
        MultiEnumEditFieldComponent.prototype.getPlaceholderLabel = function () {
            return this.languages.getAppString('LBL_SELECT_ITEM') || '';
        };
        MultiEnumEditFieldComponent.prototype.selectFirstElement = function () {
            var filteredElements = this.tag.dropdown.items;
            if (filteredElements.length !== 0) {
                var firstElement = filteredElements[0];
                this.selectedValues.push(firstElement);
                this.onAdd();
                this.tag.dropdown.hide();
            }
        };
        return MultiEnumEditFieldComponent;
    }(BaseMultiEnumComponent));
    MultiEnumEditFieldComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-multienum-edit',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<tag-input [(ngModel)]=\"selectedValues\"\n           [onlyFromAutocomplete]=\"true\"\n           [clearOnBlur]=\"true\"\n           [displayBy]=\"'label'\"\n           [identifyBy]=\"'value'\"\n           [placeholder]=\"getPlaceholderLabel()\"\n           [secondaryPlaceholder]=\"getPlaceholderLabel()\"\n           [inputClass]=\"getInvalidClass()\"\n           #tag\n           (onAdd)=\"onAdd()\"\n           (onRemove)=\"onRemove()\"\n           (keyup.enter)=\"selectFirstElement()\">\n    <tag-input-dropdown [displayBy]=\"'label'\"\n                        [identifyBy]=\"'value'\"\n                        [showDropdownIfEmpty]=\"true\"\n                        [keepOpen]=\"false\"\n                        [autocompleteItems]=\"this.options\">\n    </tag-input-dropdown>\n</tag-input>\n"
                },] }
    ];
    MultiEnumEditFieldComponent.ctorParameters = function () { return [
        { type: LanguageStore },
        { type: DataTypeFormatter },
        { type: FieldLogicManager }
    ]; };
    MultiEnumEditFieldComponent.propDecorators = {
        tag: [{ type: i0.ViewChild, args: ['tag',] }]
    };

    var IntDetailFieldComponent = /** @class */ (function (_super) {
        __extends(IntDetailFieldComponent, _super);
        function IntDetailFieldComponent(userPreferences, systemConfig, typeFormatter, logic) {
            var _this = _super.call(this, userPreferences, systemConfig, typeFormatter, logic) || this;
            _this.userPreferences = userPreferences;
            _this.systemConfig = systemConfig;
            _this.typeFormatter = typeFormatter;
            _this.logic = logic;
            return _this;
        }
        return IntDetailFieldComponent;
    }(BaseNumberComponent));
    IntDetailFieldComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-int-detail',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<ng-container *ngIf=\"!format\">{{ field.value }}</ng-container>\n<ng-container *ngIf=\"format && (vm$ | async) as vm\">\n    {{field.value | formatNumber}}\n</ng-container>\n"
                },] }
    ];
    IntDetailFieldComponent.ctorParameters = function () { return [
        { type: UserPreferenceStore },
        { type: SystemConfigStore },
        { type: DataTypeFormatter },
        { type: FieldLogicManager }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var MultiEnumEditFieldModule = /** @class */ (function () {
        function MultiEnumEditFieldModule() {
        }
        return MultiEnumEditFieldModule;
    }());
    MultiEnumEditFieldModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [MultiEnumEditFieldComponent],
                    exports: [MultiEnumEditFieldComponent],
                    imports: [
                        common.CommonModule,
                        ngxChips.TagInputModule,
                        forms.FormsModule
                    ]
                },] }
    ];

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var IntDetailFieldModule = /** @class */ (function () {
        function IntDetailFieldModule() {
        }
        return IntDetailFieldModule;
    }());
    IntDetailFieldModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [IntDetailFieldComponent],
                    exports: [IntDetailFieldComponent],
                    imports: [
                        common.CommonModule,
                        FormatNumberModule
                    ]
                },] }
    ];

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var VarcharDetailFieldModule = /** @class */ (function () {
        function VarcharDetailFieldModule() {
        }
        return VarcharDetailFieldModule;
    }());
    VarcharDetailFieldModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [VarcharDetailFieldComponent],
                    exports: [VarcharDetailFieldComponent],
                    imports: [
                        common.CommonModule,
                    ]
                },] }
    ];

    var TextEditFieldComponent = /** @class */ (function (_super) {
        __extends(TextEditFieldComponent, _super);
        function TextEditFieldComponent(typeFormatter, logic) {
            var _this = _super.call(this, typeFormatter, logic) || this;
            _this.typeFormatter = typeFormatter;
            _this.logic = logic;
            return _this;
        }
        TextEditFieldComponent.prototype.ngOnInit = function () {
            _super.prototype.ngOnInit.call(this);
            this.subscribeValueChanges();
        };
        TextEditFieldComponent.prototype.ngOnDestroy = function () {
            this.unsubscribeAll();
        };
        Object.defineProperty(TextEditFieldComponent.prototype, "rows", {
            get: function () {
                if (this.field.metadata && this.field.metadata.rows) {
                    return this.field.metadata.rows;
                }
                return 6;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TextEditFieldComponent.prototype, "cols", {
            get: function () {
                if (this.field.metadata && this.field.metadata.cols) {
                    return this.field.metadata.cols;
                }
                return 20;
            },
            enumerable: false,
            configurable: true
        });
        return TextEditFieldComponent;
    }(BaseFieldComponent));
    TextEditFieldComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-text-edit',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<textarea [rows]=\"rows\"\n          [cols]=\"cols\"\n          [ngClass]=\"klass\"\n          [class.is-invalid]=\"field.formControl.invalid && field.formControl.touched\"\n          [formControl]=\"field.formControl\">\n</textarea>\n"
                },] }
    ];
    TextEditFieldComponent.ctorParameters = function () { return [
        { type: DataTypeFormatter },
        { type: FieldLogicManager }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var DateFilterFieldModule = /** @class */ (function () {
        function DateFilterFieldModule() {
        }
        return DateFilterFieldModule;
    }());
    DateFilterFieldModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [DateFilterFieldComponent],
                    exports: [DateFilterFieldComponent],
                    imports: [
                        common.CommonModule,
                        forms.FormsModule,
                        i1$2.NgbDatepickerModule,
                        ButtonModule,
                        forms.ReactiveFormsModule
                    ]
                },] }
    ];

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var TextEditFieldModule = /** @class */ (function () {
        function TextEditFieldModule() {
        }
        return TextEditFieldModule;
    }());
    TextEditFieldModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [TextEditFieldComponent],
                    exports: [TextEditFieldComponent],
                    imports: [
                        common.CommonModule,
                        forms.FormsModule,
                        forms.ReactiveFormsModule
                    ]
                },] }
    ];

    var DropdownEnumEditFieldComponent = /** @class */ (function (_super) {
        __extends(DropdownEnumEditFieldComponent, _super);
        function DropdownEnumEditFieldComponent(languages, typeFormatter, logic) {
            var _this = _super.call(this, languages, typeFormatter, logic) || this;
            _this.languages = languages;
            _this.typeFormatter = typeFormatter;
            _this.logic = logic;
            return _this;
        }
        DropdownEnumEditFieldComponent.prototype.ngOnInit = function () {
            _super.prototype.ngOnInit.call(this);
            this.subscribeValueChanges();
            if (this.record && this.record.formGroup) {
                this.formGroup = this.record.formGroup;
            }
            else {
                this.formGroup = new forms.FormGroup({});
                this.formGroup.addControl(this.field.name, this.field.formControl);
            }
        };
        DropdownEnumEditFieldComponent.prototype.getId = function (item) {
            return this.field.name + '-' + item.value;
        };
        return DropdownEnumEditFieldComponent;
    }(BaseEnumComponent));
    DropdownEnumEditFieldComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-dropdownenum-edit',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<div class=\"dropdownenum\">\n    <select [formControl]=\"field.formControl\" class=\"custom-select custom-select-sm\">\n        <ng-container *ngIf=\"this.options && this.options.length\">\n            <option *ngFor=\"let item of this.options;\"\n                    class=\"{{getId(item)}}\"\n                    [ngValue]=\"item.value\">\n                {{item.label}}\n            </option>\n        </ng-container>\n    </select>\n</div>\n"
                },] }
    ];
    DropdownEnumEditFieldComponent.ctorParameters = function () { return [
        { type: LanguageStore },
        { type: DataTypeFormatter },
        { type: FieldLogicManager }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var DropdownEnumEditFieldModule = /** @class */ (function () {
        function DropdownEnumEditFieldModule() {
        }
        return DropdownEnumEditFieldModule;
    }());
    DropdownEnumEditFieldModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [DropdownEnumEditFieldComponent],
                    exports: [DropdownEnumEditFieldComponent],
                    imports: [
                        common.CommonModule,
                        forms.FormsModule,
                        forms.ReactiveFormsModule
                    ]
                },] }
    ];

    var DropdownEnumDetailFieldComponent = /** @class */ (function (_super) {
        __extends(DropdownEnumDetailFieldComponent, _super);
        function DropdownEnumDetailFieldComponent(languages, typeFormatter, logic) {
            var _this = _super.call(this, languages, typeFormatter, logic) || this;
            _this.languages = languages;
            _this.typeFormatter = typeFormatter;
            _this.logic = logic;
            return _this;
        }
        return DropdownEnumDetailFieldComponent;
    }(BaseEnumComponent));
    DropdownEnumDetailFieldComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-dropdownenum-detail',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n{{valueLabel}}\n"
                },] }
    ];
    DropdownEnumDetailFieldComponent.ctorParameters = function () { return [
        { type: LanguageStore },
        { type: DataTypeFormatter },
        { type: FieldLogicManager }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var DropdownEnumDetailFieldModule = /** @class */ (function () {
        function DropdownEnumDetailFieldModule() {
        }
        return DropdownEnumDetailFieldModule;
    }());
    DropdownEnumDetailFieldModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [DropdownEnumDetailFieldComponent],
                    exports: [DropdownEnumDetailFieldComponent],
                    imports: [
                        common.CommonModule,
                        forms.FormsModule
                    ]
                },] }
    ];

    var RadioEnumDetailFieldComponent = /** @class */ (function (_super) {
        __extends(RadioEnumDetailFieldComponent, _super);
        function RadioEnumDetailFieldComponent(languages, typeFormatter, logic) {
            var _this = _super.call(this, languages, typeFormatter, logic) || this;
            _this.languages = languages;
            _this.typeFormatter = typeFormatter;
            _this.logic = logic;
            return _this;
        }
        return RadioEnumDetailFieldComponent;
    }(BaseEnumComponent));
    RadioEnumDetailFieldComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-radioenum-detail',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n{{valueLabel}}\n"
                },] }
    ];
    RadioEnumDetailFieldComponent.ctorParameters = function () { return [
        { type: LanguageStore },
        { type: DataTypeFormatter },
        { type: FieldLogicManager }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var RadioEnumDetailFieldModule = /** @class */ (function () {
        function RadioEnumDetailFieldModule() {
        }
        return RadioEnumDetailFieldModule;
    }());
    RadioEnumDetailFieldModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [RadioEnumDetailFieldComponent],
                    exports: [RadioEnumDetailFieldComponent],
                    imports: [
                        common.CommonModule,
                        forms.FormsModule
                    ]
                },] }
    ];

    var RadioEnumEditFieldComponent = /** @class */ (function (_super) {
        __extends(RadioEnumEditFieldComponent, _super);
        function RadioEnumEditFieldComponent(languages, typeFormatter, logic) {
            var _this = _super.call(this, languages, typeFormatter, logic) || this;
            _this.languages = languages;
            _this.typeFormatter = typeFormatter;
            _this.logic = logic;
            return _this;
        }
        Object.defineProperty(RadioEnumEditFieldComponent.prototype, "displayDirection", {
            get: function () {
                if (!this.field || !this.field.definition || !this.field.definition.displayDirection) {
                    return '';
                }
                return this.field.definition.displayDirection;
            },
            enumerable: false,
            configurable: true
        });
        RadioEnumEditFieldComponent.prototype.ngOnInit = function () {
            _super.prototype.ngOnInit.call(this);
            this.subscribeValueChanges();
            if (this.record && this.record.formGroup) {
                this.formGroup = this.record.formGroup;
            }
            else {
                this.formGroup = new forms.FormGroup({});
                this.formGroup.addControl(this.field.name, this.field.formControl);
            }
        };
        RadioEnumEditFieldComponent.prototype.getId = function (item) {
            return this.field.name + '-' + item.value;
        };
        return RadioEnumEditFieldComponent;
    }(BaseEnumComponent));
    RadioEnumEditFieldComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-radioenum-edit',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<div class=\"radioenum\">\n    <div *ngFor=\"let item of this.options;\"\n         [class.form-check-inline]=\"displayDirection === 'row'\"\n         class=\"form-check radioenum-input {{getId(item)}}\">\n        <input [checked]=\"field.value === item.value\"\n               [formControl]=\"field.formControl\"\n               [value]=\"item.value\"\n               class=\"form-check-input\"\n               id=\"{{getId(item)}}\"\n               type=\"radio\"\n        />\n        <label class=\"form-check-label\"\n               for=\"{{getId(item)}}\">\n            {{item.label}}\n        </label>\n    </div>\n</div>\n"
                },] }
    ];
    RadioEnumEditFieldComponent.ctorParameters = function () { return [
        { type: LanguageStore },
        { type: DataTypeFormatter },
        { type: FieldLogicManager }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var RadioEnumEditFieldModule = /** @class */ (function () {
        function RadioEnumEditFieldModule() {
        }
        return RadioEnumEditFieldModule;
    }());
    RadioEnumEditFieldModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [RadioEnumEditFieldComponent],
                    exports: [RadioEnumEditFieldComponent],
                    imports: [
                        common.CommonModule,
                        forms.FormsModule,
                        forms.ReactiveFormsModule
                    ]
                },] }
    ];

    var HtmlDetailFieldComponent = /** @class */ (function (_super) {
        __extends(HtmlDetailFieldComponent, _super);
        function HtmlDetailFieldComponent(typeFormatter, logic) {
            var _this = _super.call(this, typeFormatter, logic) || this;
            _this.typeFormatter = typeFormatter;
            _this.logic = logic;
            return _this;
        }
        return HtmlDetailFieldComponent;
    }(BaseFieldComponent));
    HtmlDetailFieldComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-html-detail',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<div class=\"field-html text-break\" [innerHTML]=\"field.value\"></div>\n"
                },] }
    ];
    HtmlDetailFieldComponent.ctorParameters = function () { return [
        { type: DataTypeFormatter },
        { type: FieldLogicManager }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var HtmlDetailFieldModule = /** @class */ (function () {
        function HtmlDetailFieldModule() {
        }
        return HtmlDetailFieldModule;
    }());
    HtmlDetailFieldModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [HtmlDetailFieldComponent],
                    exports: [HtmlDetailFieldComponent],
                    imports: [
                        common.CommonModule,
                        forms.FormsModule
                    ]
                },] }
    ];

    var PasswordDetailFieldComponent = /** @class */ (function (_super) {
        __extends(PasswordDetailFieldComponent, _super);
        function PasswordDetailFieldComponent(typeFormatter, logic) {
            var _this = _super.call(this, typeFormatter, logic) || this;
            _this.typeFormatter = typeFormatter;
            _this.logic = logic;
            return _this;
        }
        return PasswordDetailFieldComponent;
    }(BaseFieldComponent));
    PasswordDetailFieldComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-password-detail',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<span>*****</span>\n"
                },] }
    ];
    PasswordDetailFieldComponent.ctorParameters = function () { return [
        { type: DataTypeFormatter },
        { type: FieldLogicManager }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var PasswordDetailFieldModule = /** @class */ (function () {
        function PasswordDetailFieldModule() {
        }
        return PasswordDetailFieldModule;
    }());
    PasswordDetailFieldModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [PasswordDetailFieldComponent],
                    exports: [PasswordDetailFieldComponent],
                    imports: [
                        common.CommonModule,
                    ]
                },] }
    ];

    var PasswordEditFieldComponent = /** @class */ (function (_super) {
        __extends(PasswordEditFieldComponent, _super);
        function PasswordEditFieldComponent(typeFormatter, logic) {
            var _this = _super.call(this, typeFormatter, logic) || this;
            _this.typeFormatter = typeFormatter;
            _this.logic = logic;
            return _this;
        }
        PasswordEditFieldComponent.prototype.ngOnInit = function () {
            _super.prototype.ngOnInit.call(this);
            this.subscribeValueChanges();
        };
        PasswordEditFieldComponent.prototype.ngOnDestroy = function () {
            this.unsubscribeAll();
        };
        return PasswordEditFieldComponent;
    }(BaseFieldComponent));
    PasswordEditFieldComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-password-edit',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<input [class.is-invalid]=\"field.formControl.invalid && field.formControl.touched\"\n       [formControl]=\"field.formControl\"\n       [ngClass]=\"klass\"\n       [value]=\"field.value\"\n       type=\"password\">\n"
                },] }
    ];
    PasswordEditFieldComponent.ctorParameters = function () { return [
        { type: DataTypeFormatter },
        { type: FieldLogicManager }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var PasswordEditFieldModule = /** @class */ (function () {
        function PasswordEditFieldModule() {
        }
        return PasswordEditFieldModule;
    }());
    PasswordEditFieldModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [PasswordEditFieldComponent],
                    exports: [PasswordEditFieldComponent],
                    imports: [
                        common.CommonModule,
                        forms.FormsModule,
                        forms.ReactiveFormsModule,
                        LabelModule
                    ]
                },] }
    ];

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var baseFieldModules = [
        VarcharDetailFieldModule,
        VarcharEditFieldModule,
        VarcharFilterFieldModule,
        PasswordDetailFieldModule,
        PasswordEditFieldModule,
        IntDetailFieldModule,
        FloatDetailFieldModule,
        PhoneDetailFieldModule,
        DateDetailFieldModule,
        DateEditFieldModule,
        DateFilterFieldModule,
        DateTimeDetailFieldModule,
        DateTimeEditFieldModule,
        DateTimeFilterFieldModule,
        UrlDetailFieldModule,
        CurrencyDetailFieldModule,
        EmailListFieldsModule,
        TextDetailFieldModule,
        TextEditFieldModule,
        RelateDetailFieldsModule,
        RelateEditFieldModule,
        RelateFilterFieldModule,
        FullNameDetailFieldsModule,
        EnumDetailFieldModule,
        EnumEditFieldModule,
        DropdownEnumDetailFieldModule,
        DropdownEnumEditFieldModule,
        RadioEnumDetailFieldModule,
        RadioEnumEditFieldModule,
        MultiEnumDetailFieldModule,
        MultiEnumEditFieldModule,
        MultiEnumFilterFieldModule,
        BooleanDetailFieldModule,
        BooleanEditFieldModule,
        BooleanFilterFieldModule,
        HtmlDetailFieldModule
    ];
    var baseFieldComponents = [
        VarcharDetailFieldComponent,
        VarcharEditFieldComponent,
        VarcharFilterFieldComponent,
        PasswordDetailFieldComponent,
        PasswordEditFieldComponent,
        IntDetailFieldComponent,
        FloatDetailFieldComponent,
        PhoneDetailFieldComponent,
        DateDetailFieldComponent,
        DateEditFieldComponent,
        DateFilterFieldComponent,
        DateTimeDetailFieldComponent,
        DateTimeEditFieldComponent,
        DateTimeFilterFieldComponent,
        UrlDetailFieldComponent,
        CurrencyDetailFieldComponent,
        EmailListFieldsComponent,
        TextDetailFieldComponent,
        TextEditFieldComponent,
        RelateDetailFieldComponent,
        RelateEditFieldComponent,
        RelateFilterFieldComponent,
        FullNameDetailFieldsComponent,
        EnumDetailFieldComponent,
        EnumEditFieldComponent,
        DropdownEnumDetailFieldComponent,
        DropdownEnumEditFieldComponent,
        RadioEnumDetailFieldComponent,
        RadioEnumEditFieldComponent,
        MultiEnumDetailFieldComponent,
        MultiEnumEditFieldComponent,
        MultiEnumFilterFieldComponent,
        BooleanDetailFieldComponent,
        BooleanEditFieldComponent,
        BooleanFilterFieldComponent,
        HtmlDetailFieldComponent
    ];
    var baseViewFieldsMap = {
        'varchar.list': VarcharDetailFieldComponent,
        'varchar.detail': VarcharDetailFieldComponent,
        'varchar.edit': VarcharEditFieldComponent,
        'varchar.filter': VarcharFilterFieldComponent,
        'password.list': PasswordDetailFieldComponent,
        'password.detail': PasswordDetailFieldComponent,
        'password.edit': PasswordEditFieldComponent,
        'char.list': VarcharDetailFieldComponent,
        'char.detail': VarcharDetailFieldComponent,
        'int.list': IntDetailFieldComponent,
        'int.detail': IntDetailFieldComponent,
        'float.list': FloatDetailFieldComponent,
        'float.detail': FloatDetailFieldComponent,
        'phone.list': PhoneDetailFieldComponent,
        'phone.detail': PhoneDetailFieldComponent,
        'date.list': DateDetailFieldComponent,
        'date.detail': DateDetailFieldComponent,
        'date.edit': DateEditFieldComponent,
        'date.filter': DateFilterFieldComponent,
        'datetime.list': DateTimeDetailFieldComponent,
        'datetime.detail': DateTimeDetailFieldComponent,
        'datetime.edit': DateTimeEditFieldComponent,
        'datetime.filter': DateTimeFilterFieldComponent,
        'url.list': UrlDetailFieldComponent,
        'url.detail': UrlDetailFieldComponent,
        'link.list': UrlDetailFieldComponent,
        'link.detail': UrlDetailFieldComponent,
        'currency.list': CurrencyDetailFieldComponent,
        'currency.detail': CurrencyDetailFieldComponent,
        'email.list': EmailListFieldsComponent,
        'email.detail': EmailListFieldsComponent,
        'text.detail': TextDetailFieldComponent,
        'text.edit': TextEditFieldComponent,
        'relate.list': RelateDetailFieldComponent,
        'relate.edit': RelateEditFieldComponent,
        'relate.detail': RelateDetailFieldComponent,
        'relate.filter': RelateFilterFieldComponent,
        'fullname.list': FullNameDetailFieldsComponent,
        'fullname.detail': FullNameDetailFieldsComponent,
        'enum-radio.list': RadioEnumDetailFieldComponent,
        'enum-radio.detail': RadioEnumDetailFieldComponent,
        'enum-radio.edit': RadioEnumEditFieldComponent,
        'enum-dropdown.list': DropdownEnumDetailFieldComponent,
        'enum-dropdown.detail': DropdownEnumDetailFieldComponent,
        'enum-dropdown.edit': DropdownEnumEditFieldComponent,
        'enum-chips.list': EnumDetailFieldComponent,
        'enum-chips.detail': EnumDetailFieldComponent,
        'enum-chips.edit': EnumEditFieldComponent,
        'enum.list': EnumDetailFieldComponent,
        'enum.detail': EnumDetailFieldComponent,
        'enum.edit': EnumEditFieldComponent,
        'enum.filter': MultiEnumFilterFieldComponent,
        'multienum.list': MultiEnumDetailFieldComponent,
        'multienum.detail': MultiEnumDetailFieldComponent,
        'multienum.edit': MultiEnumEditFieldComponent,
        'multienum.filter': MultiEnumFilterFieldComponent,
        'dynamicenum.list': EnumDetailFieldComponent,
        'dynamicenum.detail': EnumDetailFieldComponent,
        'dynamicenum.edit': EnumEditFieldComponent,
        'dynamicenum.filter': MultiEnumEditFieldComponent,
        'boolean.list': BooleanDetailFieldComponent,
        'boolean.detail': BooleanDetailFieldComponent,
        'boolean.edit': BooleanEditFieldComponent,
        'boolean.filter': BooleanFilterFieldComponent,
        'bool.list': BooleanDetailFieldComponent,
        'bool.detail': BooleanDetailFieldComponent,
        'bool.edit': BooleanEditFieldComponent,
        'bool.filter': BooleanFilterFieldComponent,
        'html.detail': HtmlDetailFieldComponent
    };

    var BaseFieldRegistry = /** @class */ (function () {
        function BaseFieldRegistry() {
            this.init();
        }
        BaseFieldRegistry.prototype.register = function (module, type, mode, component) {
            this.map.addEntry(module, BaseFieldRegistry.getKey(type, mode), component);
        };
        BaseFieldRegistry.prototype.exclude = function (module, key) {
            this.map.excludeEntry(module, key);
        };
        BaseFieldRegistry.prototype.getDisplayType = function (module, type, displayType, mode) {
            var displayTypeKey = this.getDisplayTypeKey(type, displayType);
            if (displayType && this.has(module, displayTypeKey, mode)) {
                return this.get(module, displayTypeKey, mode);
            }
            return this.get(module, type, mode);
        };
        BaseFieldRegistry.prototype.get = function (module, type, mode) {
            var moduleFields = this.map.getGroupEntries(module);
            var key = BaseFieldRegistry.getKey(type, mode);
            if (moduleFields[key]) {
                return moduleFields[key];
            }
            if (mode === 'massupdate') {
                key = BaseFieldRegistry.getKey(type, 'edit');
                if (moduleFields[key]) {
                    return moduleFields[key];
                }
            }
            var defaultKey = BaseFieldRegistry.getKey('varchar', mode);
            return moduleFields[defaultKey];
        };
        BaseFieldRegistry.prototype.has = function (module, type, mode) {
            var moduleFields = this.map.getGroupEntries(module);
            var key = BaseFieldRegistry.getKey(type, mode);
            return !!moduleFields[key];
        };
        BaseFieldRegistry.getKey = function (type, mode) {
            return type + '.' + mode;
        };
        BaseFieldRegistry.prototype.getDisplayTypeKey = function (type, displayType) {
            if (!type || !displayType) {
                return '';
            }
            return type + '-' + displayType;
        };
        BaseFieldRegistry.prototype.init = function () {
            var _this = this;
            this.map = new i5.OverridableMap();
            Object.keys(this.getDefaultMap()).forEach(function (key) {
                var _a = __read(key.split('.', 2), 2), type = _a[0], mode = _a[1];
                _this.register('default', type, mode, _this.getDefaultMap()[key]);
            });
        };
        BaseFieldRegistry.prototype.getDefaultMap = function () {
            return {};
        };
        return BaseFieldRegistry;
    }());

    var StandardFieldRegistry = /** @class */ (function (_super) {
        __extends(StandardFieldRegistry, _super);
        function StandardFieldRegistry() {
            return _super.call(this) || this;
        }
        StandardFieldRegistry.prototype.getDefaultMap = function () {
            return baseViewFieldsMap;
        };
        return StandardFieldRegistry;
    }(BaseFieldRegistry));
    StandardFieldRegistry.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function StandardFieldRegistry_Factory() { return new StandardFieldRegistry(); }, token: StandardFieldRegistry, providedIn: "root" });
    StandardFieldRegistry.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    StandardFieldRegistry.ctorParameters = function () { return []; };

    var GroupFieldComponent = /** @class */ (function (_super) {
        __extends(GroupFieldComponent, _super);
        function GroupFieldComponent(typeFormatter, registry, logic) {
            var _this = _super.call(this, typeFormatter, logic) || this;
            _this.typeFormatter = typeFormatter;
            _this.registry = registry;
            _this.logic = logic;
            return _this;
        }
        GroupFieldComponent.prototype.getComponentType = function (type, definition) {
            var module = (this.record && this.record.module) || 'default';
            var displayType = (definition && definition.displayType) || '';
            return this.registry.getDisplayType(module, type, displayType, this.mode);
        };
        /**
         * Get the group fields from the record
         *
         * @returns {object} Field[]
         */
        GroupFieldComponent.prototype.getFields = function () {
            var _this = this;
            var fields = [];
            this.field.definition.layout.forEach(function (name) {
                if (!_this.record.fields[name] || _this.record.fields[name].display === 'none') {
                    return;
                }
                fields.push(_this.record.fields[name]);
            });
            return fields;
        };
        GroupFieldComponent.prototype.getModule = function () {
            if (!this.record) {
                return null;
            }
            return this.record.module;
        };
        /**
         * Get flex direction to be used
         *
         * @returns {string} direction
         */
        GroupFieldComponent.prototype.getDirection = function () {
            var direction = 'flex-column';
            if (this.field.definition.display === 'inline') {
                direction = 'flex-row';
            }
            return direction;
        };
        /**
         * Check if is configured
         *
         * @returns {boolean} is configured
         */
        GroupFieldComponent.prototype.isConfigured = function () {
            return this.hasDisplay() && this.hasLayout() && this.hasGroupFields();
        };
        GroupFieldComponent.prototype.showLabel = function (fieldName) {
            var definition = this.field.definition || null;
            var showLabel = definition.showLabel || null;
            if (!definition || !showLabel) {
                return false;
            }
            var showLabelOptions = definition.showLabel[this.mode] || null;
            // showLabel > viewMode not defined || defined without any values e.g. edit:
            if (!showLabelOptions || typeof (showLabelOptions) === 'undefined') {
                return false;
            }
            return (showLabelOptions.includes('*') || showLabelOptions.includes(fieldName));
        };
        GroupFieldComponent.prototype.isModeEnabled = function (mode, groupField) {
            var modes = groupField.definition.modes;
            if (!modes || modes.length < 1) {
                return true;
            }
            return modes.includes(mode);
        };
        /**
         * Check if groupFields are configured
         *
         * @returns {boolean} has groupFields
         */
        GroupFieldComponent.prototype.hasGroupFields = function () {
            return !!(this.field.definition.groupFields && Object.keys(this.field.definition.groupFields).length);
        };
        /**
         * Check if layout is configured
         *
         * @returns {boolean} has layout
         */
        GroupFieldComponent.prototype.hasLayout = function () {
            return !!(this.field.definition.layout && this.field.definition.layout.length);
        };
        /**
         * Check if display is configured
         *
         * @returns {boolean} has display
         */
        GroupFieldComponent.prototype.hasDisplay = function () {
            return !!this.field.definition.display;
        };
        return GroupFieldComponent;
    }(BaseFieldComponent));
    GroupFieldComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-group-field',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<ng-container *ngIf=\"!isConfigured()\">\n    <scrm-label labelKey=\"LBL_BAD_GROUP_FIELD_CONFIG\"></scrm-label>\n</ng-container>\n\n<ng-container *ngIf=\"isConfigured()\">\n    <div class=\"d-flex {{getDirection()}} justify-content-start align-items-start field-group h-100\">\n\n        <ng-container *ngFor=\"let groupField of getFields()\">\n\n            <div *ngIf=\"isModeEnabled(mode, groupField)\"\n                 [class.flex-fill]=\"mode ==='edit' && getDirection() === 'flex-row'\"\n                 class=\"field-group-item d-flex flex-column justify-content-end h-100 w-100\">\n\n                <!-- LABEL -->\n                <span *ngIf=\"groupField.labelKey && showLabel(groupField.definition.name)\"\n                      class=\"field-group-label pt-2 pr-1\">\n                    <label>\n                        <scrm-label [labelKey]=\"groupField.labelKey\" [module]=\"getModule()\"></scrm-label>\n                    </label>\n                </span>\n\n                <!-- VALUE -->\n                <span *ngIf=\"groupField.type\" class=\"field-group-field pr-1\">\n\n                    <scrm-dynamic-field [componentType]=\"getComponentType(groupField.type, groupField.definition)\"\n                                        [field]=\"groupField\"\n                                        [klass]=\"klass\"\n                                        [mode]=\"mode\"\n                                        [record]=\"record\"\n                                        [parent]=\"parent\"\n                                        [type]=\"groupField.type\">\n                    </scrm-dynamic-field>\n\n                </span>\n            </div>\n        </ng-container>\n\n    </div>\n</ng-container>\n\n\n"
                },] }
    ];
    GroupFieldComponent.ctorParameters = function () { return [
        { type: DataTypeFormatter },
        { type: StandardFieldRegistry },
        { type: FieldLogicManager }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var DynamicFieldComponent = /** @class */ (function () {
        function DynamicFieldComponent(navigation, moduleNameMapper, router) {
            this.navigation = navigation;
            this.moduleNameMapper = moduleNameMapper;
            this.router = router;
            this.record = null;
            this.parent = null;
            this.klass = null;
            this.class = 'dynamic-field';
        }
        Object.defineProperty(DynamicFieldComponent.prototype, "getRelateLink", {
            get: function () {
                if (this.field.definition.id_name && this.field.definition.module) {
                    var moduleName = this.moduleNameMapper.toFrontend(this.field.definition.module);
                    return this.navigation.getRecordRouterLink(moduleName, this.record.attributes[this.field.definition.id_name]);
                }
                return '';
            },
            enumerable: false,
            configurable: true
        });
        DynamicFieldComponent.prototype.ngOnInit = function () {
            this.setHostClass();
        };
        DynamicFieldComponent.prototype.isLink = function () {
            if (this.mode !== 'detail' && this.mode !== 'list') {
                return false;
            }
            if (!this.field || !this.record) {
                return false;
            }
            if (this.type === 'relate' && this.field.metadata && this.field.metadata.link !== false) {
                return true;
            }
            return !!(this.field.metadata && this.field.metadata.link);
        };
        DynamicFieldComponent.prototype.hasOnClick = function () {
            return !!(this.field && this.field.metadata && this.field.metadata.onClick);
        };
        DynamicFieldComponent.prototype.isEdit = function () {
            return this.mode === 'edit' || this.mode === 'filter';
        };
        DynamicFieldComponent.prototype.getLink = function () {
            if (this.type === 'relate') {
                return this.getRelateLink;
            }
            return this.navigation.getRecordRouterLink(this.record.module, this.record.id);
        };
        DynamicFieldComponent.prototype.getMessageContext = function (item, record) {
            var context = item && item.message && item.message.context || {};
            context.module = (record && record.module) || '';
            return context;
        };
        DynamicFieldComponent.prototype.getMessageLabelKey = function (item) {
            return (item && item.message && item.message.labelKey) || '';
        };
        DynamicFieldComponent.prototype.onClick = function () {
            if (this.field.metadata.onClick) {
                this.field.metadata.onClick(this.field, this.record);
                return;
            }
            this.router.navigateByUrl(this.getLink()).then();
            return false;
        };
        DynamicFieldComponent.prototype.setHostClass = function () {
            var classes = [];
            classes.push('dynamic-field');
            if (this.mode) {
                classes.push('dynamic-field-mode-' + this.mode);
            }
            if (this.type) {
                classes.push('dynamic-field-type-' + this.type);
            }
            if (this.field && this.field.name) {
                classes.push('dynamic-field-name-' + this.field.name);
            }
            this.class = classes.join(' ');
        };
        return DynamicFieldComponent;
    }());
    DynamicFieldComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-dynamic-field',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<ng-container *ngIf=\"hasOnClick()\">\n    <a (click)=\"onClick()\" class=\"clickable field-link\">\n        <ndc-dynamic\n            [ndcDynamicComponent]=\"componentType\"\n            [ndcDynamicInputs]=\"{\n                'mode': mode,\n                'field': field,\n                'klass': klass,\n                'record': record,\n                'parent': parent\n            }\"\n        ></ndc-dynamic>\n    </a>\n</ng-container>\n<ng-container *ngIf=\"isLink() && !hasOnClick()\">\n    <a [routerLink]=\"getLink()\" class=\"field-link\">\n        <ndc-dynamic\n            [ndcDynamicComponent]=\"componentType\"\n            [ndcDynamicInputs]=\"{\n                'mode': mode,\n                'field': field,\n                'klass': klass,\n                'record': record,\n                'parent': parent\n            }\"\n        ></ndc-dynamic>\n    </a>\n</ng-container>\n<ng-container *ngIf=\"!isLink() && !hasOnClick()\">\n    <ndc-dynamic\n        [ndcDynamicComponent]=\"componentType\"\n        [ndcDynamicInputs]=\"{\n            'mode': mode,\n            'field': field,\n            'klass': klass,\n            'record': record,\n            'parent': parent\n        }\"\n    ></ndc-dynamic>\n</ng-container>\n<ng-container *ngIf=\"isEdit() && field.formControl && field.formControl.errors\">\n    <ng-container *ngIf=\"field.formControl.invalid && field.formControl.touched\">\n        <div *ngFor=\"let item of field.formControl.errors | keyvalue\" class=\"invalid-feedback d-block\">\n            <scrm-dynamic-label [context]=\"getMessageContext(item.value, record)\"\n                                [fields]=\"{field: field}\"\n                                [labelKey]=\"getMessageLabelKey(item.value)\">\n            </scrm-dynamic-label>\n        </div>\n    </ng-container>\n</ng-container>\n"
                },] }
    ];
    DynamicFieldComponent.ctorParameters = function () { return [
        { type: ModuleNavigation },
        { type: ModuleNameMapper },
        { type: i2.Router }
    ]; };
    DynamicFieldComponent.propDecorators = {
        mode: [{ type: i0.Input, args: ['mode',] }],
        type: [{ type: i0.Input, args: ['type',] }],
        field: [{ type: i0.Input, args: ['field',] }],
        record: [{ type: i0.Input, args: ['record',] }],
        parent: [{ type: i0.Input, args: ['parent',] }],
        klass: [{ type: i0.Input, args: ['klass',] }],
        componentType: [{ type: i0.Input, args: ['componentType',] }],
        class: [{ type: i0.HostBinding, args: ['class',] }]
    };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var DynamicFieldModule = /** @class */ (function () {
        function DynamicFieldModule() {
        }
        return DynamicFieldModule;
    }());
    DynamicFieldModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [DynamicFieldComponent],
                    exports: [
                        DynamicFieldComponent
                    ],
                    imports: [
                        common.CommonModule,
                        i2.RouterModule,
                        DynamicLabelModule,
                        ngDynamicComponent.DynamicModule,
                    ]
                },] }
    ];

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var GroupFieldModule = /** @class */ (function () {
        function GroupFieldModule() {
        }
        return GroupFieldModule;
    }());
    GroupFieldModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [GroupFieldComponent],
                    imports: [
                        common.CommonModule,
                        LabelModule,
                        DynamicFieldModule
                    ]
                },] }
    ];

    var currencyValidator = function (formatter) { return (function (control) {
        var invalid = formatter.validateFloatUserFormat(control.value);
        return invalid ? {
            currencyValidator: {
                valid: false,
                format: formatter.getFloatUserFormatPattern(),
                message: {
                    labelKey: 'LBL_VALIDATION_ERROR_CURRENCY_FORMAT',
                    context: {
                        value: control.value,
                        expected: formatter.toUserFormat('1000.50')
                    }
                }
            },
        } : null;
    }); };
    var CurrencyValidator = /** @class */ (function () {
        function CurrencyValidator(formatter) {
            this.formatter = formatter;
        }
        CurrencyValidator.prototype.applies = function (record, viewField) {
            if (!viewField || !viewField.fieldDefinition) {
                return false;
            }
            return viewField.type === 'currency';
        };
        CurrencyValidator.prototype.getValidator = function (viewField) {
            if (!viewField || !viewField.fieldDefinition) {
                return [];
            }
            return [currencyValidator(this.formatter)];
        };
        return CurrencyValidator;
    }());
    CurrencyValidator.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function CurrencyValidator_Factory() { return new CurrencyValidator(i0__namespace.ɵɵinject(NumberFormatter)); }, token: CurrencyValidator, providedIn: "root" });
    CurrencyValidator.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    CurrencyValidator.ctorParameters = function () { return [
        { type: NumberFormatter }
    ]; };

    var dateValidator = function (formatter) { return (function (control) {
        var invalid = formatter.validateUserFormat(control.value);
        return invalid ? {
            invalidDate: {
                value: control.value,
                message: {
                    labelKey: 'LBL_VALIDATION_ERROR_DATE_FORMAT',
                    context: {
                        value: control.value,
                        expected: formatter.toUserFormat('2020-01-23')
                    }
                }
            },
        } : null;
    }); };
    var DateValidator = /** @class */ (function () {
        function DateValidator(formatter, utils) {
            this.formatter = formatter;
            this.utils = utils;
        }
        DateValidator.prototype.applies = function (record, viewField) {
            if (!viewField || !viewField.fieldDefinition) {
                return false;
            }
            return viewField.type === 'date';
        };
        DateValidator.prototype.getValidator = function (viewField) {
            if (!viewField || !viewField.fieldDefinition) {
                return [];
            }
            return [dateValidator(this.formatter)];
        };
        return DateValidator;
    }());
    DateValidator.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function DateValidator_Factory() { return new DateValidator(i0__namespace.ɵɵinject(DateFormatter), i0__namespace.ɵɵinject(FormControlUtils)); }, token: DateValidator, providedIn: "root" });
    DateValidator.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    DateValidator.ctorParameters = function () { return [
        { type: DateFormatter },
        { type: FormControlUtils }
    ]; };

    var dateTimeValidator = function (formatter) { return (function (control) {
        var invalid = formatter.validateUserFormat(control.value);
        return invalid ? {
            dateTimeValidator: {
                value: control.value,
                message: {
                    labelKey: 'LBL_VALIDATION_ERROR_DATETIME_FORMAT',
                    context: {
                        value: control.value,
                        expected: formatter.toUserFormat('2020-01-23 12:30:40')
                    }
                }
            },
        } : null;
    }); };
    var DateTimeValidator = /** @class */ (function () {
        function DateTimeValidator(formatter) {
            this.formatter = formatter;
        }
        DateTimeValidator.prototype.applies = function (record, viewField) {
            if (!viewField || !viewField.fieldDefinition) {
                return false;
            }
            return viewField.type === 'datetime';
        };
        DateTimeValidator.prototype.getValidator = function (viewField) {
            if (!viewField || !viewField.fieldDefinition) {
                return [];
            }
            return [dateTimeValidator(this.formatter)];
        };
        return DateTimeValidator;
    }());
    DateTimeValidator.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function DateTimeValidator_Factory() { return new DateTimeValidator(i0__namespace.ɵɵinject(DatetimeFormatter)); }, token: DateTimeValidator, providedIn: "root" });
    DateTimeValidator.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    DateTimeValidator.ctorParameters = function () { return [
        { type: DatetimeFormatter }
    ]; };

    var floatValidator = function (formatter) { return (function (control) {
        var invalid = formatter.validateFloatUserFormat(control.value);
        return invalid ? {
            floatValidator: {
                valid: false,
                format: formatter.getFloatUserFormatPattern(),
                message: {
                    labelKey: 'LBL_VALIDATION_ERROR_FLOAT_FORMAT',
                    context: {
                        value: control.value,
                        expected: formatter.toUserFormat('1000.50')
                    }
                }
            },
        } : null;
    }); };
    var FloatValidator = /** @class */ (function () {
        function FloatValidator(formatter) {
            this.formatter = formatter;
        }
        FloatValidator.prototype.applies = function (record, viewField) {
            if (!viewField || !viewField.fieldDefinition) {
                return false;
            }
            return viewField.type === 'float';
        };
        FloatValidator.prototype.getValidator = function (viewField) {
            if (!viewField || !viewField.fieldDefinition) {
                return [];
            }
            return [floatValidator(this.formatter)];
        };
        return FloatValidator;
    }());
    FloatValidator.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function FloatValidator_Factory() { return new FloatValidator(i0__namespace.ɵɵinject(NumberFormatter)); }, token: FloatValidator, providedIn: "root" });
    FloatValidator.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    FloatValidator.ctorParameters = function () { return [
        { type: NumberFormatter }
    ]; };

    var intValidator = function (formatter) { return (function (control) {
        var invalid = formatter.validateIntUserFormat(control.value);
        return invalid ? {
            intValidator: {
                valid: false,
                format: formatter.getIntUserFormatPattern(),
                message: {
                    labelKey: 'LBL_VALIDATION_ERROR_INT_FORMAT',
                    context: {
                        value: control.value,
                        expected: formatter.toUserFormat('1000')
                    }
                }
            },
        } : null;
    }); };
    var IntValidator = /** @class */ (function () {
        function IntValidator(formatter) {
            this.formatter = formatter;
        }
        IntValidator.prototype.applies = function (record, viewField) {
            if (!viewField || !viewField.fieldDefinition) {
                return false;
            }
            return viewField.type === 'int';
        };
        IntValidator.prototype.getValidator = function (viewField) {
            if (!viewField || !viewField.fieldDefinition) {
                return [];
            }
            return [intValidator(this.formatter)];
        };
        return IntValidator;
    }());
    IntValidator.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function IntValidator_Factory() { return new IntValidator(i0__namespace.ɵɵinject(NumberFormatter)); }, token: IntValidator, providedIn: "root" });
    IntValidator.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    IntValidator.ctorParameters = function () { return [
        { type: NumberFormatter }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var EmailFormatter = /** @class */ (function () {
        function EmailFormatter(formUtils) {
            this.formUtils = formUtils;
        }
        EmailFormatter.prototype.toUserFormat = function (value) {
            return value;
        };
        EmailFormatter.prototype.toInternalFormat = function (value) {
            return value;
        };
        EmailFormatter.prototype.getUserFormatPattern = function () {
            // eslint-disable-next-line max-len
            return /^(?=.{1,254}$)(?=.{1,64}@)[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;
        };
        EmailFormatter.prototype.validateUserFormat = function (inputValue) {
            var trimmedInputValue = this.formUtils.getTrimmedInputValue(inputValue);
            if (this.formUtils.isEmptyInputValue(trimmedInputValue)) {
                return false;
            }
            var regex = new RegExp(this.getUserFormatPattern());
            return !regex.test(trimmedInputValue);
        };
        return EmailFormatter;
    }());
    EmailFormatter.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function EmailFormatter_Factory() { return new EmailFormatter(i0__namespace.ɵɵinject(FormControlUtils)); }, token: EmailFormatter, providedIn: "root" });
    EmailFormatter.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    EmailFormatter.ctorParameters = function () { return [
        { type: FormControlUtils }
    ]; };

    var emailValidator = function (formatter) { return (function (control) {
        var invalid = formatter.validateUserFormat(control.value);
        return invalid ? {
            emailValidator: {
                valid: false,
                format: formatter.getUserFormatPattern(),
                message: {
                    labelKey: 'LBL_VALIDATION_ERROR_EMAIL_FORMAT',
                    context: {
                        value: control.value,
                        expected: 'example@example.org'
                    }
                }
            },
        } : null;
    }); };
    var EmailValidator = /** @class */ (function () {
        function EmailValidator(formatter) {
            this.formatter = formatter;
        }
        EmailValidator.prototype.applies = function (record, viewField) {
            if (!viewField || !viewField.fieldDefinition) {
                return false;
            }
            return viewField.type === 'email';
        };
        EmailValidator.prototype.getValidator = function (viewField) {
            if (!viewField || !viewField.fieldDefinition) {
                return [];
            }
            return [emailValidator(this.formatter)];
        };
        return EmailValidator;
    }());
    EmailValidator.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function EmailValidator_Factory() { return new EmailValidator(i0__namespace.ɵɵinject(EmailFormatter)); }, token: EmailValidator, providedIn: "root" });
    EmailValidator.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    EmailValidator.ctorParameters = function () { return [
        { type: EmailFormatter }
    ]; };

    var phoneValidator = function (formatter) { return (function (control) {
        var invalid = formatter.validateUserFormat(control.value);
        return invalid ? {
            phoneValidator: {
                valid: false,
                format: formatter.getUserFormatPattern(),
                message: {
                    labelKey: 'LBL_VALIDATION_ERROR_PHONE_FORMAT',
                    context: {
                        value: control.value
                    }
                }
            },
        } : null;
    }); };
    var PhoneValidator = /** @class */ (function () {
        function PhoneValidator(formatter) {
            this.formatter = formatter;
        }
        PhoneValidator.prototype.applies = function (record, viewField) {
            if (!viewField || !viewField.fieldDefinition) {
                return false;
            }
            return viewField.type === 'phone';
        };
        PhoneValidator.prototype.getValidator = function (viewField) {
            if (!viewField || !viewField.fieldDefinition) {
                return [];
            }
            return [phoneValidator(this.formatter)];
        };
        return PhoneValidator;
    }());
    PhoneValidator.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function PhoneValidator_Factory() { return new PhoneValidator(i0__namespace.ɵɵinject(PhoneFormatter)); }, token: PhoneValidator, providedIn: "root" });
    PhoneValidator.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    PhoneValidator.ctorParameters = function () { return [
        { type: PhoneFormatter }
    ]; };

    var minValidator = function (min) { return (function (control) {
        var result = forms.Validators.min(min)(control);
        if (result === null) {
            return null;
        }
        return {
            emailValidator: Object.assign(Object.assign({}, result), { message: {
                    labelKey: 'LBL_VALIDATION_ERROR_MIN',
                    context: {
                        value: control.value,
                        min: '' + min
                    }
                } })
        };
    }); };
    var maxValidator = function (max) { return (function (control) {
        var result = forms.Validators.max(max)(control);
        if (result === null) {
            return null;
        }
        return {
            emailValidator: Object.assign(Object.assign({}, result), { message: {
                    labelKey: 'LBL_VALIDATION_ERROR_MAX',
                    context: {
                        value: control.value,
                        max: '' + max
                    }
                } })
        };
    }); };
    var RangeValidator = /** @class */ (function () {
        function RangeValidator() {
        }
        RangeValidator.prototype.applies = function (record, viewField) {
            if (!viewField || !viewField.fieldDefinition) {
                return false;
            }
            var definition = viewField.fieldDefinition;
            return this.getRangeValidation(definition) !== null;
        };
        RangeValidator.prototype.getValidator = function (viewField) {
            if (!viewField || !viewField.fieldDefinition) {
                return [];
            }
            var validation = this.getRangeValidation(viewField.fieldDefinition);
            if (!validation) {
                return [];
            }
            var min = validation.min && parseInt('' + validation.min, 10);
            var max = validation.max && parseInt('' + validation.max, 10);
            var validations = [];
            if (isFinite(min)) {
                validations.push(minValidator(min));
            }
            if (isFinite(max)) {
                validations.push(maxValidator(max));
            }
            return validations;
        };
        RangeValidator.prototype.getRangeValidation = function (definition) {
            var _this = this;
            if (this.isRangeValidation(definition.validation)) {
                return definition.validation;
            }
            if (!definition.validations || !definition.validations.length) {
                return null;
            }
            var validation = null;
            definition.validations.some(function (entry) {
                validation = entry;
                return _this.isRangeValidation(entry);
            });
            return validation;
        };
        RangeValidator.prototype.isRangeValidation = function (validation) {
            return validation && validation.type === 'range';
        };
        return RangeValidator;
    }());
    RangeValidator.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function RangeValidator_Factory() { return new RangeValidator(); }, token: RangeValidator, providedIn: "root" });
    RangeValidator.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];

    var primaryEmailValidator = function (viewField, record) { return (function (control) {
        var name = viewField.name || '';
        if (!name || !record || !record.fields) {
            return null;
        }
        var field = record.fields[name] || {};
        var items = field.items;
        if (!field || !items || !items.length) {
            return null;
        }
        var count = 0;
        var activeItems = items.filter(function (item) { return !(item && item.attributes && item.attributes.deleted); });
        if (activeItems && activeItems.length < 1) {
            return null;
        }
        activeItems.some(function (item) {
            var emailField = (item.fields && item.fields['email-fields']) || {};
            var primary = (emailField.attributes && emailField.attributes['primary_address']) || null;
            if (!primary) {
                return false;
            }
            if (i5.isTrue(primary.value)) {
                count++;
            }
            return count > 1;
        });
        if (count == 1) {
            return null;
        }
        if (count == 0) {
            return {
                primaryEmailValidation: {
                    valid: false,
                    message: {
                        labelKey: 'LBL_NO_PRIMARY_EMAIL_VALIDATION_ERROR',
                        context: {}
                    }
                },
            };
        }
        return {
            primaryEmailValidation: {
                valid: false,
                message: {
                    labelKey: 'LBL_MULTIPLE_PRIMARY_EMAIL_VALIDATION_ERROR',
                    context: {}
                }
            },
        };
    }); };
    var PrimaryEmailValidator = /** @class */ (function () {
        function PrimaryEmailValidator() {
        }
        PrimaryEmailValidator.prototype.applies = function (record, viewField) {
            if (!viewField || !viewField.fieldDefinition) {
                return false;
            }
            var type = viewField.type || viewField.fieldDefinition.type || '';
            return type === 'line-items';
        };
        PrimaryEmailValidator.prototype.getValidator = function (viewField, record) {
            if (!viewField || !viewField.fieldDefinition || !record) {
                return [];
            }
            return [primaryEmailValidator(viewField, record)];
        };
        return PrimaryEmailValidator;
    }());
    PrimaryEmailValidator.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function PrimaryEmailValidator_Factory() { return new PrimaryEmailValidator(); }, token: PrimaryEmailValidator, providedIn: "root" });
    PrimaryEmailValidator.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    PrimaryEmailValidator.ctorParameters = function () { return []; };

    var duplicateEmailValidator = function (viewField, record) { return (function (control) {
        var name = viewField.name || '';
        if (!name || !record || !record.fields) {
            return null;
        }
        var field = record.fields[name] || {};
        var items = field.items;
        if (!field || !items || !items.length) {
            return null;
        }
        var addresses = {};
        var count = 0;
        var activeItems = items.filter(function (item) { return !(item && item.attributes && item.attributes.deleted); });
        if (activeItems && activeItems.length < 1) {
            return null;
        }
        activeItems.some(function (item) {
            var emailField = (item.fields && item.fields['email-fields']) || {};
            var emailAddress = (emailField.attributes && emailField.attributes['email_address']) || null;
            if (!emailAddress.value) {
                return false;
            }
            var upperCaseValue = ("" + emailAddress.value).toUpperCase();
            if (addresses[upperCaseValue]) {
                count++;
                return true;
            }
            addresses[upperCaseValue] = true;
            return count > 1;
        });
        if (count == 0) {
            return null;
        }
        return {
            duplicateEmailValidation: {
                valid: false,
                message: {
                    labelKey: 'LBL_DUPLICATE_EMAIL_VALIDATION_ERROR',
                    context: {}
                }
            },
        };
    }); };
    var DuplicateEmailValidator = /** @class */ (function () {
        function DuplicateEmailValidator() {
        }
        DuplicateEmailValidator.prototype.applies = function (record, viewField) {
            if (!viewField || !viewField.fieldDefinition) {
                return false;
            }
            var type = viewField.type || viewField.fieldDefinition.type || '';
            return type === 'line-items';
        };
        DuplicateEmailValidator.prototype.getValidator = function (viewField, record) {
            if (!viewField || !viewField.fieldDefinition || !record) {
                return [];
            }
            return [duplicateEmailValidator(viewField, record)];
        };
        return DuplicateEmailValidator;
    }());
    DuplicateEmailValidator.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function DuplicateEmailValidator_Factory() { return new DuplicateEmailValidator(); }, token: DuplicateEmailValidator, providedIn: "root" });
    DuplicateEmailValidator.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    DuplicateEmailValidator.ctorParameters = function () { return []; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var ValidationManager = /** @class */ (function () {
        function ValidationManager(requiredValidator, rangeValidator, currencyValidator, dateValidator, datetimeValidator, emailValidator, floatValidator, intValidator, phoneValidator, primaryEmailValidator, duplicateEmailValidator) {
            this.requiredValidator = requiredValidator;
            this.rangeValidator = rangeValidator;
            this.currencyValidator = currencyValidator;
            this.dateValidator = dateValidator;
            this.datetimeValidator = datetimeValidator;
            this.emailValidator = emailValidator;
            this.floatValidator = floatValidator;
            this.intValidator = intValidator;
            this.phoneValidator = phoneValidator;
            this.primaryEmailValidator = primaryEmailValidator;
            this.duplicateEmailValidator = duplicateEmailValidator;
            this.filterFieldExclusion = {
                default: {}
            };
            this.saveFieldExclusions = {
                default: {}
            };
            this.saveValidators = new i5.OverridableMap();
            this.asyncSaveValidators = new i5.OverridableMap();
            this.filterValidators = new i5.OverridableMap();
            this.saveValidators.addEntry('default', this.getKey('required', 'all'), requiredValidator);
            this.saveValidators.addEntry('default', this.getKey('range', 'all'), rangeValidator);
            this.saveValidators.addEntry('default', this.getKey('currency', 'all'), currencyValidator);
            this.saveValidators.addEntry('default', this.getKey('date', 'all'), dateValidator);
            this.saveValidators.addEntry('default', this.getKey('datetime', 'all'), datetimeValidator);
            this.saveValidators.addEntry('default', this.getKey('email', 'all'), emailValidator);
            this.saveValidators.addEntry('default', this.getKey('float', 'all'), floatValidator);
            this.saveValidators.addEntry('default', this.getKey('int', 'all'), intValidator);
            this.saveValidators.addEntry('default', this.getKey('phone', 'all'), phoneValidator);
            this.saveValidators.addEntry('default', this.getKey('primary-email', 'all'), primaryEmailValidator);
            this.saveValidators.addEntry('default', this.getKey('duplicate-email', 'all'), duplicateEmailValidator);
            this.filterValidators.addEntry('default', this.getKey('date', 'all'), dateValidator);
            this.filterValidators.addEntry('default', this.getKey('datetime', 'all'), datetimeValidator);
            this.filterValidators.addEntry('default', this.getKey('float', 'all'), floatValidator);
            this.filterValidators.addEntry('default', this.getKey('currency', 'all'), currencyValidator);
            this.filterValidators.addEntry('default', this.getKey('int', 'all'), intValidator);
            this.filterValidators.addEntry('default', this.getKey('phone', 'all'), phoneValidator);
        }
        ValidationManager.prototype.registerFieldSaveValidator = function (module, type, field, validator) {
            this.saveValidators.addEntry(module, this.getKey(type, field), validator);
        };
        ValidationManager.prototype.registerSaveValidator = function (module, type, validator) {
            this.saveValidators.addEntry(module, this.getKey(type, 'all'), validator);
        };
        ValidationManager.prototype.registerFieldFilterValidator = function (module, type, field, validator) {
            this.filterValidators.addEntry(module, this.getKey(type, field), validator);
        };
        ValidationManager.prototype.registerFilterValidator = function (module, type, validator) {
            this.filterValidators.addEntry(module, this.getKey(type, 'all'), validator);
        };
        ValidationManager.prototype.excludeFieldSaveValidator = function (module, type, field) {
            var moduleExclusions = this.saveFieldExclusions[module] || {};
            var key = this.getKey(type, field);
            moduleExclusions[key] = key;
            this.saveFieldExclusions[module] = moduleExclusions;
        };
        ValidationManager.prototype.excludeSaveValidator = function (module, type) {
            this.saveValidators.excludeEntry(module, this.getKey(type, 'all'));
        };
        ValidationManager.prototype.excludeFieldFilterValidator = function (module, type, field) {
            var moduleExclusions = this.filterFieldExclusion[module] || {};
            var key = this.getKey(type, field);
            moduleExclusions[key] = key;
            this.filterFieldExclusion[module] = moduleExclusions;
        };
        ValidationManager.prototype.excludeFilterValidator = function (module, type) {
            this.filterValidators.excludeEntry(module, this.getKey(type, 'all'));
        };
        ValidationManager.prototype.registerAsyncSaveValidator = function (module, type, validator) {
            this.asyncSaveValidators.addEntry(module, this.getKey(type, 'all'), validator);
        };
        ValidationManager.prototype.excludeAsyncSaveValidator = function (module, type) {
            this.saveValidators.excludeEntry(module, this.getKey(type, 'all'));
        };
        ValidationManager.prototype.getSaveValidations = function (module, viewField, record) {
            var entries = this.saveValidators.getGroupEntries(module);
            var exclusions = this.getExclusions(module, this.saveFieldExclusions);
            return this.filterValidations(entries, exclusions, record, viewField);
        };
        ValidationManager.prototype.getFilterValidations = function (module, viewField, record) {
            var entries = this.filterValidators.getGroupEntries(module);
            var exclusions = this.getExclusions(module, this.filterFieldExclusion);
            return this.filterValidations(entries, exclusions, record, viewField);
        };
        ValidationManager.prototype.getAsyncSaveValidations = function (module, viewField, record) {
            var validations = [];
            var entries = this.asyncSaveValidators.getGroupEntries(module);
            Object.keys(entries).forEach(function (validatorKey) {
                var validator = entries[validatorKey];
                if (validator.applies(record, viewField)) {
                    validations.push(validator.getValidator(viewField, record));
                }
            });
            return validations;
        };
        ValidationManager.prototype.getKey = function (type, field) {
            return type + "." + field;
        };
        ValidationManager.prototype.parseType = function (key) {
            var partsType = key.split('.') || [];
            return partsType[0] || '';
        };
        ValidationManager.prototype.getExclusions = function (module, exclusionMap) {
            var defaultExclusions = exclusionMap['default'] || {};
            var moduleExclusions = exclusionMap[module] || {};
            return Object.assign(Object.assign({}, defaultExclusions), moduleExclusions);
        };
        ValidationManager.prototype.filterValidations = function (entries, fieldExclusions, record, viewField) {
            var _this = this;
            var validations = [];
            Object.keys(entries).forEach(function (validatorKey) {
                var defaultTypeKey = _this.getKey(_this.parseType(validatorKey), viewField.name);
                if (fieldExclusions[validatorKey] || fieldExclusions[defaultTypeKey]) {
                    return;
                }
                var validator = entries[validatorKey];
                if (validator.applies(record, viewField)) {
                    validations = validations.concat(validator.getValidator(viewField, record));
                }
            });
            return validations;
        };
        return ValidationManager;
    }());
    ValidationManager.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function ValidationManager_Factory() { return new ValidationManager(i0__namespace.ɵɵinject(RequiredValidator), i0__namespace.ɵɵinject(RangeValidator), i0__namespace.ɵɵinject(CurrencyValidator), i0__namespace.ɵɵinject(DateValidator), i0__namespace.ɵɵinject(DateTimeValidator), i0__namespace.ɵɵinject(EmailValidator), i0__namespace.ɵɵinject(FloatValidator), i0__namespace.ɵɵinject(IntValidator), i0__namespace.ɵɵinject(PhoneValidator), i0__namespace.ɵɵinject(PrimaryEmailValidator), i0__namespace.ɵɵinject(DuplicateEmailValidator)); }, token: ValidationManager, providedIn: "root" });
    ValidationManager.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    ValidationManager.ctorParameters = function () { return [
        { type: RequiredValidator },
        { type: RangeValidator },
        { type: CurrencyValidator },
        { type: DateValidator },
        { type: DateTimeValidator },
        { type: EmailValidator },
        { type: FloatValidator },
        { type: IntValidator },
        { type: PhoneValidator },
        { type: PrimaryEmailValidator },
        { type: DuplicateEmailValidator }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var FieldBuilder = /** @class */ (function () {
        function FieldBuilder(validationManager, typeFormatter) {
            this.validationManager = validationManager;
            this.typeFormatter = typeFormatter;
        }
        /**
         * Build field
         *
         * @param {object} record Record
         * @param {object} viewField ViewFieldDefinition
         * @param {object} language LanguageStore
         * @returns {object}Field
         */
        FieldBuilder.prototype.buildField = function (record, viewField, language) {
            if (language === void 0) { language = null; }
            var definition = (viewField && viewField.fieldDefinition) || {};
            var _b = this.parseValue(viewField, definition, record), value = _b.value, valueList = _b.valueList, valueObject = _b.valueObject;
            var _c = this.getSaveValidators(record, viewField), validators = _c.validators, asyncValidators = _c.asyncValidators;
            return this.setupField(record.module, viewField, value, valueList, valueObject, record, definition, validators, asyncValidators, language);
        };
        FieldBuilder.prototype.getFieldLabel = function (label, module, language) {
            var languages = language.getLanguageStrings();
            return language.getFieldLabel(label, module, languages);
        };
        /**
         * Parse value from record
         *
         * @param {object} viewField ViewFieldDefinition
         * @param {object} definition FieldDefinition
         * @param {object} record Record
         * @returns {object} value object
         */
        FieldBuilder.prototype.parseValue = function (viewField, definition, record) {
            var type = (viewField && viewField.type) || '';
            var source = (definition && definition.source) || '';
            var rname = (definition && definition.rname) || 'name';
            var viewName = viewField.name || '';
            var value = null;
            var valueList = null;
            if (!viewName || !record.attributes[viewName]) {
                value = '';
            }
            else if (type === 'relate' && source === 'non-db' && rname !== '') {
                value = record.attributes[viewName][rname];
                var valueObject = record.attributes[viewName];
                return { value: value, valueList: valueList, valueObject: valueObject };
            }
            else {
                value = record.attributes[viewName];
            }
            if (type === 'line-items') {
                return { value: null, valueList: valueList };
            }
            if (Array.isArray(value)) {
                valueList = value;
                value = null;
            }
            if (!value && definition.default) {
                value = definition.default;
            }
            else if (value === null) {
                value = '';
            }
            return { value: value, valueList: valueList };
        };
        /**
         * Build and initialize field object
         *
         * @param {string} module to use
         * @param {object} viewField ViewFieldDefinition
         * @param {string} value string
         * @param {[]} valueList string[]
         * @param {} valueObject value object
         * @param {object} record Record
         * @param {object} definition FieldDefinition
         * @param {[]} validators ValidatorFn[]
         * @param {[]} asyncValidators AsyncValidatorFn[]
         * @param {object} language LanguageStore
         * @returns {object} BaseField
         */
        FieldBuilder.prototype.setupField = function (module, viewField, value, valueList, valueObject, record, definition, validators, asyncValidators, language) {
            var formattedValue = this.typeFormatter.toUserFormat(viewField.type, value, { mode: 'edit' });
            var metadata = viewField.metadata || definition.metadata || {};
            if (viewField.link) {
                metadata.link = viewField.link;
            }
            var field = new i5.BaseField();
            field.type = viewField.type || definition.type;
            field.name = viewField.name || definition.name || '';
            field.display = viewField.display || definition.display || 'default';
            field.defaultDisplay = field.display;
            field.value = value;
            field.metadata = metadata;
            field.definition = definition;
            field.labelKey = viewField.label || definition.vname || '';
            field.validators = validators;
            field.asyncValidators = asyncValidators;
            if (field.type === 'line-items') {
                field.valueObjectArray = record.attributes[field.name];
                field.itemFormArray = new forms.FormArray([], validators, asyncValidators);
                field.formControl = new forms.FormControl(formattedValue);
            }
            else {
                field.formControl = new forms.FormControl(formattedValue, validators, asyncValidators);
            }
            field.attributes = {};
            field.source = 'field';
            field.logic = viewField.logic || definition.logic || null;
            if (field.logic && Object.keys(field.logic).length) {
                var attributeDependencies_1 = {};
                var fieldDependencies_1 = {};
                Object.keys(field.logic).forEach(function (logicKey) {
                    var entry = field.logic[logicKey] || {};
                    if (!entry.params) {
                        return;
                    }
                    if (entry.params && entry.params.attributeDependencies) {
                        entry.params.attributeDependencies.forEach(function (dependency) {
                            var dependencyKey = dependency.field + '.' + dependency.attribute;
                            attributeDependencies_1[dependencyKey] = dependency;
                        });
                    }
                    if (entry.params && entry.params.fieldDependencies) {
                        entry.params.fieldDependencies.forEach(function (dependency) {
                            fieldDependencies_1[dependency] = dependency;
                        });
                    }
                });
                field.attributeDependencies = Object.keys(attributeDependencies_1).map(function (key) { return attributeDependencies_1[key]; });
                field.fieldDependencies = Object.keys(fieldDependencies_1);
            }
            if (valueList) {
                field.valueList = valueList;
            }
            if (valueObject) {
                field.valueObject = valueObject;
            }
            if (language) {
                field.label = this.getFieldLabel(viewField.label, module, language);
            }
            if (!field.labelKey && viewField.label) {
                field.labelKey = viewField.label;
            }
            return field;
        };
        /**
         * Get save validators for the given field definition
         *
         * @param {object} record Record
         * @param {object} viewField ViewFieldDefinition
         * @returns {object} Validator map
         */
        FieldBuilder.prototype.getSaveValidators = function (record, viewField) {
            var validators = this.validationManager.getSaveValidations(record.module, viewField, record);
            var asyncValidators = this.validationManager.getAsyncSaveValidations(record.module, viewField, record);
            return { validators: validators, asyncValidators: asyncValidators };
        };
        /**
         * Set attribute value on parent
         *
         * @param {object} record Record
         * @param {object} field Field
         * @param {string} name String
         * @param {object} definition FieldDefinition
         * @returns any
         */
        FieldBuilder.prototype.getParentValue = function (record, field, name, definition) {
            var _a;
            var valueParent = (_a = definition.valueParent) !== null && _a !== void 0 ? _a : 'field';
            var parent = valueParent === 'record' ? record : field;
            if (definition.valuePath) {
                return get__default['default'](parent, definition.valuePath, '');
            }
            if (valueParent === 'record') {
                return get__default['default'](record.attributes, name, '');
            }
            return get__default['default'](field.valueObject, name, '');
        };
        return FieldBuilder;
    }());
    FieldBuilder.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function FieldBuilder_Factory() { return new FieldBuilder(i0__namespace.ɵɵinject(ValidationManager), i0__namespace.ɵɵinject(DataTypeFormatter)); }, token: FieldBuilder, providedIn: "root" });
    FieldBuilder.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    FieldBuilder.ctorParameters = function () { return [
        { type: ValidationManager },
        { type: DataTypeFormatter }
    ]; };

    var GroupFieldBuilder = /** @class */ (function (_super) {
        __extends(GroupFieldBuilder, _super);
        function GroupFieldBuilder(validationManager, typeFormatter) {
            var _this = _super.call(this, validationManager, typeFormatter) || this;
            _this.validationManager = validationManager;
            _this.typeFormatter = typeFormatter;
            return _this;
        }
        /**
         * Create and add group fields to record
         *
         * @param {object} record Record
         * @param {object} viewField ViewFieldDefinition
         * @param {object} language LanguageStore
         * @param {function} isInitializedFunction
         * @param {function} buildFieldFunction
         * @param {function} addRecordFunction
         */
        GroupFieldBuilder.prototype.addGroupFields = function (record, viewField, language, isInitializedFunction, buildFieldFunction, addRecordFunction) {
            var definition = (viewField && viewField.fieldDefinition) || {};
            var groupFields = definition.groupFields || {};
            var groupFieldsKeys = Object.keys(groupFields);
            groupFieldsKeys.forEach(function (key) {
                var fieldDefinition = groupFields[key];
                if (isInitializedFunction(record, key)) {
                    return;
                }
                var groupViewField = {
                    name: fieldDefinition.name,
                    label: fieldDefinition.vname,
                    type: fieldDefinition.type,
                    fieldDefinition: fieldDefinition
                };
                var groupField = buildFieldFunction(record, groupViewField, language);
                addRecordFunction(record, fieldDefinition.name, groupField);
            });
        };
        return GroupFieldBuilder;
    }(FieldBuilder));
    GroupFieldBuilder.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function GroupFieldBuilder_Factory() { return new GroupFieldBuilder(i0__namespace.ɵɵinject(ValidationManager), i0__namespace.ɵɵinject(DataTypeFormatter)); }, token: GroupFieldBuilder, providedIn: "root" });
    GroupFieldBuilder.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    GroupFieldBuilder.ctorParameters = function () { return [
        { type: ValidationManager },
        { type: DataTypeFormatter }
    ]; };

    var AttributeBuilder = /** @class */ (function (_super) {
        __extends(AttributeBuilder, _super);
        function AttributeBuilder(validationManager, typeFormatter) {
            var _this = _super.call(this, validationManager, typeFormatter) || this;
            _this.validationManager = validationManager;
            _this.typeFormatter = typeFormatter;
            return _this;
        }
        /**
         * Create and add attributes fields to field
         *
         * @param {object} record Record
         * @param {object} fields FieldMap
         * @param {object} viewField ViewFieldDefinition
         * @param {object} language LanguageStore
         * @param {function} buildAttributeFunction
         * @param {function} addAttributeFunction
         */
        AttributeBuilder.prototype.addAttributes = function (record, fields, viewField, language, buildAttributeFunction, addAttributeFunction) {
            var _this = this;
            var fieldKeys = Object.keys(fields) || [];
            if (fieldKeys.length < 1) {
                return;
            }
            fieldKeys.forEach(function (key) {
                var field = fields[key];
                _this.addFieldAttributes(record, field, language, buildAttributeFunction, addAttributeFunction);
            });
        };
        /**
         * Create and add attributes fields to field
         *
         * @param {object} record Record
         * @param {object} field Field
         * @param {object} language LanguageStore
         * @param {function} buildAttributeFunction
         * @param {function} addAttributeFunction
         */
        AttributeBuilder.prototype.addFieldAttributes = function (record, field, language, buildAttributeFunction, addAttributeFunction) {
            var definition = (field && field.definition) || {};
            var attributes = definition.attributeFields || {};
            var attributeKeys = Object.keys(attributes);
            attributeKeys.forEach(function (key) {
                var attributeDefinition = attributes[key];
                if (!!field.attributes[key]) {
                    return;
                }
                var attributeViewField = {
                    name: attributeDefinition.name,
                    label: attributeDefinition.vname,
                    type: attributeDefinition.type,
                    fieldDefinition: attributeDefinition
                };
                var attributeField = buildAttributeFunction(record, field, attributeViewField, language);
                addAttributeFunction(record, field, attributeDefinition.name, attributeField);
            });
        };
        /**
         * Build field
         *
         * @param {object} record Record
         * @param {object} parentField Field
         * @param {object} viewField ViewFieldDefinition
         * @param {object} language LanguageStore
         * @returns {object} FieldAttribute
         */
        AttributeBuilder.prototype.buildAttribute = function (record, parentField, viewField, language) {
            if (language === void 0) { language = null; }
            var definition = (viewField && viewField.fieldDefinition) || {};
            var _a = this.parseAttributeValue(viewField, definition, record, parentField), value = _a.value, valueList = _a.valueList, valueObject = _a.valueObject;
            var _b = this.getSaveValidators(record, viewField), validators = _b.validators, asyncValidators = _b.asyncValidators;
            var field = this.setupField(record.module, viewField, value, valueList, valueObject, record, definition, validators, asyncValidators, language);
            var fieldAttribute = field;
            fieldAttribute.valuePath = definition.valuePath;
            fieldAttribute.valueParent = definition.valueParent;
            fieldAttribute.source = 'attribute';
            fieldAttribute.parentKey = parentField.name;
            return fieldAttribute;
        };
        /**
         * Add attribute to record
         *
         * @param {object} record Record
         * @param {object} field Field
         * @param {string} name string
         * @param {object} attribute FieldAttribute
         */
        AttributeBuilder.prototype.addAttributeToRecord = function (record, field, name, attribute) {
            if (!record || !name || !field || !attribute) {
                return;
            }
            field.attributes = field.attributes || {};
            field.attributes[name] = attribute;
            if (record.formGroup && attribute.formControl) {
                record.formGroup.addControl(name, attribute.formControl);
            }
        };
        /**
         * Parse attribute from field
         *
         * @param {object} viewField ViewFieldDefinition
         * @param {object} definition FieldDefinition
         * @param {object} record Record
         * @param {object} field Field
         * @returns {object} value object
         */
        AttributeBuilder.prototype.parseAttributeValue = function (viewField, definition, record, field) {
            var type = (viewField && viewField.type) || '';
            var source = (definition && definition.source) || '';
            var rname = (definition && definition.rname) || 'name';
            var viewName = viewField.name || '';
            var value;
            var valueList = null;
            if (type === 'relate' && source === 'non-db' && rname !== '') {
                value = this.getParentValue(record, field, viewName, definition)[rname];
                var valueObject = this.getParentValue(record, field, viewName, definition);
                return { value: value, valueList: valueList, valueObject: valueObject };
            }
            if (!viewName) {
                value = '';
            }
            else {
                value = this.getParentValue(record, field, viewName, definition);
            }
            value = this.getParentValue(record, field, viewName, definition);
            if (Array.isArray(value)) {
                return {
                    value: null,
                    valueList: value,
                    valueObject: null
                };
            }
            if (isObjectLike__default['default'](value)) {
                return {
                    value: null,
                    valueList: null,
                    valueObject: value
                };
            }
            return { value: value, valueList: null, valueObject: null };
        };
        return AttributeBuilder;
    }(FieldBuilder));
    AttributeBuilder.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function AttributeBuilder_Factory() { return new AttributeBuilder(i0__namespace.ɵɵinject(ValidationManager), i0__namespace.ɵɵinject(DataTypeFormatter)); }, token: AttributeBuilder, providedIn: "root" });
    AttributeBuilder.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    AttributeBuilder.ctorParameters = function () { return [
        { type: ValidationManager },
        { type: DataTypeFormatter }
    ]; };

    var FilterFieldBuilder = /** @class */ (function (_super) {
        __extends(FilterFieldBuilder, _super);
        function FilterFieldBuilder(validationManager, typeFormatter) {
            var _this = _super.call(this, validationManager, typeFormatter) || this;
            _this.validationManager = validationManager;
            _this.typeFormatter = typeFormatter;
            return _this;
        }
        /**
         * Build filter field
         *
         * @param {object} savedFilter SavedFilter
         * @param {object} viewField ViewFieldDefinition
         * @param {object} language LanguageStore
         * @returns {object} Field
         */
        FilterFieldBuilder.prototype.buildFilterField = function (savedFilter, viewField, language) {
            if (language === void 0) { language = null; }
            var definition = (viewField && viewField.fieldDefinition) || {};
            var _a = this.getFilterValidators(savedFilter, viewField), validators = _a.validators, asyncValidators = _a.asyncValidators;
            var field = this.setupField(savedFilter.searchModule, viewField, null, null, null, savedFilter, definition, validators, asyncValidators, language);
            field.criteria = this.initFieldFilter(savedFilter.criteria, viewField, field);
            return field;
        };
        /**
         * Get Filter Validators for given field definition
         *
         * @param {object} record  Record
         * @param {object} viewField ViewFieldDefinition
         * @returns {object} validator map
         */
        FilterFieldBuilder.prototype.getFilterValidators = function (record, viewField) {
            var validators = this.validationManager.getFilterValidations(record.searchModule, viewField, record);
            var asyncValidators = [];
            return { validators: validators, asyncValidators: asyncValidators };
        };
        /**
         * Init filter fields
         *
         * @param {object} searchCriteria to use
         * @param {object} viewField to init
         * @param {object} field to init
         * @returns {object} SearchCriteriaFieldFilter
         */
        FilterFieldBuilder.prototype.initFieldFilter = function (searchCriteria, viewField, field) {
            var fieldCriteria;
            var fieldName = viewField.name;
            var fieldType = viewField.type;
            if (fieldType === 'composite') {
                fieldType = field.definition.type;
            }
            if (searchCriteria.filters[fieldName]) {
                fieldCriteria = i5.deepClone(searchCriteria.filters[fieldName]);
            }
            else {
                fieldCriteria = {
                    field: fieldName,
                    fieldType: fieldType,
                    operator: '',
                    values: []
                };
            }
            return fieldCriteria;
        };
        /**
         * Is criteria field initialized in record
         *
         * @param {object} record Record
         * @param {string} fieldName field
         * @returns {boolean} isInitialized
         */
        FilterFieldBuilder.prototype.isCriteriaFieldInitialized = function (record, fieldName) {
            return !!record.criteriaFields[fieldName];
        };
        /**
         * Add field to SavedFilter
         *
         * @param {object} savedFilter SavedFilter
         * @param {string} name string
         * @param {object} field Field
         */
        FilterFieldBuilder.prototype.addToSavedFilter = function (savedFilter, name, field) {
            if (!savedFilter || !name || !field) {
                return;
            }
            if (!savedFilter.criteriaFields) {
                savedFilter.criteriaFields = {};
            }
            savedFilter.criteriaFields[name] = field;
            if (!savedFilter.criteria.filters) {
                savedFilter.criteria.filters = {};
            }
            savedFilter.criteria.filters[name] = field.criteria;
            if (savedFilter.criteriaFormGroup && field.formControl) {
                savedFilter.criteriaFormGroup.addControl(name, field.formControl);
            }
        };
        return FilterFieldBuilder;
    }(FieldBuilder));
    FilterFieldBuilder.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function FilterFieldBuilder_Factory() { return new FilterFieldBuilder(i0__namespace.ɵɵinject(ValidationManager), i0__namespace.ɵɵinject(DataTypeFormatter)); }, token: FilterFieldBuilder, providedIn: "root" });
    FilterFieldBuilder.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    FilterFieldBuilder.ctorParameters = function () { return [
        { type: ValidationManager },
        { type: DataTypeFormatter }
    ]; };

    var FilterAttributeBuilder = /** @class */ (function (_super) {
        __extends(FilterAttributeBuilder, _super);
        function FilterAttributeBuilder(validationManager, typeFormatter) {
            var _this = _super.call(this, validationManager, typeFormatter) || this;
            _this.validationManager = validationManager;
            _this.typeFormatter = typeFormatter;
            return _this;
        }
        /**
         * Build filter attribute
         *
         * @param {object} savedFilter SavedFilter
         * @param {object} parentField Field
         * @param {object} viewField ViewFieldDefinition
         * @param {object} language LanguageStore
         * @returns {object} FieldAttribute
         */
        FilterAttributeBuilder.prototype.buildFilterAttribute = function (savedFilter, parentField, viewField, language) {
            if (language === void 0) { language = null; }
            var definition = (viewField && viewField.fieldDefinition) || {};
            if (!definition.valuePath) {
                definition.valuePath = 'criteria.' + (viewField.name || definition.name);
            }
            var _a = this.parseFilterAttributeValue(viewField, definition, savedFilter, parentField), value = _a.value, valueList = _a.valueList, valueObject = _a.valueObject;
            var _b = this.getFilterValidators(savedFilter, viewField), validators = _b.validators, asyncValidators = _b.asyncValidators;
            var field = this.setupField(savedFilter.searchModule, viewField, value, valueList, valueObject, savedFilter, definition, validators, asyncValidators, language);
            var fieldAttribute = field;
            fieldAttribute.valuePath = definition.valuePath;
            fieldAttribute.source = 'attribute';
            fieldAttribute.parentKey = parentField.definition.name;
            return fieldAttribute;
        };
        /**
         * Add attribute to SavedFilter
         *
         * @param {object} savedFilter SavedFilter
         * @param {object} field Field
         * @param {string} name string
         * @param {object} attribute FieldAttribute
         */
        FilterAttributeBuilder.prototype.addAttributeToSavedFilter = function (savedFilter, field, name, attribute) {
            if (!savedFilter || !name || !field || !attribute) {
                return;
            }
            field.attributes = field.attributes || {};
            field.attributes[name] = attribute;
            if (savedFilter.criteriaFormGroup && attribute.formControl) {
                savedFilter.criteriaFormGroup.addControl(name, attribute.formControl);
            }
        };
        /**
         * Parse filter attribute from field
         *
         * @param {object} viewField ViewFieldDefinition
         * @param {object} definition FieldDefinition
         * @param {object} record Record
         * @param {object} field Field
         * @returns {object} value object
         */
        FilterAttributeBuilder.prototype.parseFilterAttributeValue = function (viewField, definition, record, field) {
            var viewName = viewField.name || '';
            var value;
            if (!viewName) {
                value = '';
            }
            else {
                value = this.getParentValue(record, field, viewName, definition);
            }
            if (Array.isArray(value)) {
                return {
                    value: null,
                    valueList: value,
                    valueObject: null
                };
            }
            if (isObjectLike__default['default'](value)) {
                return {
                    value: null,
                    valueList: null,
                    valueObject: value
                };
            }
            return { value: value, valueList: null, valueObject: null };
        };
        return FilterAttributeBuilder;
    }(FilterFieldBuilder));
    FilterAttributeBuilder.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function FilterAttributeBuilder_Factory() { return new FilterAttributeBuilder(i0__namespace.ɵɵinject(ValidationManager), i0__namespace.ɵɵinject(DataTypeFormatter)); }, token: FilterAttributeBuilder, providedIn: "root" });
    FilterAttributeBuilder.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    FilterAttributeBuilder.ctorParameters = function () { return [
        { type: ValidationManager },
        { type: DataTypeFormatter }
    ]; };

    var LineItemBuilder = /** @class */ (function (_super) {
        __extends(LineItemBuilder, _super);
        function LineItemBuilder(validationManager, typeFormatter) {
            var _this = _super.call(this, validationManager, typeFormatter) || this;
            _this.validationManager = validationManager;
            _this.typeFormatter = typeFormatter;
            return _this;
        }
        /**
         * Create and add attributes fields to field
         *
         * @param {object} record Record
         * @param {object} fields FieldMap
         * @param {object} viewField ViewFieldDefinition
         * @param {object} language LanguageStore
         * @param {function} buildLineItemFunction
         */
        LineItemBuilder.prototype.addLineItems = function (record, fields, viewField, language, buildLineItemFunction) {
            var _this = this;
            var fieldKeys = Object.keys(fields) || [];
            if (fieldKeys.length < 1) {
                return;
            }
            fieldKeys.forEach(function (key) {
                var field = fields[key];
                _this.addFieldLineItems(record, field, language, buildLineItemFunction);
            });
        };
        /**
         * Create and add attributes fields to field
         *
         * @param {object} record Record
         * @param {object} field Field
         * @param {object} language LanguageStore
         * @param {function} buildLineItemFunction
         */
        LineItemBuilder.prototype.addFieldLineItems = function (record, field, language, buildLineItemFunction) {
            var _this = this;
            var definition = (field && field.definition) || {};
            var type = (field && field.type) || '';
            var items = (field.valueObjectArray && field.valueObjectArray) || [];
            if (type !== 'line-items' || !items.length) {
                return;
            }
            var itemDefinition = (definition.lineItems && definition.lineItems.definition) || {};
            field.items = [];
            items.forEach(function (item) {
                _this.addLineItem(itemDefinition, item, buildLineItemFunction, language, record, field);
            });
        };
        /**
         * Build line item and and to record
         * @param {object} itemDefinition
         * @param {object }item
         * @param {object} buildLineItemFunction
         * @param {object} language
         * @param {object} parentRecord
         * @param {object} parentField
         */
        LineItemBuilder.prototype.addLineItem = function (itemDefinition, item, buildLineItemFunction, language, parentRecord, parentField) {
            var itemViewField = {
                name: itemDefinition.name,
                label: itemDefinition.vname,
                type: itemDefinition.type,
                fieldDefinition: i5.deepClone(itemDefinition)
            };
            var itemRecord = {
                id: item.id || '',
                type: item.type || '',
                module: item.module || '',
                attributes: item.attributes || {},
                fields: {},
                formGroup: new forms.FormGroup({})
            };
            buildLineItemFunction(itemRecord, itemViewField, language);
            parentField.itemFormArray.push(itemRecord.formGroup);
            parentField.items.push(itemRecord);
        };
        return LineItemBuilder;
    }(AttributeBuilder));
    LineItemBuilder.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function LineItemBuilder_Factory() { return new LineItemBuilder(i0__namespace.ɵɵinject(ValidationManager), i0__namespace.ɵɵinject(DataTypeFormatter)); }, token: LineItemBuilder, providedIn: "root" });
    LineItemBuilder.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    LineItemBuilder.ctorParameters = function () { return [
        { type: ValidationManager },
        { type: DataTypeFormatter }
    ]; };

    var FieldManager = /** @class */ (function () {
        function FieldManager(fieldBuilder, groupFieldBuilder, attributeBuilder, filterFieldBuilder, filterAttributeBuilder, lineItemBuilder, languageStore) {
            this.fieldBuilder = fieldBuilder;
            this.groupFieldBuilder = groupFieldBuilder;
            this.attributeBuilder = attributeBuilder;
            this.filterFieldBuilder = filterFieldBuilder;
            this.filterAttributeBuilder = filterAttributeBuilder;
            this.lineItemBuilder = lineItemBuilder;
            this.languageStore = languageStore;
        }
        /**
         * Build minimally initialised field object
         *
         * @param {string} type field type
         * @param {string} value field value
         * @returns {object} Field
         */
        FieldManager.prototype.buildShallowField = function (type, value) {
            return {
                type: type,
                value: value,
                definition: {
                    type: type
                }
            };
        };
        /**
         * Build and add field to record
         *
         * @param {object} record Record
         * @param {object} viewField ViewFieldDefinition
         * @param {object} language LanguageStore
         * @returns {object}Field
         */
        FieldManager.prototype.addField = function (record, viewField, language) {
            if (language === void 0) { language = null; }
            var field = this.fieldBuilder.buildField(record, viewField, language);
            this.addToRecord(record, viewField.name, field);
            this.groupFieldBuilder.addGroupFields(record, viewField, language, this.isFieldInitialized.bind(this), this.fieldBuilder.buildField.bind(this.fieldBuilder), this.addToRecord.bind(this));
            this.attributeBuilder.addAttributes(record, record.fields, viewField, language, this.attributeBuilder.buildAttribute.bind(this.attributeBuilder), this.attributeBuilder.addAttributeToRecord.bind(this.attributeBuilder));
            this.lineItemBuilder.addLineItems(record, record.fields, viewField, language, this.addField.bind(this));
            return field;
        };
        /**
         * Build and add filter field to record
         *
         * @param {object} record Record
         * @param {object} viewField ViewFieldDefinition
         * @param {object} language LanguageStore
         * @returns {object}Field
         */
        FieldManager.prototype.addFilterField = function (record, viewField, language) {
            if (language === void 0) { language = null; }
            var field = this.filterFieldBuilder.buildFilterField(record, viewField, language);
            this.filterFieldBuilder.addToSavedFilter(record, viewField.name, field);
            this.groupFieldBuilder.addGroupFields(record, viewField, language, this.filterFieldBuilder.isCriteriaFieldInitialized.bind(this.filterFieldBuilder), this.filterFieldBuilder.buildFilterField.bind(this.filterFieldBuilder), this.filterFieldBuilder.addToSavedFilter.bind(this.filterFieldBuilder));
            this.attributeBuilder.addAttributes(record, record.criteriaFields, viewField, language, this.filterAttributeBuilder.buildFilterAttribute.bind(this.filterAttributeBuilder), this.filterAttributeBuilder.addAttributeToSavedFilter.bind(this.filterAttributeBuilder));
            return field;
        };
        /**
         * Build line item and add to record
         * @param {object} itemDefinition
         * @param {object }item
         * @param {object} parentRecord
         * @param {object} parentField
         */
        FieldManager.prototype.addLineItem = function (itemDefinition, parentRecord, parentField, item) {
            if (item === void 0) { item = null; }
            if (!item) {
                item = {
                    id: '',
                    module: parentField.definition.module || '',
                    attributes: {},
                    fields: {},
                    formGroup: new forms.FormGroup({}),
                };
            }
            this.lineItemBuilder.addLineItem(itemDefinition, item, this.addField.bind(this), this.languageStore, parentRecord, parentField);
            parentField.itemFormArray.updateValueAndValidity();
        };
        /**
         * Remove line item
         * @param {object} parentField
         * @param index
         */
        FieldManager.prototype.removeLineItem = function (parentField, index) {
            var item = parentField.items[index];
            if (!item) {
                return;
            }
            if (item.id) {
                item.attributes.deleted = 1;
            }
            else {
                parentField.items = (index > -1) ? __spreadArray(__spreadArray([], __read(parentField.items.slice(0, index))), __read(parentField.items.slice(index + 1))) : parentField.items;
            }
            parentField.itemFormArray.clear();
            parentField.items.forEach(function (item) {
                var deleted = item && item.attributes && item.attributes.deleted;
                if (!item || deleted) {
                    return;
                }
                parentField.itemFormArray.push(item.formGroup);
            });
            parentField.itemFormArray.updateValueAndValidity();
        };
        /**
         * Add field to record
         *
         * @param {object} record Record
         * @param {string} name string
         * @param {object} field Field
         */
        FieldManager.prototype.addToRecord = function (record, name, field) {
            if (!record || !name || !field) {
                return;
            }
            if (!record.fields) {
                record.fields = {};
            }
            record.fields[name] = field;
            if (record.formGroup && field.itemFormArray) {
                record.formGroup.addControl(name + '-items', field.itemFormArray);
            }
            if (record.formGroup && field.formControl) {
                record.formGroup.addControl(name, field.formControl);
            }
        };
        /**
         * Is field initialized in record
         *
         * @param {object} record Record
         * @param {string} fieldName field
         * @returns {boolean} isInitialized
         */
        FieldManager.prototype.isFieldInitialized = function (record, fieldName) {
            return !!record.fields[fieldName];
        };
        return FieldManager;
    }());
    FieldManager.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function FieldManager_Factory() { return new FieldManager(i0__namespace.ɵɵinject(FieldBuilder), i0__namespace.ɵɵinject(GroupFieldBuilder), i0__namespace.ɵɵinject(AttributeBuilder), i0__namespace.ɵɵinject(FilterFieldBuilder), i0__namespace.ɵɵinject(FilterAttributeBuilder), i0__namespace.ɵɵinject(LineItemBuilder), i0__namespace.ɵɵinject(LanguageStore)); }, token: FieldManager, providedIn: "root" });
    FieldManager.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    FieldManager.ctorParameters = function () { return [
        { type: FieldBuilder },
        { type: GroupFieldBuilder },
        { type: AttributeBuilder },
        { type: FilterFieldBuilder },
        { type: FilterAttributeBuilder },
        { type: LineItemBuilder },
        { type: LanguageStore }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var RecordManager = /** @class */ (function () {
        function RecordManager(fieldManager, language) {
            this.fieldManager = fieldManager;
            this.language = language;
        }
        /**
         * Get empty record
         *
         * @param {string} module string
         * @returns {object} Record
         */
        RecordManager.prototype.buildEmptyRecord = function (module) {
            return {
                id: '',
                module: module,
                attributes: {
                    id: ''
                },
                fields: {},
                formGroup: new forms.FormGroup({}),
            };
        };
        /**
         * Init Fields
         *
         * @param {object} record to use
         * @param {object} viewFieldDefinitions to use
         * @returns {object} fields
         */
        RecordManager.prototype.initFields = function (record, viewFieldDefinitions) {
            var _this = this;
            if (!record.fields) {
                record.fields = {};
            }
            if (!record.formGroup) {
                record.formGroup = new forms.FormGroup({});
            }
            viewFieldDefinitions.forEach(function (viewField) {
                if (!viewField || !viewField.name) {
                    return;
                }
                _this.fieldManager.addField(record, viewField, _this.language);
            });
            return record.fields;
        };
        /**
         * Inject param fields
         *
         * @param {object} params Params
         * @param {object} record Record
         * @param {object} vardefs FieldDefinitionMap
         */
        RecordManager.prototype.injectParamFields = function (params, record, vardefs) {
            var _this = this;
            Object.keys(params).forEach(function (paramKey) {
                var _a;
                var definition = vardefs[paramKey];
                if (!i5.isVoid(definition)) {
                    var type = definition.type || '';
                    var idName = definition.id_name || '';
                    var name = definition.name || '';
                    var rname = definition.rname || '';
                    if (type === 'relate' && idName === name) {
                        record.attributes[paramKey] = params[paramKey];
                        return;
                    }
                    if (type === 'parent') {
                        var relate = {};
                        var rname_1 = 'name';
                        var idName_1 = 'parent_id';
                        var groupFieldKey = paramKey + '-group';
                        var groupField = (_a = vardefs[groupFieldKey]) !== null && _a !== void 0 ? _a : {};
                        var parentName = groupField.groupFields[paramKey];
                        if (parentName && parentName.rname) {
                            rname_1 = parentName.rname;
                        }
                        if (rname_1) {
                            relate[rname_1] = params[paramKey];
                        }
                        if (idName_1 && params[idName_1]) {
                            relate.id = params[idName_1];
                        }
                        record.attributes[paramKey] = relate;
                        return;
                    }
                    if (type === 'relate') {
                        var relate = {};
                        if (rname) {
                            relate[rname] = params[paramKey];
                        }
                        if (idName && params[idName]) {
                            relate.id = params[idName];
                        }
                        record.attributes[paramKey] = relate;
                        return;
                    }
                    record.attributes[paramKey] = params[paramKey];
                    return;
                }
                _this.handleLinkTypeRelationship(paramKey, params, vardefs, record);
            });
        };
        RecordManager.prototype.handleLinkTypeRelationship = function (paramKey, params, vardefs, record) {
            if (paramKey === 'return_relationship') {
                var returnRelationship_1 = params.return_relationship;
                if (!returnRelationship_1) {
                    return;
                }
                // check, on vardefs, if there is a field of type = link
                // with relationship equal to the value of return_relationship param
                Object.keys(vardefs).forEach(function (key) {
                    var _a, _b, _c, _d;
                    var vardef = vardefs[key];
                    var type = vardef.type || '';
                    if (type !== 'link') {
                        return;
                    }
                    var relationship = vardef.relationship || '';
                    if (!relationship) {
                        return;
                    }
                    if (relationship === returnRelationship_1) {
                        var linkFieldName = vardef.name;
                        var module = (_b = (_a = vardef.module) !== null && _a !== void 0 ? _a : params.return_module) !== null && _b !== void 0 ? _b : '';
                        if (!module) {
                            return;
                        }
                        var parentName = params.parent_name;
                        if (!parentName) {
                            return;
                        }
                        // name of the related parent field e.g. contact_id as injected
                        // in to field definition from its metadata definition
                        var relateId = (_c = vardef === null || vardef === void 0 ? void 0 : vardef.relationshipMetadata) === null || _c === void 0 ? void 0 : _c.related_id;
                        var parentId = (_d = params[relateId]) !== null && _d !== void 0 ? _d : '';
                        if (!parentId) {
                            return;
                        }
                        // add link type fields as line items to base record
                        record.attributes[linkFieldName] = [
                            {
                                id: parentId,
                                module: module,
                                attributes: {
                                    id: parentId,
                                    name: parentName
                                }
                            }
                        ];
                        return;
                    }
                });
            }
        };
        return RecordManager;
    }());
    RecordManager.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function RecordManager_Factory() { return new RecordManager(i0__namespace.ɵɵinject(FieldManager), i0__namespace.ɵɵinject(LanguageStore)); }, token: RecordManager, providedIn: "root" });
    RecordManager.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    RecordManager.ctorParameters = function () { return [
        { type: FieldManager },
        { type: LanguageStore }
    ]; };

    var BaseComposite = /** @class */ (function (_super) {
        __extends(BaseComposite, _super);
        function BaseComposite(typeFormatter, registry, recordManager, logic) {
            var _this = _super.call(this, typeFormatter, logic) || this;
            _this.typeFormatter = typeFormatter;
            _this.registry = registry;
            _this.recordManager = recordManager;
            _this.logic = logic;
            return _this;
        }
        BaseComposite.prototype.ngOnInit = function () {
            _super.prototype.ngOnInit.call(this);
            this.initUpdateParentSubscription();
        };
        BaseComposite.prototype.ngOnDestroy = function () {
            this.subs.forEach(function (sub) { return sub.unsubscribe(); });
        };
        BaseComposite.prototype.getComponentType = function (type, definition) {
            var module = (this.record && this.record.module) || 'default';
            var displayType = (definition && definition.displayType) || '';
            return this.registry.getDisplayType(module, type, displayType, this.getMode());
        };
        /**
         * Get the attribute fields from the field
         *
         * @returns {object} Field[]
         */
        BaseComposite.prototype.getAttributes = function () {
            var _this = this;
            var fields = [];
            this.field.definition.layout.forEach(function (name) {
                if (!_this.field.attributes[name] || _this.field.attributes[name].display === 'none') {
                    return;
                }
                fields.push(_this.field.attributes[name]);
            });
            return fields;
        };
        BaseComposite.prototype.getModule = function () {
            if (!this.record) {
                return null;
            }
            return this.record.module;
        };
        BaseComposite.prototype.getMode = function () {
            if (this.mode === 'filter') {
                return 'edit';
            }
            return this.mode;
        };
        /**
         * Get flex direction to be used
         *
         * @returns {string} direction
         */
        BaseComposite.prototype.getDirection = function () {
            var direction = 'flex-column';
            if (this.field.definition.display === 'inline') {
                direction = 'flex-row';
            }
            return direction;
        };
        /**
         * Check if is configured
         *
         * @returns {boolean} is configured
         */
        BaseComposite.prototype.isConfigured = function () {
            return this.hasDisplay() && this.hasLayout() && this.hasAttributes();
        };
        /**
         * Show label
         * @param attribute
         */
        BaseComposite.prototype.showLabel = function (attribute) {
            var definition = attribute.definition || null;
            var showLabel = definition.showLabel || null;
            var labelDisplay = (attribute.metadata && attribute.metadata.labelDisplay) || '';
            if (!definition || !showLabel || labelDisplay === 'hide') {
                return false;
            }
            return (showLabel.includes('*') || showLabel.includes(this.mode));
        };
        /**
         * Check if groupFields are configured
         *
         * @returns {boolean} has groupFields
         */
        BaseComposite.prototype.hasAttributes = function () {
            return !!(this.field.definition.attributeFields && !i5.emptyObject(this.field.definition.attributeFields));
        };
        /**
         * Check if layout is configured
         *
         * @returns {boolean} has layout
         */
        BaseComposite.prototype.hasLayout = function () {
            return !!(this.field.definition.layout && this.field.definition.layout.length);
        };
        /**
         * Check if display is configured
         *
         * @returns {boolean} has display
         */
        BaseComposite.prototype.hasDisplay = function () {
            return !!this.field.definition.display;
        };
        /**
         * Init Update parent subscription
         */
        BaseComposite.prototype.initUpdateParentSubscription = function () {
            var _this = this;
            if (!this.field.attributes) {
                return;
            }
            Object.keys(this.field.attributes).forEach(function (attributeKey) {
                var attribute = _this.field.attributes[attributeKey];
                if (!attribute.valueChanges$) {
                    return;
                }
                _this.subs.push(attribute.valueChanges$.subscribe(function (value) {
                    var val = value.valueObject || value.valueList || value.value;
                    _this.setValueOnParent(attribute, val);
                }));
            });
        };
        /**
         * Set attribute value on parent
         *
         * @param {object} attribute
         * @param {} value
         */
        BaseComposite.prototype.setValueOnParent = function (attribute, value) {
            var _a;
            var valueParent = (_a = attribute.valueParent) !== null && _a !== void 0 ? _a : 'field';
            var parent = valueParent === 'record' ? this.record : this.field;
            if (attribute.valuePath) {
                set__default['default'](parent, attribute.valuePath, value);
                return;
            }
            if (valueParent === 'record') {
                set__default['default'](this.record.attributes, attribute.name, value);
            }
            else {
                set__default['default'](this.field.valueObject, attribute.name, value);
            }
        };
        return BaseComposite;
    }(BaseFieldComponent));
    BaseComposite.decorators = [
        { type: i0.Component, args: [{ template: '' },] }
    ];
    BaseComposite.ctorParameters = function () { return [
        { type: DataTypeFormatter },
        { type: StandardFieldRegistry },
        { type: RecordManager },
        { type: FieldLogicManager }
    ]; };

    var CompositeComponent = /** @class */ (function (_super) {
        __extends(CompositeComponent, _super);
        function CompositeComponent(typeFormatter, registry, recordManager, logic) {
            var _this = _super.call(this, typeFormatter, registry, recordManager, logic) || this;
            _this.typeFormatter = typeFormatter;
            _this.registry = registry;
            _this.recordManager = recordManager;
            _this.logic = logic;
            return _this;
        }
        return CompositeComponent;
    }(BaseComposite));
    CompositeComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-composite-field',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<ng-container *ngIf=\"!isConfigured()\">\n    <scrm-label labelKey=\"LBL_BAD_GROUP_FIELD_CONFIG\"></scrm-label>\n</ng-container>\n\n<ng-container *ngIf=\"isConfigured()\">\n    <div class=\"d-flex {{getDirection()}} justify-content-start align-items-end field-group h-100 composite-field-wrapper\">\n\n        <div *ngFor=\"let attribute of getAttributes()\"\n             [class.flex-fill]=\"mode ==='edit' && getDirection() === 'flex-row'\"\n             [class.align-self-start]=\"getDirection() === 'flex-row' && attribute.labelKey && showLabel(attribute)\"\n             class=\"field-group-item d-flex flex-column justify-content-end h-100 w-100\">\n\n            <!-- LABEL -->\n            <span class=\"field-group-label pt-2 pr-1\">\n                <label *ngIf=\"attribute.labelKey && showLabel(attribute)\">\n                    <scrm-label [labelKey]=\"attribute.labelKey\" [module]=\"getModule()\"></scrm-label>\n                </label>\n            </span>\n\n            <!-- VALUE -->\n            <span *ngIf=\"attribute.type\" class=\"field-group-field pr-1 pb-1 composite-field\">\n\n                <scrm-dynamic-field [componentType]=\"getComponentType(attribute.type, attribute.definition)\"\n                                    [field]=\"attribute\"\n                                    [klass]=\"klass\"\n                                    [mode]=\"getMode()\"\n                                    [record]=\"record\"\n                                    [parent]=\"parent\"\n                                    [type]=\"attribute.type\">\n                </scrm-dynamic-field>\n\n            </span>\n        </div>\n    </div>\n</ng-container>\n"
                },] }
    ];
    CompositeComponent.ctorParameters = function () { return [
        { type: DataTypeFormatter },
        { type: StandardFieldRegistry },
        { type: RecordManager },
        { type: FieldLogicManager }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var CompositeModule = /** @class */ (function () {
        function CompositeModule() {
        }
        return CompositeModule;
    }());
    CompositeModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [CompositeComponent, BaseComposite],
                    imports: [
                        common.CommonModule,
                        LabelModule,
                        DynamicFieldModule,
                    ]
                },] }
    ];

    var fieldModules = __spreadArray(__spreadArray([], __read(baseFieldModules)), [
        GroupFieldModule,
        CompositeModule
    ]);
    var fieldComponents = __spreadArray(__spreadArray([], __read(baseFieldComponents)), [
        GroupFieldComponent,
        CompositeComponent
    ]);
    var viewFieldsMap = Object.assign(Object.assign({}, baseViewFieldsMap), { 'grouped-field.list': GroupFieldComponent, 'grouped-field.detail': GroupFieldComponent, 'grouped-field.edit': GroupFieldComponent, 'grouped-field.filter': GroupFieldComponent, 'composite.list': CompositeComponent, 'composite.detail': CompositeComponent, 'composite.edit': CompositeComponent, 'composite.filter': CompositeComponent });

    var FieldRegistry = /** @class */ (function (_super) {
        __extends(FieldRegistry, _super);
        function FieldRegistry() {
            return _super.call(this) || this;
        }
        FieldRegistry.prototype.getDefaultMap = function () {
            return viewFieldsMap;
        };
        return FieldRegistry;
    }(BaseFieldRegistry));
    FieldRegistry.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function FieldRegistry_Factory() { return new FieldRegistry(); }, token: FieldRegistry, providedIn: "root" });
    FieldRegistry.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    FieldRegistry.ctorParameters = function () { return []; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var FieldComponent = /** @class */ (function () {
        function FieldComponent(registry) {
            this.registry = registry;
            this.record = null;
            this.klass = null;
            this.class = 'field';
            this.map = viewFieldsMap;
        }
        FieldComponent.prototype.ngOnInit = function () {
            this.setHostClass();
        };
        Object.defineProperty(FieldComponent.prototype, "componentMode", {
            get: function () {
                var mode = this.mode;
                if (mode === 'create') {
                    mode = 'edit';
                }
                if (mode === 'edit' && this.field.display && this.field.display === 'readonly') {
                    mode = 'detail';
                }
                return mode;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(FieldComponent.prototype, "componentType", {
            get: function () {
                var module = (this.record && this.record.module) || 'default';
                var displayType = (this.field.definition && this.field.definition.displayType) || '';
                return this.registry.getDisplayType(module, this.type, displayType, this.componentMode);
            },
            enumerable: false,
            configurable: true
        });
        FieldComponent.prototype.setHostClass = function () {
            var classes = [];
            classes.push('field');
            if (this.mode) {
                classes.push('field-mode-' + this.mode);
            }
            if (this.type) {
                classes.push('field-type-' + this.type);
            }
            if (this.field && this.field.name) {
                classes.push('field-name-' + this.field.name);
            }
            this.class = classes.join(' ');
        };
        return FieldComponent;
    }());
    FieldComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-field',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<ng-container *ngIf=\"field && field.display !== 'none'\">\n    <scrm-dynamic-field *ngIf=\"type !== 'line-items'\"\n                        [componentType]=\"componentType\"\n                        [field]=\"field\"\n                        [klass]=\"klass\"\n                        [mode]=\"componentMode\"\n                        [record]=\"record\"\n                        [parent]=\"record\"\n                        [type]=\"type\">\n    </scrm-dynamic-field>\n    <scrm-line-items-field *ngIf=\"type === 'line-items'\"\n                           [field]=\"field\"\n                           [klass]=\"klass\"\n                           [mode]=\"componentMode\"\n                           [record]=\"record\"\n                           [parent]=\"record\">\n    </scrm-line-items-field>\n</ng-container>\n\n"
                },] }
    ];
    FieldComponent.ctorParameters = function () { return [
        { type: FieldRegistry }
    ]; };
    FieldComponent.propDecorators = {
        mode: [{ type: i0.Input, args: ['mode',] }],
        type: [{ type: i0.Input, args: ['type',] }],
        field: [{ type: i0.Input, args: ['field',] }],
        record: [{ type: i0.Input, args: ['record',] }],
        klass: [{ type: i0.Input, args: ['klass',] }],
        class: [{ type: i0.HostBinding, args: ['class',] }]
    };

    var BaseLineItemsComponent = /** @class */ (function (_super) {
        __extends(BaseLineItemsComponent, _super);
        function BaseLineItemsComponent(typeFormatter, registry, recordManager, logic, fieldManager) {
            var _this = _super.call(this, typeFormatter, logic) || this;
            _this.typeFormatter = typeFormatter;
            _this.registry = registry;
            _this.recordManager = recordManager;
            _this.logic = logic;
            _this.fieldManager = fieldManager;
            return _this;
        }
        BaseLineItemsComponent.prototype.ngOnInit = function () {
            _super.prototype.ngOnInit.call(this);
            this.initUpdateParentSubscription();
        };
        BaseLineItemsComponent.prototype.ngOnDestroy = function () {
            this.subs.forEach(function (sub) { return sub.unsubscribe(); });
        };
        /**
         * Get component type
         * @param {string} type
         * @param {FieldDefinition} definition
         * @returns {}
         */
        BaseLineItemsComponent.prototype.getComponentType = function (type, definition) {
            var module = (this.record && this.record.module) || 'default';
            var displayType = (definition && definition.displayType) || '';
            return this.registry.getDisplayType(module, type, displayType, this.getMode());
        };
        /**
         * Get the list of items
         *
         * @returns {object} Record[]
         */
        BaseLineItemsComponent.prototype.getItems = function () {
            var _this = this;
            this.field.items = this.field.items || [];
            var definition = (this.field && this.field.definition && this.field.definition.lineItems) || {};
            var items = this.field.items || [];
            var activeItems = items && items.filter(function (item) { return !(item && item.attributes && item.attributes.deleted); });
            activeItems.forEach(function (item, index) {
                var show = true;
                if (definition.labelOnFirstLine && index > 0) {
                    show = false;
                }
                _this.setAttributeLabelDisplay(item, show);
            });
            return this.field.items;
        };
        /**
         * Get the fields for the item record
         *
         * @param {Record} item
         * @returns {object} Field[]
         */
        BaseLineItemsComponent.prototype.getItemFields = function (item) {
            var fields = item.fields || {};
            return Object.keys(fields).map(function (key) { return fields[key]; });
        };
        /**
         * Remove item from array
         *
         * @param {number} index
         * @return {void}
         */
        BaseLineItemsComponent.prototype.removeItem = function (index) {
            this.fieldManager.removeLineItem(this.field, index);
            this.updateItems(this.field.items);
            this.triggerLineActionEvents(i5.LineActionEvent.onLineItemRemove);
        };
        /**
         * Add item to array
         *
         * @return {void}
         */
        BaseLineItemsComponent.prototype.addEmptyItem = function () {
            var itemDefinition = (this.field.definition.lineItems && this.field.definition.lineItems.definition) || {};
            this.fieldManager.addLineItem(itemDefinition, this.record, this.field);
            this.triggerLineActionEvents(i5.LineActionEvent.onLineItemAdd);
        };
        /**
         * Update items
         *
         * @param {Record[]} items
         * @return {void}
         */
        BaseLineItemsComponent.prototype.updateItems = function (items) {
            this.field.items = items;
        };
        /**
         * Get module
         *
         * @return {string}
         */
        BaseLineItemsComponent.prototype.getModule = function () {
            if (!this.record) {
                return null;
            }
            return this.record.module;
        };
        /**
         * Get Mode
         *
         * @return {string}
         */
        BaseLineItemsComponent.prototype.getMode = function () {
            if (this.mode === 'filter') {
                return 'edit';
            }
            return this.mode;
        };
        /**
         * Get flex direction to be used
         *
         * @returns {string} direction
         */
        BaseLineItemsComponent.prototype.getDirection = function () {
            var direction = 'flex-column';
            if (this.field.definition.display === 'inline') {
                direction = 'flex-row';
            }
            return direction;
        };
        /**
         * Check if is configured
         *
         * @returns {boolean} is configured
         */
        BaseLineItemsComponent.prototype.isConfigured = function () {
            return this.hasItemConfig();
        };
        /**
         * Check if its editable
         */
        BaseLineItemsComponent.prototype.isEditable = function () {
            return i5.isEditable(this.mode);
        };
        /**
         * Show label
         *
         * @param {FieldAttribute} attribute
         * @returns {boolean}
         */
        BaseLineItemsComponent.prototype.showLabel = function (attribute) {
            var definition = attribute.definition || null;
            var showLabel = definition.showLabel || null;
            if (!definition || !showLabel) {
                return false;
            }
            return (showLabel.includes('*') || showLabel.includes(this.mode));
        };
        /**
         * Get message context
         *
         * @param {} item
         * @param {Record} record
         * @return {object} StringMap
         */
        BaseLineItemsComponent.prototype.getMessageContext = function (item, record) {
            var context = item && item.message && item.message.context || {};
            context.module = (record && record.module) || '';
            return context;
        };
        /**
         * Get message label key
         *
         * @param {} item
         * @return {string}
         */
        BaseLineItemsComponent.prototype.getMessageLabelKey = function (item) {
            return (item && item.message && item.message.labelKey) || '';
        };
        /**
         * Check if groupFields are configured
         *
         * @returns {boolean} has groupFields
         */
        BaseLineItemsComponent.prototype.hasItemConfig = function () {
            return !!(this.field.definition.lineItems && this.field.definition.lineItems.definition);
        };
        /**
         * Init Update parent subscription
         */
        BaseLineItemsComponent.prototype.initUpdateParentSubscription = function () {
            var _this = this;
            if (!this.field.attributes) {
                return;
            }
            Object.keys(this.field.attributes).forEach(function (attributeKey) {
                var attribute = _this.field.attributes[attributeKey];
                if (!attribute.valueChanges$) {
                    return;
                }
                _this.subs.push(attribute.valueChanges$.subscribe(function (value) {
                    var val = value.valueObject || value.valueList || value.value;
                    _this.setValueOnParent(attribute, val);
                }));
            });
        };
        /**
         * Set attribute value on parent
         *
         * @param {object} attribute
         * @param {} value
         * @returns {void}
         */
        BaseLineItemsComponent.prototype.setValueOnParent = function (attribute, value) {
            if (attribute.valuePath) {
                set__default['default'](this.field, attribute.valuePath, value);
                return;
            }
            set__default['default'](this.field.valueObject, attribute.name, value);
        };
        /**
         * Set attribute label display
         *
         * @param {object} itemRecord
         * @param {boolean} showLabel
         * @returns {void}
         */
        BaseLineItemsComponent.prototype.setAttributeLabelDisplay = function (itemRecord, showLabel) {
            var subfields = itemRecord.fields || {};
            Object.keys(subfields).forEach(function (subFieldKey) {
                var subField = subfields[subFieldKey];
                if (subField.type !== 'composite') {
                    return;
                }
                var subFieldAttributes = subField.attributes || {};
                Object.keys(subFieldAttributes).forEach(function (subFieldAttributeKey) {
                    var subFieldAttribute = subFieldAttributes[subFieldAttributeKey];
                    var metadata = subFieldAttribute.metadata || {};
                    metadata.labelDisplay = !showLabel ? 'hide' : 'default';
                    subFieldAttribute.metadata = metadata;
                });
            });
        };
        /**
         * Check and if enabled, Run custom field logic on line action events
         * e.g. on line items row add/remove and so on as required
         *
         * @param {LineActionEvent} lineActionEvent
         * @returns {void}
         */
        BaseLineItemsComponent.prototype.triggerLineActionEvents = function (lineActionEvent) {
            var _this = this;
            var _a;
            var fieldLogics = ((_a = this.field) === null || _a === void 0 ? void 0 : _a.logic) || {};
            if (i5.emptyObject(fieldLogics)) {
                return;
            }
            Object.keys(fieldLogics).forEach(function (logicKey) {
                var _a, _b;
                var fieldLogic = fieldLogics[logicKey] || null;
                var onEvent = (_b = (_a = fieldLogic === null || fieldLogic === void 0 ? void 0 : fieldLogic.params) === null || _a === void 0 ? void 0 : _a.triggerOnEvents) === null || _b === void 0 ? void 0 : _b[lineActionEvent];
                if (i5.isTrue(onEvent)) {
                    _this.logic.runLogic(_this.field, _this.mode, _this.record);
                }
            });
        };
        return BaseLineItemsComponent;
    }(BaseFieldComponent));
    BaseLineItemsComponent.decorators = [
        { type: i0.Component, args: [{ template: '' },] }
    ];
    BaseLineItemsComponent.ctorParameters = function () { return [
        { type: DataTypeFormatter },
        { type: FieldRegistry },
        { type: RecordManager },
        { type: FieldLogicManager },
        { type: FieldManager }
    ]; };

    var LineItemsComponent = /** @class */ (function (_super) {
        __extends(LineItemsComponent, _super);
        function LineItemsComponent(typeFormatter, registry, recordManager, logic, fieldManager) {
            var _this = _super.call(this, typeFormatter, registry, recordManager, logic, fieldManager) || this;
            _this.typeFormatter = typeFormatter;
            _this.registry = registry;
            _this.recordManager = recordManager;
            _this.logic = logic;
            _this.fieldManager = fieldManager;
            return _this;
        }
        /**
         * Add item button config
         * @returns {object} ButtonInterface
         */
        LineItemsComponent.prototype.getAddItemButton = function () {
            var _this = this;
            return {
                klass: 'btn btn-sm btn-outline-secondary m-0 border-0',
                icon: 'plus',
                onClick: function () {
                    _this.addEmptyItem();
                },
            };
        };
        /**
         * Remove item button config
         * @param {object} item
         * @param {number} index
         * @returns {object} ButtonInterface
         */
        LineItemsComponent.prototype.getRemoveItemButton = function (item, index) {
            var _this = this;
            return {
                klass: 'btn btn-sm btn-outline-secondary m-0 border-0',
                icon: 'minimise',
                onClick: function () {
                    _this.removeItem(index);
                },
            };
        };
        return LineItemsComponent;
    }(BaseLineItemsComponent));
    LineItemsComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-line-items-field',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<ng-container *ngIf=\"!isConfigured()\">\n    <scrm-label labelKey=\"LBL_LINE_ITEMS_FIELD_CONFIG\"></scrm-label>\n</ng-container>\n\n<ng-container *ngIf=\"isConfigured()\">\n    <div class=\"line-items d-flex flex-column {{field.type}} {{field.name}}\">\n\n        <div class=\"d-flex {{getDirection()}} justify-content-start align-items-end line-item h-100\">\n            <ng-container *ngFor=\"let item of getItems(); index as i\">\n                <div *ngIf=\"!(item && item.attributes && item.attributes.deleted)\"\n                     class=\"d-flex flex-row line-item-entry w-100 align-items-end\">\n\n                    <div class=\"flex-grow-1 line-item-entry-composite\">\n                        <div *ngFor=\"let itemField of getItemFields(item)\"\n                             class=\"{{itemField.type}} {{itemField.name}}\">\n                            <scrm-dynamic-field [componentType]=\"getComponentType(itemField.type, itemField.definition)\"\n                                                [field]=\"itemField\"\n                                                [klass]=\"klass\"\n                                                [mode]=\"mode\"\n                                                [record]=\"item\"\n                                                [parent]=\"parent\"\n                                                [type]=\"itemField.type\">\n                            </scrm-dynamic-field>\n                        </div>\n                    </div>\n\n                    <div class=\"line-item-entry-buttons mb-1\">\n                        <scrm-button *ngIf=\"isEditable()\" [config]=\"getRemoveItemButton(item, i)\">\n                        </scrm-button>\n                    </div>\n                </div>\n            </ng-container>\n\n\n        </div>\n        <div class=\"line-item-buttons d-flex justify-content-end mt-1\">\n            <scrm-button *ngIf=\"isEditable()\" [config]=\"getAddItemButton()\">\n            </scrm-button>\n        </div>\n\n        <ng-container *ngIf=\"isEditable() && field.itemFormArray && field.itemFormArray.errors\">\n            <ng-container *ngIf=\"field.itemFormArray.invalid\">\n                <div *ngFor=\"let item of field.itemFormArray.errors | keyvalue\" class=\"invalid-feedback d-block\">\n                    <scrm-dynamic-label [context]=\"getMessageContext(item.value, record)\"\n                                        [fields]=\"{field: field}\"\n                                        [labelKey]=\"getMessageLabelKey(item.value)\">\n                    </scrm-dynamic-label>\n                </div>\n            </ng-container>\n        </ng-container>\n    </div>\n</ng-container>\n"
                },] }
    ];
    LineItemsComponent.ctorParameters = function () { return [
        { type: DataTypeFormatter },
        { type: FieldRegistry },
        { type: RecordManager },
        { type: FieldLogicManager },
        { type: FieldManager }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var LineItemsModule = /** @class */ (function () {
        function LineItemsModule() {
        }
        return LineItemsModule;
    }());
    LineItemsModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [LineItemsComponent, BaseLineItemsComponent],
                    exports: [
                        LineItemsComponent
                    ],
                    imports: [
                        common.CommonModule,
                        LabelModule,
                        DynamicFieldModule,
                        ButtonModule,
                        DynamicLabelModule,
                    ]
                },] }
    ];

    var FieldModule = /** @class */ (function () {
        function FieldModule() {
        }
        return FieldModule;
    }());
    FieldModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [
                        FieldComponent,
                    ],
                    exports: [
                        FieldComponent,
                    ],
                    imports: __spreadArray(__spreadArray([], __read(fieldModules)), [
                        common.CommonModule,
                        DynamicFieldModule,
                        LineItemsModule
                    ]),
                    schemas: [i0.CUSTOM_ELEMENTS_SCHEMA]
                },] }
    ];

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var FieldGridModule = /** @class */ (function () {
        function FieldGridModule() {
        }
        return FieldGridModule;
    }());
    FieldGridModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [FieldGridComponent],
                    exports: [
                        FieldGridComponent
                    ],
                    imports: [
                        common.CommonModule,
                        ButtonModule,
                        FieldModule,
                        LabelModule
                    ]
                },] }
    ];

    var FieldLayoutComponent = /** @class */ (function (_super) {
        __extends(FieldLayoutComponent, _super);
        function FieldLayoutComponent(breakpointObserver) {
            var _this = _super.call(this, breakpointObserver) || this;
            _this.breakpointObserver = breakpointObserver;
            _this.baseColClass = {
                col: true,
                'form-group': true,
                'm-1': false,
                'm-0': true,
                'pl-3': true,
                'pb-2': true,
                'pr-3': true
            };
            return _this;
        }
        FieldLayoutComponent.prototype.ngOnInit = function () {
            var _this = this;
            this.subscriptions.push(this.dataSource.getConfig().subscribe(function (config) {
                _this.config = Object.assign({}, config);
            }));
            this.subscriptions.push(this.dataSource.getLayout().subscribe(function (layout) {
                _this.layout = Object.assign({}, layout);
            }));
            this.subscriptions.push(this.dataSource.getFields().subscribe(function (fields) {
                _this.fields = Object.assign({}, fields);
            }));
            this.subscriptions.push(this.dataSource.getRecord().subscribe(function (record) {
                _this.record = Object.assign({}, record);
            }));
            _super.prototype.ngOnInit.call(this);
        };
        FieldLayoutComponent.prototype.buildGrid = function () {
            var _this = this;
            var grid = [];
            if (!this.fields || Object.keys(this.fields).length === 0) {
                this.fieldGrid = [];
                return;
            }
            this.layout.rows.forEach(function (layoutRow) {
                var row = {
                    cols: []
                };
                layoutRow.cols.forEach(function (layoutCol, colIndex) {
                    var fieldName = layoutCol.name;
                    var field = _this.fields[fieldName] || null;
                    if (!field) {
                        row.cols.push({});
                        return;
                    }
                    row.cols.push({
                        field: field
                    });
                    if (_this.colNumber === 1 && colIndex < layoutRow.cols.length - 1) {
                        grid.push(row);
                        row = {
                            cols: []
                        };
                    }
                });
                if (row.cols.length < _this.colNumber) {
                    _this.fillRow(row);
                }
                grid.push(row);
            });
            this.addSpecialSlots(grid);
            this.fieldGrid = grid;
        };
        Object.defineProperty(FieldLayoutComponent.prototype, "colNumber", {
            get: function () {
                var size = this.sizeMap[this.currentSize];
                if (size === 1) {
                    return 1;
                }
                return this.config.maxColumns;
            },
            enumerable: false,
            configurable: true
        });
        return FieldLayoutComponent;
    }(BaseFieldGridComponent));
    FieldLayoutComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-field-layout',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<form class=\"field-layout {{config.mode}}\">\n    <div [ngClass]=\"rowClass\" *ngFor=\"let row of fieldGrid; index as i\">\n\n        <div *ngFor=\"let col of row.cols; index as colNumber\"\n             [class.field-column-bordered]=\"row.cols.length > 1 && colNumber < row.cols.length - 1\"\n             [ngClass]=\"colClass\">\n\n            <ng-container *ngIf=\"col.field && col.field.display !== 'none'\">\n                <div class=\"label-container\">\n                    <strong>\n                        <label [ngClass]=\"labelClass\">{{col.field.label | uppercase}}</label>:\n                        <ng-container\n                            *ngIf=\"col.field.definition.required && (['edit', 'create'].includes(config.mode))\">\n                            <span class=\"required\">*</span>\n                        </ng-container>\n                    </strong>\n                </div>\n                <div class=\"d-flex\">\n                    <div class=\"flex-grow-1 text-break\">\n                        <scrm-field [type]=\"col.field.type\"\n                                    [mode]=\"config.mode\"\n                                    [klass]=\"inputClass\"\n                                    [field]=\"col.field\"\n                                    [record]=\"record\">\n                        </scrm-field>\n                    </div>\n                    <div>\n                        <button type=\"button\" class=\"record-action-button\"\n                                (click)=\"this.dataSource.getEditAction()\"\n                                *ngIf=\"col.field.definition.inline_edit !== false && !col.field.definition.readonly && this.dataSource.inlineEdit && config.mode === 'detail'\">\n                            <scrm-image class=\"sicon\" image=\"pencil\"></scrm-image>\n                        </button>\n                    </div>\n                </div>\n            </ng-container>\n\n            <ng-container *ngIf=\"col.actionSlot\">\n                <ng-content select=\"[field-grid-actions]\"></ng-content>\n            </ng-container>\n\n            <ng-container *ngIf=\"col.specialSlot\">\n                <ng-content select=\"[field-grid-special]\"></ng-content>\n            </ng-container>\n\n            <div class=\"field-separation mt-2\" *ngIf=\"col.field && i < fieldGrid.length - 1\"></div>\n        </div>\n    </div>\n</form>\n"
                },] }
    ];
    FieldLayoutComponent.ctorParameters = function () { return [
        { type: i1$1.BreakpointObserver }
    ]; };
    FieldLayoutComponent.propDecorators = {
        dataSource: [{ type: i0.Input }]
    };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var FieldLayoutModule = /** @class */ (function () {
        function FieldLayoutModule() {
        }
        return FieldLayoutModule;
    }());
    FieldLayoutModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [FieldLayoutComponent],
                    exports: [
                        FieldLayoutComponent
                    ],
                    imports: [
                        common.CommonModule,
                        FieldModule,
                        FieldGridModule,
                        ImageModule
                    ]
                },] }
    ];

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var FilterUiComponent = /** @class */ (function () {
        function FilterUiComponent(modalService) {
            this.modalService = modalService;
            this.filterModal = true;
            this.modalTitle = 'Quick Filter';
            this.quickFilter = true;
            this.advancedFilter = false;
        }
        FilterUiComponent.prototype.toggleQuickFilter = function () {
            this.modalTitle = 'Quick Filter';
            this.advancedFilter = !this.advancedFilter;
            this.quickFilter = !this.quickFilter;
        };
        FilterUiComponent.prototype.toggleAdvancedFilter = function () {
            this.modalTitle = 'Advanced Filter';
            this.advancedFilter = !this.advancedFilter;
            this.quickFilter = !this.quickFilter;
        };
        FilterUiComponent.prototype.open = function (modal) {
            var _this = this;
            this.modalService.open(modal, {
                ariaLabelledBy: 'modal-basic-title',
                centered: true,
                size: 'lg',
                windowClass: 'filter-modal'
            }).result.then(function (result) {
                _this.closeResult = "Closed with: " + result;
            }, function (reason) {
                _this.closeResult = "Dismissed " + _this.getDismissReason(reason);
            });
        };
        FilterUiComponent.prototype.getDismissReason = function (reason) {
            if (reason === i1$2.ModalDismissReasons.ESC) {
                return 'by pressing ESC';
            }
            else if (reason === i1$2.ModalDismissReasons.BACKDROP_CLICK) {
                return 'by clicking on a backdrop';
            }
            else {
                return "with: " + reason;
            }
        };
        FilterUiComponent.prototype.ngOnInit = function () {
        };
        return FilterUiComponent;
    }());
    FilterUiComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-filter-ui',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<!-- Start of filter modal component section -->\n\n<ng-template #filtermodal let-modal>\n\n    <!-- Start of modal header section -->\n\n    <div class=\"filter-modal\">\n        <div class=\"modal-header\">\n            <div class=\"modal-title\">{{ modalTitle }}</div>\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close Filter Modal\"\n                    (click)=\"modal.dismiss('Cross click')\">\n                <scrm-image class=\"sicon\" image=\"close_modal\"></scrm-image>\n            </button>\n        </div>\n\n        <!-- End of modal header section -->\n\n        <!-- Start of modal body section -->\n\n        <div class=\"modal-body\">\n            <ng-template [ngIf]=\"quickFilter\">\n                <div class=\"row\">\n                    <div class=\"col-lg-12\">\n                        <label class=\"modal-label\">Opportunity Name</label>\n                        <input class=\"modal-input\" type=\"text\" placeholder=\"Lorem Ipsum\">\n                        <label class=\"filter-checkbox-container\">\n                            <input type=\"filter-checkbox\">\n                            <span class=\"filter-checkmark\"></span>\n                        </label>\n                        <p class=\"quick-filter-options\">\n                            My Items\n                        </p>\n                        <label class=\"filter-checkbox-container\">\n                            <input type=\"filter-checkbox\">\n                            <span class=\"filter-checkmark\"></span>\n                        </label>\n                        <p class=\"quick-filter-options\">\n                            Open Items\n                        </p>\n                        <label class=\"filter-checkbox-container\">\n                            <input type=\"filter-checkbox\">\n                            <span class=\"filter-checkmark\"></span>\n                        </label>\n                        <p class=\"quick-filter-options\">\n                            My Favourites\n                        </p>\n                    </div>\n                </div>\n            </ng-template>\n            <ng-template [ngIf]=\"advancedFilter\">\n                <div class=\"row\">\n                    <div class=\"col-lg-12\">\n                        <label class=\"modal-label\">Opportunity Name</label>\n                        <input class=\"modal-input modal-input-large\" type=\"text\" placeholder=\"Lorem Ipsum\">\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-lg-12\">\n                        <div class=\"relate-input-group\">\n                            <label class=\"modal-label\">Account Name</label>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-lg-9\">\n                        <input class=\"modal-input modal-input-large\" type=\"text\" placeholder=\"Lorem Ipsum\">\n                    </div>\n                    <div class=\"col-lg-3\">\n                        <div class=\"relate-input-group\">\n                            <button type=\"button\" class=\"create-popup-button create-popup-arrow\">\n                                <scrm-image class=\"sicon\" image=\"cursor\"></scrm-image>\n                            </button>\n                            <button type=\"button\" class=\"create-popup-button create-popup-cross\">\n                                <scrm-image class=\"sicon\" image=\"cross\"></scrm-image>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-lg-12\">\n                        <label class=\"modal-label\">Opportunity Amount</label>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-lg-9\">\n                        <div class=\"select\">\n                            <select>\n                                <option>Equals</option>\n                                <option>Greater than</option>\n                                <option>Less than</option>\n                            </select>\n                        </div>\n                    </div>\n                    <div class=\"col-lg-3\">\n                        <input class=\"modal-input modal-input-small\" type=\"text\" placeholder=\"0\">\n                    </div>\n                </div>\n\n                <div class=\"row\">\n                    <div class=\"col-lg-12\">\n                        <label class=\"modal-label\">Expected Close Date</label>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-lg-8\">\n                        <div class=\"select\">\n                            <select>\n                                <option>Equals</option>\n                                <option>Greater than</option>\n                                <option>Less than</option>\n                            </select>\n                        </div>\n                    </div>\n                    <div class=\"col-lg-4\">\n                        <input class=\"modal-input modal-date-input\" type=\"text\" placeholder=\"dd/mm/yy\">\n                        <button type=\"button\" class=\"create-popup-button create-popup-calendar\">\n                            <scrm-image class=\"sicon\" image=\"calendar\"></scrm-image>\n                        </button>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-lg-12\">\n                        <label class=\"modal-label\">Next Step</label>\n                        <input class=\"modal-input modal-input-large\" type=\"text\" placeholder=\"Lorem Ipsum\">\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-lg-9\">\n                        <label class=\"modal-label\">Save Filter as:</label>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-lg-9\">\n                        <div class=\"select\">\n                            <select>\n                                <option>Lorem Ipsum</option>\n                                <option>Lorem Ipsum</option>\n                                <option>Lorem Ipsum</option>\n                            </select>\n                        </div>\n                    </div>\n                    <div class=\"col-lg-3\">\n                        <button class=\"save-filter-button\">Save</button>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-lg-12\">\n                        <label class=\"modal-label\">Order by column</label>\n                        <div class=\"select\">\n                            <select>\n                                <option>Name</option>\n                                <option>Date Created</option>\n                                <option>Date Modified</option>\n                            </select>\n                        </div>\n                    </div>\n                </div>\n            </ng-template>\n        </div>\n\n        <!-- End of modal body section -->\n\n        <!-- Start of modal footer section -->\n\n        <div class=\"modal-footer\">\n            <div class=\"row w-100\">\n                <div class=\"col-lg-3\">\n\n                </div>\n                <div class=\"col-lg-9\">\n                    <div class=\"modal-buttons\">\n                        <button type=\"button\" class=\"btn modal-button-cancel\" data-dismiss=\"modal\">\n                            Clear\n                        </button>\n                        <ng-template [ngIf]=\"advancedFilter\">\n                            <button type=\"button\" class=\"modal-button-save dropdown-toggle\">\n                                My Filters\n                            </button>\n                        </ng-template>\n                        <ng-template [ngIf]=\"quickFilter\">\n                            <button type=\"button\" class=\"btn modal-button-save\" (click)=\"toggleAdvancedFilter()\">\n                                Advanced\n                            </button>\n                        </ng-template>\n                        <ng-template [ngIf]=\"advancedFilter\">\n                            <button type=\"button\" class=\"btn modal-button-save\" (click)=\"toggleQuickFilter()\">\n                                Quick\n                            </button>\n                        </ng-template>\n                        <button type=\"button\" class=\"btn modal-button-save\">\n                            Search\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <!-- End of modal footer section -->\n\n</ng-template>\n\n<button type=\"button\" (click)=\"open(filtermodal)\" class=\"settings-button\">\n    <scrm-image class=\"sicon\" image=\"filter\"></scrm-image>\n    Filter\n</button>\n\n<!-- End of modal component section -->\n"
                },] }
    ];
    FilterUiComponent.ctorParameters = function () { return [
        { type: i1$2.NgbModal }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var FilterUiModule = /** @class */ (function () {
        function FilterUiModule() {
        }
        return FilterUiModule;
    }());
    FilterUiModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [FilterUiComponent],
                    exports: [FilterUiComponent],
                    imports: [
                        common.CommonModule,
                        ImageModule
                    ]
                },] }
    ];

    var initialState$b = {
        tabs: [],
        groupedTabs: [],
        modules: {},
        userActionMenu: [],
        maxTabs: 0
    };
    var internalState = i5.deepClone(initialState$b);
    var cache$ = null;
    var NavigationStore = /** @class */ (function () {
        function NavigationStore(recordGQL) {
            this.recordGQL = recordGQL;
            this.store = new rxjs.BehaviorSubject(internalState);
            this.state$ = this.store.asObservable();
            this.resourceName = 'navbar';
            this.fieldsMetadata = {
                fields: [
                    'tabs',
                    'groupedTabs',
                    'modules',
                    'userActionMenu',
                    'maxTabs'
                ]
            };
            this.tabs$ = this.state$.pipe(operators.map(function (state) { return state.tabs; }), operators.distinctUntilChanged());
            this.groupedTabs$ = this.state$.pipe(operators.map(function (state) { return state.groupedTabs; }), operators.distinctUntilChanged());
            this.modules$ = this.state$.pipe(operators.map(function (state) { return state.modules; }), operators.distinctUntilChanged());
            this.userActionMenu$ = this.state$.pipe(operators.map(function (state) { return state.userActionMenu; }), operators.distinctUntilChanged());
            this.maxTabs$ = this.state$.pipe(operators.map(function (state) { return state.maxTabs; }), operators.distinctUntilChanged());
            this.vm$ = rxjs.combineLatest([
                this.tabs$,
                this.groupedTabs$,
                this.modules$,
                this.userActionMenu$,
                this.maxTabs$
            ])
                .pipe(operators.map(function (_a) {
                var _b = __read(_a, 5), tabs = _b[0], groupedTabs = _b[1], modules = _b[2], userActionMenu = _b[3], maxTabs = _b[4];
                return ({ tabs: tabs, groupedTabs: groupedTabs, modules: modules, userActionMenu: userActionMenu, maxTabs: maxTabs });
            }));
        }
        /**
         * Public Api
         */
        /**
         * Clear state
         */
        NavigationStore.prototype.clear = function () {
            cache$ = null;
            this.updateState(i5.deepClone(initialState$b));
        };
        NavigationStore.prototype.clearAuthBased = function () {
            this.clear();
        };
        /**
         * Initial Navigation load if not cached and update state.
         * Returns observable to be used in resolver if needed
         *
         * @returns {{}} Observable<any>
         */
        NavigationStore.prototype.load = function () {
            var _this = this;
            return this.getNavigation().pipe(operators.tap(function (navigation) {
                _this.updateState(Object.assign(Object.assign({}, internalState), { tabs: navigation.tabs, groupedTabs: navigation.groupedTabs, userActionMenu: navigation.userActionMenu, modules: navigation.modules, maxTabs: navigation.maxTabs }));
            }));
        };
        /**
         * Internal API
         */
        /**
         * Update the state
         *
         * @param {{}} state to set
         */
        NavigationStore.prototype.updateState = function (state) {
            this.store.next(internalState = state);
        };
        /**
         * Get Navigation cached Observable or call the backend
         *
         * @returns {{}} Observable<any>
         */
        NavigationStore.prototype.getNavigation = function () {
            var user = '1';
            if (cache$ == null) {
                cache$ = this.fetch(user).pipe(operators.shareReplay(1));
            }
            return cache$;
        };
        /**
         * Fetch the Navigation from the backend
         *
         * @param {string} userId to use
         * @returns {{}} Observable<any>
         */
        NavigationStore.prototype.fetch = function (userId) {
            return this.recordGQL
                .fetch(this.resourceName, "/api/navbars/" + userId, this.fieldsMetadata)
                .pipe(operators.map(function (_a) {
                var data = _a.data;
                var navigation = null;
                if (data && data.navbar) {
                    navigation = {
                        tabs: data.navbar.tabs,
                        groupedTabs: data.navbar.groupedTabs,
                        userActionMenu: data.navbar.userActionMenu,
                        modules: data.navbar.modules,
                        maxTabs: data.navbar.maxTabs
                    };
                }
                return navigation;
            }));
        };
        return NavigationStore;
    }());
    NavigationStore.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function NavigationStore_Factory() { return new NavigationStore(i0__namespace.ɵɵinject(EntityGQL)); }, token: NavigationStore, providedIn: "root" });
    NavigationStore.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root',
                },] }
    ];
    NavigationStore.ctorParameters = function () { return [
        { type: EntityGQL }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var StateManager = /** @class */ (function () {
        function StateManager(appStore, languageStore, metadataStore, navigationStore, systemConfigStore, themeImagesStore, userPreferenceStore) {
            this.appStore = appStore;
            this.languageStore = languageStore;
            this.metadataStore = metadataStore;
            this.navigationStore = navigationStore;
            this.systemConfigStore = systemConfigStore;
            this.themeImagesStore = themeImagesStore;
            this.userPreferenceStore = userPreferenceStore;
            this.stateStores = {};
            this.stateStores.appStore = this.buildMapEntry(appStore, false);
            this.stateStores.navigationStore = this.buildMapEntry(navigationStore, true);
            this.stateStores.languageStore = this.buildMapEntry(languageStore, true);
            this.stateStores.metadataStore = this.buildMapEntry(metadataStore, false);
            this.stateStores.systemConfigStore = this.buildMapEntry(systemConfigStore, false);
            this.stateStores.themeImagesStore = this.buildMapEntry(themeImagesStore, false);
            this.stateStores.userPreferenceStore = this.buildMapEntry(userPreferenceStore, true);
        }
        /**
         * Public Api
         */
        /**
         * Clear all state
         */
        StateManager.prototype.clear = function () {
            var _this = this;
            Object.keys(this.stateStores).forEach(function (key) {
                _this.stateStores[key].store.clear();
            });
        };
        /**
         * Clear all state
         */
        StateManager.prototype.clearAuthBased = function () {
            var _this = this;
            Object.keys(this.stateStores).forEach(function (key) {
                if (_this.stateStores[key].authBased) {
                    _this.stateStores[key].store.clearAuthBased();
                }
            });
        };
        /**
         * Internal api
         */
        /**
         * Build Map entry
         *
         * @param {{}} store to use
         * @param {boolean} authBased flag
         * @returns {{}} StateStoreMapEntry
         */
        StateManager.prototype.buildMapEntry = function (store, authBased) {
            return {
                store: store,
                authBased: authBased
            };
        };
        return StateManager;
    }());
    StateManager.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function StateManager_Factory() { return new StateManager(i0__namespace.ɵɵinject(AppStateStore), i0__namespace.ɵɵinject(LanguageStore), i0__namespace.ɵɵinject(MetadataStore), i0__namespace.ɵɵinject(NavigationStore), i0__namespace.ɵɵinject(SystemConfigStore), i0__namespace.ɵɵinject(ThemeImagesStore), i0__namespace.ɵɵinject(UserPreferenceStore)); }, token: StateManager, providedIn: "root" });
    StateManager.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root',
                },] }
    ];
    StateManager.ctorParameters = function () { return [
        { type: AppStateStore },
        { type: LanguageStore },
        { type: MetadataStore },
        { type: NavigationStore },
        { type: SystemConfigStore },
        { type: ThemeImagesStore },
        { type: UserPreferenceStore }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var AuthService = /** @class */ (function () {
        function AuthService(http, router, message, stateManager, languageStore, bnIdle, appStateStore, localStorage) {
            this.http = http;
            this.router = router;
            this.message = message;
            this.stateManager = stateManager;
            this.languageStore = languageStore;
            this.bnIdle = bnIdle;
            this.appStateStore = appStateStore;
            this.localStorage = localStorage;
            this.isUserLoggedIn = new rxjs.BehaviorSubject(false);
            this.defaultTimeout = '3600';
            this.timerSet = false;
            this.currentUserSubject = new rxjs.BehaviorSubject({});
            this.currentUser$ = this.currentUserSubject.asObservable().pipe(operators.distinctUntilChanged());
        }
        AuthService.prototype.getCurrentUser = function () {
            return this.currentUserSubject.value;
        };
        AuthService.prototype.setCurrentUser = function (data) {
            this.currentUserSubject.next(data);
            this.isUserLoggedIn.next(true);
        };
        AuthService.prototype.doLogin = function (username, password, onSuccess, onError) {
            var _this = this;
            var loginUrl = 'login';
            var headers = new i1$3.HttpHeaders({
                'Content-Type': 'application/json',
            });
            return this.http.post(loginUrl, {
                username: username,
                password: password
            }, { headers: headers }).subscribe(function (response) {
                onSuccess(response);
                _this.isUserLoggedIn.next(true);
                _this.setCurrentUser(response);
                var duration = response.duration;
                if (duration === 0 || duration === '0') {
                    return;
                }
                if (duration) {
                    _this.defaultTimeout = duration;
                }
                _this.bnIdle.startWatching(_this.defaultTimeout).subscribe(function (res) {
                    if (res && _this.isUserLoggedIn.value === true) {
                        _this.message.removeMessages();
                        _this.logout('LBL_SESSION_EXPIRED');
                    }
                });
                _this.timerSet = true;
            }, function (error) {
                onError(error);
            });
        };
        /**
         * Logout user
         *
         * @param {string} messageKey of message to display
         * @param {boolean} redirect to home
         */
        AuthService.prototype.logout = function (messageKey, redirect) {
            var _this = this;
            if (messageKey === void 0) { messageKey = 'LBL_LOGOUT_SUCCESS'; }
            if (redirect === void 0) { redirect = true; }
            this.appStateStore.updateLoading('logout', true);
            var logoutUrl = 'logout';
            var body = new i1$3.HttpParams();
            var headers = new i1$3.HttpHeaders().set('Content-Type', 'text/plain; charset=utf-8');
            this.resetState();
            this.http.post(logoutUrl, body.toString(), { headers: headers, responseType: 'text' })
                .pipe(operators.take(1), operators.catchError(function (err) {
                _this.message.log('Logout failed');
                return rxjs.throwError(err);
            }), operators.finalize(function () {
                _this.appStateStore.updateLoading('logout', false);
                if (redirect === true) {
                    _this.router.navigate(['/Login']).finally();
                }
            }))
                .subscribe(function () {
                if (_this.timerSet) {
                    _this.bnIdle.resetTimer();
                    _this.bnIdle.stopTimer();
                    _this.timerSet = false;
                }
                _this.message.log('Logout success');
                if (!i5.isEmptyString(messageKey)) {
                    _this.message.addSuccessMessageByKey(messageKey);
                }
            }, function () {
                _this.message.log('Error on logout');
                if (!i5.isEmptyString(messageKey)) {
                    _this.message.addSuccessMessageByKey(messageKey);
                }
            });
        };
        /**
         * On logout state reset
         */
        AuthService.prototype.resetState = function () {
            this.stateManager.clearAuthBased();
            this.localStorage.clear();
            this.isUserLoggedIn.next(false);
        };
        /**
         * Fetch session status from backend
         *
         * @returns {{}} Observable<SessionStatus>
         */
        AuthService.prototype.fetchSessionStatus = function () {
            var Url = 'session-status';
            var headers = new i1$3.HttpHeaders().set('Content-Type', 'text/plain; charset=utf-8');
            return this.http.get(Url, { headers: headers });
        };
        return AuthService;
    }());
    AuthService.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function AuthService_Factory() { return new AuthService(i0__namespace.ɵɵinject(i1__namespace$2.HttpClient), i0__namespace.ɵɵinject(i2__namespace.Router), i0__namespace.ɵɵinject(MessageService), i0__namespace.ɵɵinject(StateManager), i0__namespace.ɵɵinject(LanguageStore), i0__namespace.ɵɵinject(i6__namespace.BnNgIdleService), i0__namespace.ɵɵinject(AppStateStore), i0__namespace.ɵɵinject(LocalStorageService)); }, token: AuthService, providedIn: "root" });
    AuthService.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    AuthService.ctorParameters = function () { return [
        { type: i1$3.HttpClient },
        { type: i2.Router },
        { type: MessageService },
        { type: StateManager },
        { type: LanguageStore },
        { type: i6.BnNgIdleService },
        { type: AppStateStore },
        { type: LocalStorageService }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var FooterUiComponent = /** @class */ (function () {
        function FooterUiComponent(modalService, authService) {
            this.modalService = modalService;
            this.authService = authService;
        }
        FooterUiComponent.prototype.openSugarCopyright = function (sugarcopyright) {
            var _this = this;
            this.modalService.open(sugarcopyright, {
                ariaLabelledBy: 'modal-basic-title',
                centered: true,
                size: 'lg'
            }).result.then(function (result) {
                _this.closeResult = "Closed with: " + result;
            }, function (reason) {
                _this.closeResult = "Dismissed " + _this.getDismissReason(reason);
            });
        };
        FooterUiComponent.prototype.openSuiteCopyright = function (suitecopyright) {
            var _this = this;
            this.modalService.open(suitecopyright, {
                ariaLabelledBy: 'modal-basic-title',
                centered: true,
                size: 'lg'
            }).result.then(function (result) {
                _this.closeResult = "Closed with: " + result;
            }, function (reason) {
                _this.closeResult = "Dismissed " + _this.getDismissReason(reason);
            });
        };
        FooterUiComponent.prototype.getDismissReason = function (reason) {
            if (reason === i1$2.ModalDismissReasons.ESC) {
                return 'by pressing ESC';
            }
            else if (reason === i1$2.ModalDismissReasons.BACKDROP_CLICK) {
                return 'by clicking on a backdrop';
            }
            else {
                return "with: " + reason;
            }
        };
        FooterUiComponent.prototype.backToTop = function () {
            document.body.scrollTop = 0; // For Safari
            document.documentElement.scrollTop = 0; // For Chrome, Firefox, IE and Opera
        };
        FooterUiComponent.prototype.ngOnInit = function () {
            var _this = this;
            this.authSub = this.authService.isUserLoggedIn.subscribe(function (value) {
                _this.isUserLoggedIn = value;
            });
        };
        FooterUiComponent.prototype.ngOnDestroy = function () {
            this.authSub.unsubscribe();
        };
        return FooterUiComponent;
    }());
    FooterUiComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-footer-ui',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<!-- Start of footer section -->\n<div class=\"footer\">\n  <div class=\"copyright-links\">\n    <a (click)=\"openSuiteCopyright(suitecopyright)\" class=\"footer-link\" data-toggle=\"modal\"\n       data-target=\".copyright-suitecrm\">\n      &copy; Supercharged by SuiteCRM\n    </a>\n    <a (click)=\"openSugarCopyright(sugarcopyright)\" class=\"footer-link\" data-toggle=\"modal\"\n       data-target=\".copyright-sugarcrm\">\n      &copy; Powered By SugarCRM\n    </a>\n  </div>\n  <ng-container *ngIf=\"this.isUserLoggedIn\">\n    <div class=\"back-to-top\">\n      <a (click)=\"backToTop()\" class=\"footer-link\">\n        <span>\n          Back To Top\n          <scrm-image class=\"sicon back-top-icon\" image=\"arrow_up_filled\"></scrm-image>\n        </span>\n      </a>\n    </div>\n  </ng-container>\n</div>\n<!-- End of footer section -->\n\n<!-- Start of copyright modal section -->\n\n<div class=\"copyright\">\n\n    <!-- Start of SugarCRM Copyright notice modal -->\n\n    <ng-template #sugarcopyright let-modal>\n\n        <div class=\"copyright-sugarcrm\" role=\"dialog\" aria-hidden=\"true\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title\">&copy; Powered By SugarCRM</h5>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"\n                        (click)=\"modal.dismiss('Cross click')\">\n                    <scrm-image class=\"sicon\" image=\"icon_modal_close\"></scrm-image>\n                </button>\n            </div>\n            <div class=\"modal-body\">\n                <p>\n                    &copy; 2004-2013 SugarCRM Inc. The Program is provided AS IS, without\n                    warranty. Licensed under AGPLv3.\n                </p>\n                <p>\n                    This program is free software; you can redistribute it and/or modify\n                    it under the terms of the GNU Affero General Public License version\n                    3 as published by the Free Software Foundation, including the\n                    additional permission set forth in the source code header.\n                </p>\n                <p>\n                    SugarCRM is a trademark of SugarCRM, Inc. All other company and\n                    product names may be trademarks of the respective companies with\n                    which they are associated.\n                </p>\n            </div>\n        </div>\n\n    </ng-template>\n\n    <!-- End of SugarCRM Copyright notice modal -->\n\n    <!-- Start of SuiteCRM Copyright notice modal -->\n\n    <ng-template #suitecopyright let-modal>\n\n        <div class=\"copyright-suitecrm\" role=\"dialog\" aria-hidden=\"true\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title\">&copy; Supercharged by SuiteCRM</h5>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"\n                        (click)=\"modal.dismiss('Cross click')\">\n                    <scrm-image class=\"sicon\" image=\"icon_modal_close\"></scrm-image>\n                </button>\n            </div>\n            <div class=\"modal-body\">\n                <p>\n                    SuiteCRM has been written and assembled by SalesAgility. The Program\n                    is provided AS IS, without warranty. Licensed under AGPLv3.\n                </p>\n                <p>\n                    This program is free software; you can redistribute it and/or modify\n                    it under the terms of the GNU Affero General Public License version\n                    3 as published by the Free Software Foundation, including the\n                    additional permission set forth in the source code header.\n                </p>\n                <p>\n                    SuiteCRM is a trademark of SalesAgility Ltd. All other company and\n                    product names may be trademarks of the respective companies with\n                    which they are associated.\n                </p>\n            </div>\n        </div>\n\n    </ng-template>\n\n    <!-- End of SuiteCRM Copyright notice modal -->\n</div>\n\n<!-- End of copyright modal section -->\n"
                },] }
    ];
    FooterUiComponent.ctorParameters = function () { return [
        { type: i1$2.NgbModal },
        { type: AuthService }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var FooterUiModule = /** @class */ (function () {
        function FooterUiModule() {
        }
        return FooterUiModule;
    }());
    FooterUiModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [FooterUiComponent],
                    exports: [FooterUiComponent],
                    imports: [
                        common.CommonModule,
                        ImageModule
                    ]
                },] }
    ];

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var FullPageSpinnerComponent = /** @class */ (function () {
        function FullPageSpinnerComponent() {
        }
        FullPageSpinnerComponent.prototype.ngOnInit = function () {
        };
        return FullPageSpinnerComponent;
    }());
    FullPageSpinnerComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'app-full-page-spinner',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<div class=\"app-overlay\">\n    <div id=\"overlay-spinner\">\n        <div class=\"app-loading\">\n            <div class=\"sk-cube-grid\">\n                <div class=\"sk-cube sk-cube1 sk-cube-primary\"></div>\n                <div class=\"sk-cube sk-cube1 sk-cube-primary\"></div>\n                <div class=\"sk-cube sk-cube2 sk-cube-secondary\"></div>\n                <div class=\"sk-cube sk-cube3 sk-cube-secondary\"></div>\n                <div class=\"sk-cube sk-cube4 sk-cube-primary\"></div>\n                <div class=\"sk-cube sk-cube4 sk-cube-primary\"></div>\n                <div class=\"sk-cube sk-cube5 sk-cube-secondary\"></div>\n                <div class=\"sk-cube sk-cube6 sk-cube-secondary\"></div>\n                <div class=\"sk-cube sk-cube7 sk-cube-primary\"></div>\n                <div class=\"sk-cube sk-cube7 sk-cube-primary\"></div>\n                <div class=\"sk-cube sk-cube8 sk-cube-primary\"></div>\n                <div class=\"sk-cube sk-cube9 sk-cube-primary\"></div>\n                <div class=\"sk-cube sk-cube7 sk-cube-primary\"></div>\n                <div class=\"sk-cube sk-cube7 sk-cube-primary\"></div>\n                <div class=\"sk-cube sk-cube8 sk-cube-primary\"></div>\n                <div class=\"sk-cube sk-cube9 sk-cube-primary\"></div>\n            </div>\n        </div>\n    </div>\n</div>\n",
                    styles: [".app-overlay{position:fixed;display:flex;justify-content:center;align-items:center;flex-direction:column;width:100%;height:100%;top:0;left:0;right:0;bottom:0;background-color:#fff9;z-index:4000;cursor:default}.app-loading{position:relative;display:flex;flex-direction:column;align-items:center;justify-content:center;height:100%}.app-loading .spinner{height:200px;width:200px;-webkit-animation:scaleIn 4s linear infinite;animation:scaleIn 4s linear infinite;transform-origin:center center;position:absolute;top:0;bottom:0;left:0;right:0;margin:auto}.app-loading .spinner .path{stroke-dasharray:1,200;stroke-dashoffset:0;-webkit-animation:dash 1.5s ease-in-out infinite;animation:dash 1.5s ease-in-out infinite;stroke-linecap:round;stroke:#ddd}.sk-cube-primary{background-color:#e67062}.sk-cube-secondary{background-color:#4e5063}.sk-cube-grid{width:100px;height:100px}.sk-cube-grid .sk-cube{width:25%;height:25%;float:left;-webkit-animation:sk-cubeGridScaleDelay 1.3s infinite ease-in-out;animation:sk-cubeGridScaleDelay 1.3s infinite ease-in-out}.sk-cube-grid .sk-cube1{-webkit-animation-delay:.2s;animation-delay:.2s}.sk-cube-grid .sk-cube2{-webkit-animation-delay:.3s;animation-delay:.3s}.sk-cube-grid .sk-cube3{-webkit-animation-delay:.4s;animation-delay:.4s}.sk-cube-grid .sk-cube4{-webkit-animation-delay:.1s;animation-delay:.1s}.sk-cube-grid .sk-cube5{-webkit-animation-delay:.2s;animation-delay:.2s}.sk-cube-grid .sk-cube6{-webkit-animation-delay:.3s;animation-delay:.3s}.sk-cube-grid .sk-cube7{-webkit-animation-delay:0s;animation-delay:0s}.sk-cube-grid .sk-cube8{-webkit-animation-delay:.1s;animation-delay:.1s}.sk-cube-grid .sk-cube9{-webkit-animation-delay:.2s;animation-delay:.2s}@-webkit-keyframes sk-cubeGridScaleDelay{0%,70%,to{transform:scale(1)}35%{transform:scale(0)}}@keyframes sk-cubeGridScaleDelay{0%,70%,to{transform:scale(1)}35%{transform:scale(0)}}\n"]
                },] }
    ];
    FullPageSpinnerComponent.ctorParameters = function () { return []; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var FullPageSpinnerModule = /** @class */ (function () {
        function FullPageSpinnerModule() {
        }
        return FullPageSpinnerModule;
    }());
    FullPageSpinnerModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [
                        FullPageSpinnerComponent
                    ],
                    exports: [
                        FullPageSpinnerComponent
                    ],
                    imports: [
                        common.CommonModule,
                        i3.AngularSvgIconModule
                    ]
                },] }
    ];

    var StatisticsFetchGQL = /** @class */ (function () {
        function StatisticsFetchGQL(apollo) {
            this.apollo = apollo;
        }
        /**
         * Fetch statistics data from backend
         *
         * @param {string} module name
         * @param {object} queries to use
         * @returns {object} Observable<ApolloQueryResult<any>>
         */
        StatisticsFetchGQL.prototype.fetch = function (module, queries) {
            var queryOptions = {
                query: gql__default['default'](templateObject_1$3 || (templateObject_1$3 = __makeTemplateObject(["\n            query getBatchedStatistics($module: String!, $queries: Iterable!){\n              getBatchedStatistics(module: $module, queries: $queries) {\n                  _id\n                  id\n                  items\n              }\n            }\n        "], ["\n            query getBatchedStatistics($module: String!, $queries: Iterable!){\n              getBatchedStatistics(module: $module, queries: $queries) {\n                  _id\n                  id\n                  items\n              }\n            }\n        "]))),
                variables: {
                    module: module,
                    queries: queries,
                },
            };
            return this.apollo.query(queryOptions).pipe(operators.map(function (result) {
                var statistics = {};
                var response = (result.data && result.data.getBatchedStatistics) || {};
                var items = response.items || {};
                var itemKeys = Object.keys(items);
                if (itemKeys && itemKeys.length) {
                    itemKeys.forEach(function (itemKey) {
                        var item = items[itemKey];
                        // eslint-disable-next-line no-underscore-dangle
                        var key = itemKey || item._id;
                        statistics[key] = {
                            // eslint-disable-next-line no-underscore-dangle
                            id: item._id,
                            data: item.data,
                            metadata: item.metadata
                        };
                    });
                }
                return statistics;
            }));
        };
        return StatisticsFetchGQL;
    }());
    StatisticsFetchGQL.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function StatisticsFetchGQL_Factory() { return new StatisticsFetchGQL(i0__namespace.ɵɵinject(i1__namespace.Apollo)); }, token: StatisticsFetchGQL, providedIn: "root" });
    StatisticsFetchGQL.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    StatisticsFetchGQL.ctorParameters = function () { return [
        { type: i1.Apollo }
    ]; };
    var templateObject_1$3;

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var ɵ0$3 = {};
    var initialState$a = {
        module: '',
        query: {},
        statistic: {
            id: '',
            data: ɵ0$3
        },
        loading: false
    };
    var StatisticsStore = /** @class */ (function () {
        function StatisticsStore(fetchGQL) {
            this.fetchGQL = fetchGQL;
            this.cache$ = null;
            this.internalState = i5.deepClone(initialState$a);
            this.store = new rxjs.BehaviorSubject(this.internalState);
            this.state$ = this.store.asObservable();
            this.statistic$ = this.state$.pipe(operators.map(function (state) { return state.statistic; }), operators.distinctUntilChanged());
            this.loading$ = this.state$.pipe(operators.map(function (state) { return state.loading; }), operators.distinctUntilChanged());
        }
        StatisticsStore.prototype.clear = function () {
            this.store.unsubscribe();
            this.cache$ = null;
        };
        StatisticsStore.prototype.clearAuthBased = function () {
            this.clear();
        };
        /**
         * Get Statistic query
         *
         * @returns {object} StatisticsQuery
         */
        StatisticsStore.prototype.getQuery = function () {
            return i5.deepClone(this.internalState.query);
        };
        Object.defineProperty(StatisticsStore.prototype, "context", {
            get: function () {
                return this.internalState.query.context;
            },
            set: function (context) {
                var query = i5.deepClone(this.internalState.query);
                query.context = context;
                this.updateState(Object.assign(Object.assign({}, this.internalState), { query: query }));
            },
            enumerable: false,
            configurable: true
        });
        /**
         * Initial list records load if not cached and update state.
         * Returns observable to be used in resolver if needed
         *
         * @param {string} module to use
         * @param {object} query to use
         * @param {boolean} load if to load
         * @returns {object} Observable<any>
         */
        StatisticsStore.prototype.init = function (module, query, load) {
            if (load === void 0) { load = true; }
            this.internalState.module = module;
            this.updateState(Object.assign(Object.assign({}, this.internalState), { module: module, query: query }));
            if (load === false) {
                return null;
            }
            return this.load();
        };
        /**
         * Load / reload statistics
         *
         * @param {boolean} useCache if to use cache
         * @returns {object} Observable<ListViewState>
         */
        StatisticsStore.prototype.load = function (useCache) {
            var _this = this;
            if (useCache === void 0) { useCache = true; }
            this.updateState(Object.assign(Object.assign({}, this.internalState), { loading: true }));
            return this.fetchStatistics(this.internalState.module, this.getQuery(), useCache).pipe(operators.map(function (data) { return _this.mapStatistics(data); }), operators.tap(function (statistic) {
                _this.addNewState(statistic);
            }));
        };
        /**
         * Set loading
         *
         * @param {boolean} loading bool
         */
        StatisticsStore.prototype.setLoading = function (loading) {
            this.updateState(Object.assign(Object.assign({}, this.internalState), { loading: loading }));
        };
        /**
         * Set Statistic value
         *
         * @param {string} key string
         * @param {object} statistic Statistic
         * @param {boolean} cache bool
         */
        StatisticsStore.prototype.setStatistic = function (key, statistic, cache) {
            if (cache === void 0) { cache = false; }
            this.addNewState(statistic);
            if (!cache) {
                return;
            }
            var statMap = {};
            statMap[key] = statistic;
            this.cache$ = rxjs.of(statMap).pipe(operators.shareReplay(1));
        };
        StatisticsStore.prototype.addNewState = function (statistic) {
            this.updateState(Object.assign(Object.assign({}, this.internalState), { statistic: statistic, loading: false }));
        };
        StatisticsStore.prototype.mapStatistics = function (data) {
            var keys = Object.keys(data);
            var key = keys && keys.length && keys[0];
            var statistic = { id: '', data: {} };
            if (key) {
                statistic = data[key];
            }
            return statistic;
        };
        /**
         * Update the state
         *
         * @param {object} state to set
         */
        StatisticsStore.prototype.updateState = function (state) {
            this.store.next(this.internalState = state);
        };
        /**
         * Get records cached Observable or call the backend
         *
         * @param {string} module to use
         * @param {object} query to use
         * @param {boolean} useCache if to use cache
         * @returns {object} Observable<any>
         */
        StatisticsStore.prototype.fetchStatistics = function (module, query, useCache) {
            if (useCache === void 0) { useCache = true; }
            var queries = {};
            queries[query.key] = query;
            if (this.cache$ == null || useCache === false) {
                this.cache$ = this.fetchGQL.fetch(module, queries).pipe(operators.shareReplay(1));
            }
            return this.cache$;
        };
        return StatisticsStore;
    }());
    StatisticsStore.decorators = [
        { type: i0.Injectable }
    ];
    StatisticsStore.ctorParameters = function () { return [
        { type: StatisticsFetchGQL }
    ]; };

    var ɵ0$2 = {};
    var initialState$9 = {
        module: '',
        query: {},
        statistic: {
            id: '',
            data: ɵ0$2
        },
        loading: false
    };
    var SingleValueStatisticsStore = /** @class */ (function (_super) {
        __extends(SingleValueStatisticsStore, _super);
        function SingleValueStatisticsStore(fetchGQL, fieldManager) {
            var _this = _super.call(this, fetchGQL) || this;
            _this.fetchGQL = fetchGQL;
            _this.fieldManager = fieldManager;
            _this.cache$ = null;
            _this.internalState = i5.deepClone(initialState$9);
            _this.store = new rxjs.BehaviorSubject(_this.internalState);
            _this.state$ = _this.store.asObservable();
            _this.statistic$ = _this.state$.pipe(operators.map(function (state) { return state.statistic; }), operators.distinctUntilChanged());
            _this.loading$ = _this.state$.pipe(operators.map(function (state) { return state.loading; }), operators.distinctUntilChanged());
            return _this;
        }
        SingleValueStatisticsStore.prototype.addNewState = function (statistic) {
            if (!statistic.metadata || !statistic.metadata.dataType) {
                return;
            }
            var field = this.fieldManager.buildShallowField(statistic.metadata.dataType, statistic.data.value);
            field.metadata = {
                digits: 0
            };
            this.updateState(Object.assign(Object.assign({}, this.internalState), { statistic: statistic, field: field, loading: false }));
        };
        /**
         * Update the state
         *
         * @param {object} state to set
         */
        SingleValueStatisticsStore.prototype.updateState = function (state) {
            _super.prototype.updateState.call(this, state);
        };
        return SingleValueStatisticsStore;
    }(StatisticsStore));
    SingleValueStatisticsStore.decorators = [
        { type: i0.Injectable }
    ];
    SingleValueStatisticsStore.ctorParameters = function () { return [
        { type: StatisticsFetchGQL },
        { type: FieldManager }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var SingleValueStatisticsStoreFactory = /** @class */ (function () {
        function SingleValueStatisticsStoreFactory(fetchGQL, fieldManager) {
            this.fetchGQL = fetchGQL;
            this.fieldManager = fieldManager;
        }
        SingleValueStatisticsStoreFactory.prototype.create = function () {
            return new SingleValueStatisticsStore(this.fetchGQL, this.fieldManager);
        };
        return SingleValueStatisticsStoreFactory;
    }());
    SingleValueStatisticsStoreFactory.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function SingleValueStatisticsStoreFactory_Factory() { return new SingleValueStatisticsStoreFactory(i0__namespace.ɵɵinject(StatisticsFetchGQL), i0__namespace.ɵɵinject(FieldManager)); }, token: SingleValueStatisticsStoreFactory, providedIn: "root" });
    SingleValueStatisticsStoreFactory.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root',
                },] }
    ];
    SingleValueStatisticsStoreFactory.ctorParameters = function () { return [
        { type: StatisticsFetchGQL },
        { type: FieldManager }
    ]; };

    var GridWidgetComponent = /** @class */ (function () {
        function GridWidgetComponent(language, factory) {
            this.language = language;
            this.factory = factory;
            this.loading = true;
            this.subs = [];
            this.statistics = {};
        }
        GridWidgetComponent.prototype.ngOnInit = function () {
            var isValid = this.validateConfig();
            if (!isValid) {
                return;
            }
            this.gridWidgetInput = this.config;
            this.buildStatistics();
            this.setupLoading$();
            this.setupVM();
            this.setupReload();
        };
        GridWidgetComponent.prototype.ngOnDestroy = function () {
            this.subs.forEach(function (sub) { return sub.unsubscribe(); });
        };
        GridWidgetComponent.prototype.validateConfig = function () {
            if (!this.config || !this.config.layout) {
                this.messageLabelKey = 'LBL_CONFIG_NO_CONFIG';
                return false;
            }
            if (!this.config.queryArgs.context || !this.config.queryArgs.module) {
                this.messageLabelKey = 'LBL_CONFIG_BAD_CONTEXT';
                return false;
            }
            if (!this.config.widgetConfig) {
                this.messageLabelKey = 'LBL_CONFIG_NO_CONFIG';
                return false;
            }
            if (!this.config.layout || !this.config.layout.rows) {
                this.messageLabelKey = 'LBL_CONFIG_NO_STATISTICS_KEY';
                return false;
            }
            return true;
        };
        GridWidgetComponent.prototype.getRowClass = function () {
            return this.gridWidgetInput.rowClass;
        };
        GridWidgetComponent.prototype.getColClass = function () {
            return this.gridWidgetInput.columnClass;
        };
        GridWidgetComponent.prototype.getContextModule = function () {
            return this.gridWidgetInput.queryArgs.context.module;
        };
        GridWidgetComponent.prototype.getMessageContext = function () {
            var module = this.getContextModule();
            if (!module) {
                return {};
            }
            return {
                module: module
            };
        };
        GridWidgetComponent.prototype.getMessageFields = function (statistics) {
            if (!statistics || !Object.keys(statistics).length) {
                return {};
            }
            var fields = {};
            Object.keys(statistics).forEach(function (key) {
                var statistic = statistics[key];
                fields[key] = statistic.field;
            });
            return fields;
        };
        GridWidgetComponent.prototype.getSizeClass = function (size) {
            var sizeMap = {
                regular: 'text-regular',
                medium: 'text-medium',
                large: 'text-large',
                'x-large': 'text-x-large',
                'xx-large': 'text-xx-large',
                huge: 'text-huge'
            };
            return sizeMap[size] || 'text-regular';
        };
        GridWidgetComponent.prototype.getFontWeight = function (bold) {
            var fontWeight = 'font-weight-normal';
            if (bold && i5.isTrue(bold)) {
                fontWeight = 'font-weight-bolder';
            }
            return fontWeight;
        };
        GridWidgetComponent.prototype.getColor = function (color) {
            var sizeMap = {
                yellow: 'text-yellow',
                blue: 'text-blue',
                green: 'text-green',
                red: 'text-red',
                purple: 'text-purple',
                dark: 'text-dark',
                grey: 'text-grey'
            };
            return sizeMap[color] || '';
        };
        GridWidgetComponent.prototype.getJustify = function (justify) {
            var justifyMap = {
                start: 'justify-content-start',
                end: 'justify-content-end',
                center: 'justify-content-center',
                between: 'justify-content-between',
                around: 'justify-content-around'
            };
            return justifyMap[justify] || 'justify-content-center';
        };
        GridWidgetComponent.prototype.getAlign = function (align) {
            var alignMap = {
                start: 'align-items-start',
                end: 'align-items-end',
                center: 'align-items-center',
                baseline: 'align-items-baseline',
                stretch: 'align-items-stretch'
            };
            return alignMap[align] || 'align-items-center';
        };
        GridWidgetComponent.prototype.getLayoutRowClass = function (row) {
            var className = '';
            if (row && row.class) {
                className = row.class;
            }
            return className;
        };
        GridWidgetComponent.prototype.getClass = function (layoutCol) {
            var className = '';
            if (layoutCol) {
                className = layoutCol.class;
            }
            className = className + ' '
                + this.getSizeClass(layoutCol.size) + ' '
                + this.getFontWeight(layoutCol.bold) + ' '
                + this.getColor(layoutCol.color);
            return className;
        };
        GridWidgetComponent.prototype.isEmptyFieldValue = function (fieldValue) {
            // Handle the cases, when input value is an string, array, objects or any other type
            if (typeof fieldValue === 'string') {
                fieldValue = fieldValue.trim();
            }
            return fieldValue == null
                || typeof fieldValue === 'undefined'
                || fieldValue === ''
                || fieldValue.length === 0;
        };
        GridWidgetComponent.prototype.getLabel = function (statisticMetadata, attribute) {
            var label = '';
            if (statisticMetadata && statisticMetadata[attribute]) {
                label = this.language.getFieldLabel(statisticMetadata[attribute]);
            }
            return label;
        };
        GridWidgetComponent.prototype.getLayout = function () {
            return this.gridWidgetInput.layout.rows;
        };
        GridWidgetComponent.prototype.buildStatistics = function () {
            var _this = this;
            this.gridWidgetInput.layout.rows.forEach(function (row) {
                if (!row.cols || !row.cols.length) {
                    return;
                }
                row.cols.forEach(function (col) {
                    if (!col.statistic) {
                        return;
                    }
                    if (col.store) {
                        _this.statistics[col.statistic] = {
                            type: col.statistic,
                            store: col.store
                        };
                        return;
                    }
                    _this.statistics[col.statistic] = {
                        type: col.statistic,
                        store: _this.factory.create()
                    };
                    _this.statistics[col.statistic].store.init(_this.gridWidgetInput.queryArgs.module, {
                        key: col.statistic,
                        context: Object.assign({}, _this.gridWidgetInput.queryArgs.context),
                        params: Object.assign({}, _this.gridWidgetInput.queryArgs.params)
                    }).pipe(operators.take(1)).subscribe();
                });
            });
        };
        GridWidgetComponent.prototype.setupLoading$ = function () {
            var _this = this;
            var loadings$ = [];
            Object.keys(this.statistics).forEach(function (type) { return loadings$.push(_this.statistics[type].store.loading$); });
            this.loading$ = rxjs.combineLatest(loadings$).pipe(operators.map(function (loadings) {
                if (!loadings || loadings.length < 1) {
                    _this.loading = false;
                    return false;
                }
                var loading = true;
                loadings.forEach(function (value) {
                    loading = loading && value;
                });
                _this.loading = loading;
                return loading;
            }));
            this.subs.push(this.loading$.subscribe());
        };
        GridWidgetComponent.prototype.setupReload = function () {
            var _this = this;
            if (this.gridWidgetInput.widgetConfig.reload$) {
                this.subs.push(this.gridWidgetInput.widgetConfig.reload$.subscribe(function () {
                    if (_this.loading === false) {
                        _this.loading = true;
                        Object.keys(_this.statistics).forEach(function (statisticKey) {
                            var statistic = _this.statistics[statisticKey];
                            if (!statistic.store) {
                                return;
                            }
                            statistic.store.load(false).pipe(operators.take(1)).subscribe();
                        });
                    }
                }));
            }
        };
        GridWidgetComponent.prototype.setupVM = function () {
            var _this = this;
            var allStatistics$ = rxjs.of([]).pipe(operators.shareReplay());
            var layout$ = rxjs.of(this.getLayout()).pipe(operators.shareReplay());
            if (this.statistics && Object.keys(this.statistics).length > 0) {
                var statistics$_1 = [];
                Object.keys(this.statistics).forEach(function (type) { return statistics$_1.push(_this.statistics[type].store.state$); });
                allStatistics$ = rxjs.combineLatest(statistics$_1);
            }
            this.vm$ = rxjs.combineLatest([allStatistics$, layout$]).pipe(operators.map(function (_a) {
                var _b = __read(_a, 2), statistics = _b[0], layout = _b[1];
                var statsMap = {};
                var tooltipTitles = [];
                var descriptions = [];
                statistics.forEach(function (value) {
                    statsMap[value.query.key] = value;
                    var tooltip = _this.getLabel(value.statistic.metadata, 'tooltip_title_key');
                    if (tooltip) {
                        tooltipTitles.push(tooltip);
                    }
                    var description = _this.getLabel(value.statistic.metadata, 'descriptionKey');
                    if (description) {
                        descriptions.push(description);
                    }
                });
                return {
                    layout: layout,
                    statistics: statsMap,
                    tooltipTitleText: tooltipTitles.join(' | '),
                    description: descriptions.join(' | '),
                };
            }));
        };
        return GridWidgetComponent;
    }());
    GridWidgetComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-grid-widget',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<div *ngIf=\"this.messageLabelKey\" class=\"p-3 widget-message\">\n    <scrm-label [labelKey]=\"this.messageLabelKey\"></scrm-label>\n</div>\n\n<div *ngIf=\"!this.messageLabelKey && (vm$| async) as vm\"\n     class=\"grid-widget d-flex flex-column\"\n     ngbTooltip=\"{{vm.tooltipTitleText}}\" placement=\"auto\" container=\"body\">\n\n    <ng-container *ngFor=\"let item of vm.layout\">\n\n        <div\n            class=\"d-flex {{getJustify(item.justify)}} {{getAlign(item.align)}} {{getRowClass()}} {{getLayoutRowClass(item)}}\">\n\n            <div class=\"{{getColClass()}} {{getClass(col)}}\" *ngFor=\"let col of item.cols\">\n\n                <ng-container *ngIf=\"col.display !== 'hidden'\">\n\n                    <!-- ICON -->\n                    <ng-container *ngIf=\"col.icon\">\n                        <div class=\"widget-entry-icon\">\n                            <scrm-image [image]=\"col.icon\" [klass]=\"col.iconClass\"></scrm-image>\n                        </div>\n                    </ng-container>\n\n                    <!-- VALUE -->\n                    <ng-container *ngIf=\"col.statistic && (vm.statistics[col.statistic]) as statistics\">\n\n                        <div *ngIf=\"statistics.field\" class=\"widget-entry-value\">\n\n                            <scrm-field [type]=\"statistics.field.type\"\n                                        [field]=\"statistics.field\"\n                                        mode=\"list\">\n                            </scrm-field>\n\n                        </div>\n                        <div *ngIf=\"statistics.loading && loading\" class=\"widget-entry-loading\">\n\n                            <scrm-inline-loading-spinner></scrm-inline-loading-spinner>\n\n                        </div>\n                    </ng-container>\n\n                    <!-- LABEL -->\n                    <ng-container *ngIf=\"col.labelKey\">\n\n                        <div class=\"widget-entry-label text-truncate\">\n\n                            <scrm-label [labelKey]=\"col.labelKey\" [module]=\"getContextModule()\"></scrm-label>\n\n                        </div>\n\n                    </ng-container>\n\n                    <!-- DESCRIPTION TEXT -->\n                    <ng-container *ngIf=\"col.descriptionKey\">\n\n                        <div class=\"text-truncate widget-entry-label\">\n\n                            <label>{{vm.description}}</label>\n\n                        </div>\n\n                    </ng-container>\n\n                    <!-- DYNAMIC LABEL -->\n                    <ng-container *ngIf=\"col.dynamicLabel\">\n\n                        <div *ngIf=\"!loading\" class=\"widget-entry-dynamic-label\">\n\n                            <scrm-dynamic-label [context]=\"getMessageContext()\"\n                                                [fields]=\"getMessageFields(vm.statistics)\"\n                                                [labelKey]=\"col.dynamicLabel\">\n                            </scrm-dynamic-label>\n\n                        </div>\n\n                        <div *ngIf=\"loading\" class=\"widget-entry-loading\">\n                            <scrm-inline-loading-spinner></scrm-inline-loading-spinner>\n                        </div>\n\n                    </ng-container>\n\n                    <!-- MISCONFIGURATION -->\n                    <ng-container\n                        *ngIf=\"col.statistic && !loading && (!vm.statistics[col.statistic].field || (vm.statistics[col.statistic].field && isEmptyFieldValue(vm.statistics[col.statistic].field.value)))\">\n                        <div class=\"widget-entry-value {{getSizeClass(col.size)}}\">\n                            -\n                        </div>\n                    </ng-container>\n\n                </ng-container>\n\n            </div>\n\n        </div>\n    </ng-container>\n</div>\n"
                },] }
    ];
    GridWidgetComponent.ctorParameters = function () { return [
        { type: LanguageStore },
        { type: SingleValueStatisticsStoreFactory }
    ]; };
    GridWidgetComponent.propDecorators = {
        config: [{ type: i0.Input }]
    };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var WidgetPanelComponent = /** @class */ (function () {
        function WidgetPanelComponent(languageStore) {
            this.languageStore = languageStore;
            this.title = '';
            this.displayContent = true;
        }
        WidgetPanelComponent.prototype.ngOnInit = function () {
        };
        return WidgetPanelComponent;
    }());
    WidgetPanelComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-widget-panel',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<div class=\"accordion widget-panel mr-0 shadow-sm\">\n    <scrm-panel [title]=\"title\" mode=\"none\" bodyPadding=\"0\">\n        <span panel-header-button>\n        </span>\n        <div panel-body>\n            <div *ngIf=\"displayContent\"\n                 class=\"widget collapse show open-close-container\"\n                 data-parent=\".widget-panel\"\n                 [@widgetContentFade]=\"displayContent ? 'true' : 'false'\">\n                <ng-content select=\"[widget-body]\"></ng-content>\n            </div>\n        </div>\n    </scrm-panel>\n</div>\n",
                    animations: [
                        animations.trigger('widgetFade', [
                            animations.transition('void => *', [
                                animations.style({ transform: 'translateX(100%)', opacity: 0 }),
                                animations.animate('500ms', animations.style({ transform: 'translateX(0)', opacity: 1 }))
                            ]),
                            animations.transition('* => void', [
                                animations.style({ transform: 'translateX(0)', opacity: 1 }),
                                animations.animate('500ms', animations.style({ transform: 'translateX(100%)', opacity: 0 }))
                            ])
                        ]),
                        animations.trigger('widgetContentFade', [
                            animations.transition('void => *', [
                                animations.style({ transform: 'translateY(-5%)', opacity: 0 }),
                                animations.animate('500ms', animations.style({ transform: 'translateY(0)', opacity: 1 }))
                            ]),
                            animations.transition('* => void', [
                                animations.style({ transform: 'translateY(0)', opacity: 1 }),
                                animations.animate('500ms', animations.style({ transform: 'translateY(-5%)', opacity: 0 }))
                            ])
                        ])
                    ]
                },] }
    ];
    WidgetPanelComponent.ctorParameters = function () { return [
        { type: LanguageStore }
    ]; };
    WidgetPanelComponent.propDecorators = {
        title: [{ type: i0.Input }]
    };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var PanelComponent = /** @class */ (function () {
        function PanelComponent() {
            this.klass = '';
            this.bodyPadding = 2;
            this.mode = 'closable';
            this.close = {
                klass: ['btn', 'btn-outline-light', 'btn-sm']
            };
            this.isCollapsed = false;
            this.buttonClasses = ['btn', 'btn-outline-light', 'btn-sm'];
            this.subs = [];
        }
        PanelComponent.prototype.ngOnInit = function () {
            var _this = this;
            if (this.isCollapsed$) {
                this.subs.push(this.isCollapsed$.subscribe(function (collapse) {
                    _this.isCollapsed = collapse;
                    _this.initMinimiseButton();
                }));
            }
            this.initMinimiseButton();
        };
        PanelComponent.prototype.ngOnDestroy = function () {
            this.subs.forEach(function (sub) { return sub.unsubscribe(); });
        };
        PanelComponent.prototype.getCloseButton = function () {
            if (!this.close) {
                return null;
            }
            var btn = i5.Button.fromButton(this.close);
            btn.addClasses(this.buttonClasses);
            this.close = btn;
            return btn;
        };
        PanelComponent.prototype.isClosable = function () {
            return this.mode === 'closable';
        };
        PanelComponent.prototype.isCollapsible = function () {
            return this.mode === 'collapsible';
        };
        PanelComponent.prototype.initMinimiseButton = function () {
            var _this = this;
            this.minimiseButton = {
                klass: ['btn', 'btn-outline-light', 'btn-sm'],
                onClick: function () {
                    _this.isCollapsed = !_this.isCollapsed;
                    _this.initMinimiseStatus();
                },
            };
            this.initMinimiseStatus();
        };
        PanelComponent.prototype.initMinimiseStatus = function () {
            if (this.isCollapsed) {
                this.minimiseStatus = 'minimised';
                return;
            }
            this.minimiseStatus = 'maximised';
        };
        return PanelComponent;
    }());
    PanelComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-panel',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<div [class.collapsed]=\"isCollapsed\" class=\"card panel-card {{klass}}\">\n\n    <div class=\"card-header d-flex justify-content-between align-items-center\">\n\n        <div class=\"flex-grow-1 align-items-center d-flex\">\n\n            <div class=\"d-flex align-items-center\">\n                <scrm-close-button *ngIf=\"isClosable()\" [config]=\"getCloseButton()\"></scrm-close-button>\n                <scrm-minimise-button *ngIf=\"isCollapsible()\"\n                                      [config]=\"minimiseButton\"\n                                      [status]=\"minimiseStatus\">\n                </scrm-minimise-button>\n                <ng-content select=\"[panel-icon-area]\"></ng-content>\n            </div>\n\n            <div *ngIf=\"title\" class=\"pl-1 panel-title\">{{title}}</div>\n            <div *ngIf=\"titleKey\" class=\"pl-1 panel-title\">\n                <scrm-label [labelKey]=\"titleKey\"></scrm-label>\n            </div>\n        </div>\n\n\n        <div class=\"panel-buttons float-right\">\n            <ng-content select=\"[panel-header-button]\"></ng-content>\n        </div>\n    </div>\n\n    <div class=\"card-body p-{{bodyPadding}}\" [ngbCollapse]=\"isCollapsed\">\n        <ng-content select=\"[panel-body]\"></ng-content>\n    </div>\n</div>\n"
                },] }
    ];
    PanelComponent.ctorParameters = function () { return []; };
    PanelComponent.propDecorators = {
        klass: [{ type: i0.Input }],
        bodyPadding: [{ type: i0.Input }],
        title: [{ type: i0.Input }],
        titleKey: [{ type: i0.Input }],
        mode: [{ type: i0.Input }],
        isCollapsed$: [{ type: i0.Input }],
        close: [{ type: i0.Input }]
    };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var MinimiseButtonComponent = /** @class */ (function () {
        function MinimiseButtonComponent() {
            this.status = 'maximised';
            this.buttonClasses = ['minimise-button'];
        }
        MinimiseButtonComponent.prototype.ngOnInit = function () {
            this.buildButton();
        };
        MinimiseButtonComponent.prototype.ngOnChanges = function (changes) {
            if (changes.config) {
                this.buildButton();
            }
        };
        MinimiseButtonComponent.prototype.buildButton = function () {
            var _this = this;
            var btn = i5.Button.fromButton(this.config);
            btn.addClasses(this.buttonClasses);
            btn.icon = this.getIcon();
            btn.onClick = function () {
                _this.config.onClick();
                _this.toggleStatus();
            };
            this.internalConfig = btn;
        };
        MinimiseButtonComponent.prototype.toggleStatus = function () {
            var newStatus = 'minimised';
            if (this.status === 'minimised') {
                newStatus = 'maximised';
            }
            this.status = newStatus;
            this.buildButton();
        };
        MinimiseButtonComponent.prototype.getIcon = function () {
            if (this.status === 'minimised') {
                return 'plus_thin';
            }
            return 'minimise';
        };
        return MinimiseButtonComponent;
    }());
    MinimiseButtonComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-minimise-button',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<ng-container *ngIf=\"internalConfig\">\n    <scrm-button [config]=\"internalConfig\"></scrm-button>\n</ng-container>\n"
                },] }
    ];
    MinimiseButtonComponent.ctorParameters = function () { return []; };
    MinimiseButtonComponent.propDecorators = {
        config: [{ type: i0.Input }],
        status: [{ type: i0.Input }]
    };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var MinimiseButtonModule = /** @class */ (function () {
        function MinimiseButtonModule() {
        }
        return MinimiseButtonModule;
    }());
    MinimiseButtonModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [MinimiseButtonComponent],
                    exports: [
                        MinimiseButtonComponent
                    ],
                    imports: [
                        common.CommonModule,
                        ButtonModule
                    ]
                },] }
    ];

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var PanelModule = /** @class */ (function () {
        function PanelModule() {
        }
        return PanelModule;
    }());
    PanelModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [PanelComponent],
                    exports: [
                        PanelComponent
                    ],
                    imports: [
                        common.CommonModule,
                        ButtonModule,
                        CloseButtonModule,
                        i1$2.NgbModule,
                        MinimiseButtonModule,
                        LabelModule
                    ]
                },] }
    ];

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var WidgetPanelModule = /** @class */ (function () {
        function WidgetPanelModule() {
        }
        return WidgetPanelModule;
    }());
    WidgetPanelModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [WidgetPanelComponent],
                    exports: [WidgetPanelComponent],
                    imports: [
                        common.CommonModule,
                        ImageModule,
                        PanelModule
                    ]
                },] }
    ];

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var GridWidgetModule = /** @class */ (function () {
        function GridWidgetModule() {
        }
        return GridWidgetModule;
    }());
    GridWidgetModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [GridWidgetComponent],
                    exports: [
                        GridWidgetComponent
                    ],
                    imports: [
                        common.CommonModule,
                        FieldModule,
                        InlineLoadingSpinnerModule,
                        WidgetPanelModule,
                        LabelModule,
                        ImageModule,
                        DynamicLabelModule,
                        i1$2.NgbTooltipModule
                    ]
                },] }
    ];

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var HomeUiComponent = /** @class */ (function () {
        function HomeUiComponent() {
        }
        return HomeUiComponent;
    }());
    HomeUiComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-home-ui',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<div style=\"margin: 70px;\">\n    <h1>Home Page</h1>\n</div>\n"
                },] }
    ];

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var HomeUiRoutes = [
        {
            path: '',
            component: HomeUiComponent
        }
    ];

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var LogoAbstract = /** @class */ (function () {
        function LogoAbstract() {
            this.url = ''; // todo: using a preloader url till logo is loading?
            this.md5 = '';
            this.width = 0;
            this.height = 0;
        }
        return LogoAbstract;
    }());

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    exports.LinkTarget = void 0;
    (function (LinkTarget) {
        LinkTarget["none"] = "";
        LinkTarget["blank"] = "_blank";
        LinkTarget["parent"] = "_parent";
        LinkTarget["self"] = "_self";
        LinkTarget["top"] = "_top";
    })(exports.LinkTarget || (exports.LinkTarget = {}));

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var NavbarAbstract = /** @class */ (function () {
        /**
         * Public API
         */
        function NavbarAbstract(routeConverter, moduleNavigation) {
            this.routeConverter = routeConverter;
            this.moduleNavigation = moduleNavigation;
            this.authenticated = true;
            this.logo = new LogoAbstract();
            this.useGroupTabs = false;
            this.globalActions = [];
            this.currentUser = {
                id: '',
                firstName: '',
                lastName: '',
            };
            this.all = {
                modules: [],
                extra: [],
            };
            this.menu = [];
        }
        /**
         * Reset menus
         */
        NavbarAbstract.prototype.resetMenu = function () {
            this.menu = [];
            this.globalActions = [];
            this.all.modules = [];
            this.all.extra = [];
            this.current = null;
            this.currentUser = {};
        };
        /**
         * Build user action menu
         *
         * @param {object} appStrings map
         * @param {[]} userActionMenu info
         * @param {object} currentUser info
         */
        NavbarAbstract.prototype.buildUserActionMenu = function (appStrings, userActionMenu, currentUser) {
            var _this = this;
            this.currentUser.id = currentUser.id;
            this.currentUser.firstName = currentUser.firstName;
            this.currentUser.lastName = currentUser.lastName;
            if (userActionMenu) {
                userActionMenu.forEach(function (subMenu) {
                    var name = subMenu.name;
                    var url = subMenu.url;
                    if (name === 'logout') {
                        return;
                    }
                    var target = exports.LinkTarget.none;
                    if (name === 'training') {
                        target = exports.LinkTarget.blank;
                    }
                    else {
                        url = _this.routeConverter.toFrontEndLink(url);
                    }
                    var label = appStrings[subMenu.labelKey];
                    _this.globalActions.push({
                        link: {
                            url: url,
                            label: label,
                            target: target
                        },
                    });
                });
            }
            return;
        };
        /**
         * Build navbar
         *
         * @param {object} navigation info
         * @param {object} language map
         * @param {object} userPreferences info
         * @param {object} currentUser info
         * @param {object} appState info
         * @param {number} maxTabs to display
         */
        NavbarAbstract.prototype.build = function (navigation, language, userPreferences, currentUser, appState, maxTabs) {
            this.resetMenu();
            if (!i5.ready([language.appStrings, language.modStrings, language.appListStrings, userPreferences, currentUser])) {
                return;
            }
            this.buildUserActionMenu(language.appStrings, navigation.userActionMenu, currentUser);
            var navigationParadigm = userPreferences.navigation_paradigm.toString();
            var sort = userPreferences.sort_modules_by_name.toString() === 'on';
            if (navigationParadigm === 'm') {
                this.buildModuleNavigation(navigation, language, appState, maxTabs, sort);
                return;
            }
            if (navigationParadigm === 'gm') {
                this.buildGroupedNavigation(navigation, language, appState, maxTabs, sort);
                return;
            }
        };
        /**
         * Build Group tab menu
         *
         * @param {[]} items list
         * @param {object} modules info
         * @param {object} languages map
         * @param {number} threshold limit
         * @param {object} groupedTabs info
         * @param {boolean} sort flag
         */
        NavbarAbstract.prototype.buildGroupTabMenu = function (items, modules, languages, threshold, groupedTabs, sort) {
            var _this = this;
            var navItems = [];
            var moreItems = [];
            if (items && items.length > 0) {
                items.forEach(function (module) {
                    moreItems.push(_this.buildTabMenuItem(module, modules[module], languages));
                });
                if (sort) {
                    this.sortMenuItems(moreItems);
                }
            }
            var count = 0;
            groupedTabs.forEach(function (groupedTab) {
                if (count <= threshold) {
                    navItems.push(_this.buildTabGroupedMenuItem(groupedTab.labelKey, groupedTab.modules, modules, languages, sort));
                }
                count++;
            });
            this.menu = navItems;
            this.all.modules = moreItems;
        };
        /**
         *
         * Internal API
         *
         */
        /**
         * Build module navigation
         *
         * @param {object} navigation info
         * @param {object} languages map
         * @param {object} appState info
         * @param {number} maxTabs to use
         * @param {boolean} sort flag
         */
        NavbarAbstract.prototype.buildModuleNavigation = function (navigation, languages, appState, maxTabs, sort) {
            if (!i5.ready([navigation.tabs, navigation.modules])) {
                return;
            }
            this.buildTabMenu(navigation.tabs, navigation.modules, languages, maxTabs, appState, sort);
            this.buildSelectedModule(navigation, languages, appState);
        };
        /**
         * Build grouped navigation
         *
         * @param {object} navigation info
         * @param {object} languages map
         * @param {object} appState info
         * @param {number} maxTabs to use
         * @param {boolean} sort flag
         */
        NavbarAbstract.prototype.buildGroupedNavigation = function (navigation, languages, appState, maxTabs, sort) {
            if (!i5.ready([navigation.tabs, navigation.modules, navigation.groupedTabs])) {
                return;
            }
            this.buildGroupTabMenu(navigation.tabs, navigation.modules, languages, maxTabs, navigation.groupedTabs, sort);
            this.buildSelectedModule(navigation, languages, appState);
        };
        /**
         * Build selected module
         *
         * @param {object} navigation info
         * @param {object} languages map
         * @param {object} appState info
         */
        NavbarAbstract.prototype.buildSelectedModule = function (navigation, languages, appState) {
            if (!appState || !appState.module || appState.module === 'home') {
                return;
            }
            var module = appState.module;
            if (!navigation.modules[module]) {
                return;
            }
            this.current = this.buildTabMenuItem(module, navigation.modules[module], languages);
        };
        /**
         * Build tab / module menu
         *
         * @param {[]} items list
         * @param {object} modules info
         * @param {object} languages map
         * @param {number} threshold limit
         * @param {object} appState info
         * @param {boolean} sort flag
         */
        NavbarAbstract.prototype.buildTabMenu = function (items, modules, languages, threshold, appState, sort) {
            var _this = this;
            var navItems = [];
            var moreItems = [];
            if (!items || items.length === 0) {
                this.menu = navItems;
                this.all.modules = moreItems;
                return;
            }
            var count = 0;
            items.forEach(function (module) {
                var item = _this.buildTabMenuItem(module, modules[module], languages);
                if (module === 'home' || appState.module === module || count >= threshold) {
                    moreItems.push(item);
                }
                else {
                    navItems.push(item);
                }
                count++;
            });
            if (sort) {
                this.sortMenuItems(navItems);
                this.sortMenuItems(moreItems);
            }
            this.menu = navItems;
            this.all.modules = moreItems;
        };
        /**
         * Build Grouped Tab menu item
         *
         * @param {string} moduleLabel to display
         * @param {object} groupedModules list
         * @param {object} modules list
         * @param {object} languages map
         * @param {boolean} sort flag
         *
         * @returns {object} group tab menu item
         */
        NavbarAbstract.prototype.buildTabGroupedMenuItem = function (moduleLabel, groupedModules, modules, languages, sort) {
            return {
                link: {
                    label: (languages.appStrings && languages.appStrings[moduleLabel]) || moduleLabel,
                    url: '',
                    route: null,
                    params: null
                },
                icon: '',
                submenu: this.buildGroupedMenu(groupedModules, modules, languages, sort)
            };
        };
        /**
         * Build Grouped menu
         *
         * @param {object} groupedModules info
         * @param {object} modules map
         * @param {object} languages maps
         * @param {boolean} sort flag
         *
         * @returns {[]} menu item array
         */
        NavbarAbstract.prototype.buildGroupedMenu = function (groupedModules, modules, languages, sort) {
            var _this = this;
            var groupedItems = [];
            var homeMenuItem = null;
            groupedModules.forEach(function (groupedModule) {
                var module = modules[groupedModule];
                if (!module) {
                    return;
                }
                var moduleMenuItem = _this.buildTabMenuItem(groupedModule, module, languages);
                if (groupedModule === 'home') {
                    homeMenuItem = moduleMenuItem;
                    return;
                }
                groupedItems.push(moduleMenuItem);
            });
            if (sort) {
                this.sortMenuItems(groupedItems);
            }
            if (homeMenuItem) {
                groupedItems.unshift(homeMenuItem);
            }
            return groupedItems;
        };
        /**
         * Build module menu items
         *
         * @param {string} module name
         * @param {object} moduleInfo info
         * @param {object} languages object
         *
         * @returns {object} menuItem
         */
        NavbarAbstract.prototype.buildTabMenuItem = function (module, moduleInfo, languages) {
            var _this = this;
            var moduleRoute = this.moduleNavigation.getModuleRoute(moduleInfo);
            var menuItem = {
                link: {
                    label: this.moduleNavigation.getModuleLabel(moduleInfo, languages.appListStrings),
                    url: moduleRoute.url,
                    route: moduleRoute.route,
                    params: null
                },
                icon: (module === 'home') ? 'home' : '',
                submenu: []
            };
            if (moduleInfo) {
                moduleInfo.menu.forEach(function (subMenu) {
                    var moduleActionRoute = _this.moduleNavigation.getActionRoute(subMenu);
                    menuItem.submenu.push({
                        link: {
                            label: _this.moduleNavigation.getActionLabel(module, subMenu, languages),
                            url: moduleActionRoute.url,
                            route: moduleActionRoute.route,
                            params: moduleActionRoute.params
                        },
                        icon: subMenu.icon,
                        submenu: []
                    });
                });
            }
            return menuItem;
        };
        /**
         * Sort menu items by label
         *
         * @param {object} navItems to sort
         */
        NavbarAbstract.prototype.sortMenuItems = function (navItems) {
            navItems.sort(function (a, b) {
                var nameA = a.link.label.toUpperCase(); // ignore upper and lowercase
                var nameB = b.link.label.toUpperCase(); // ignore upper and lowercase
                if (nameA < nameB) {
                    return -1;
                }
                if (nameA > nameB) {
                    return 1;
                }
                // names must be equal
                return 0;
            });
        };
        return NavbarAbstract;
    }());

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var ROUTE_PREFIX = './#';
    var RouteConverter = /** @class */ (function () {
        function RouteConverter(moduleNameMapper, actionNameMapper, systemConfigStore) {
            this.moduleNameMapper = moduleNameMapper;
            this.actionNameMapper = actionNameMapper;
            this.systemConfigStore = systemConfigStore;
        }
        /**
         * Public Api
         */
        /**
         * Converts legacyLink to front end link. Includes the /#/.
         *
         * @param {string} legacyLink legacy url
         * @returns {string} frontend path
         */
        RouteConverter.prototype.toFrontEndLink = function (legacyLink) {
            return ROUTE_PREFIX + this.toFrontEndRoute(legacyLink);
        };
        /**
         * Converts legacyLink to front end route
         *
         * @param {string} legacyLink legacy url
         * @returns {string} frontend path
         */
        RouteConverter.prototype.toFrontEndRoute = function (legacyLink) {
            if (legacyLink && legacyLink.includes('/#/')) {
                var anchorParts = legacyLink.split('/#/');
                if (anchorParts.length < 2) {
                    return '/';
                }
                return anchorParts[1];
            }
            var info = this.parse(legacyLink);
            if (!info) {
                return '/';
            }
            var route = this.buildRoute(info.module, info.action, info.record);
            route += this.buildQueryString(info.params, ['module', 'action', 'record']);
            return route;
        };
        /**
         * Build legacy link from router information
         *
         * @param {object} params route params
         * @param {object} queryParams route query params
         * @returns {string} legacy url
         */
        RouteConverter.prototype.toLegacy = function (params, queryParams) {
            var path = './legacy/index.php';
            var queryObject = Object.assign({}, queryParams);
            if (params.module) {
                queryObject.module = this.moduleNameMapper.toLegacy(params.module);
            }
            if (params.action) {
                queryObject.action = this.actionNameMapper.toLegacy(params.action);
            }
            if (params.record) {
                queryObject.record = params.record;
            }
            path += this.buildQueryString(queryObject);
            return path;
        };
        /**
         * Parse legacy link
         *
         * @param {string} legacyLink to parse
         * @returns {object} route info
         */
        RouteConverter.prototype.parse = function (legacyLink) {
            var parser = new i2.DefaultUrlSerializer();
            var replacedString = legacyLink.replace('/legacy', '');
            var parts = replacedString.split('?');
            if (parts.length < 2) {
                return null;
            }
            var tree = parser.parse('/?' + parts[1]);
            var params = tree.queryParamMap;
            var module = params.get('module') || '';
            var action = params.get('action') || '';
            var record = params.get('record') || '';
            return {
                module: module,
                action: action,
                record: record,
                params: tree.queryParams
            };
        };
        /**
         * Map route url to RouteInfo
         *
         * @returns {object} RouteInfo of the current URL
         * @description Parses route information from ActivatedRouteSnapshot to RouteInfo object
         * @param {UrlSegment[]} urlSegment from the Router object
         */
        RouteConverter.prototype.parseRouteURL = function (urlSegment) {
            var _a, _b, _c, _d, _e, _f;
            return {
                module: (_b = (_a = urlSegment[0]) === null || _a === void 0 ? void 0 : _a.path) !== null && _b !== void 0 ? _b : '',
                action: (_d = (_c = urlSegment[1]) === null || _c === void 0 ? void 0 : _c.path) !== null && _d !== void 0 ? _d : 'index',
                record: (_f = (_e = urlSegment[2]) === null || _e === void 0 ? void 0 : _e.path) !== null && _f !== void 0 ? _f : ''
            };
        };
        /**
         * check if the current route is a classic view route
         *
         * @returns {object} RouteInfo
         * @description if the current url is a classic view url; so redirect back to the same view
         * @param {UrlTree} urlTree of current route
         */
        RouteConverter.prototype.parseRouteInfoFromUrlTree = function (urlTree) {
            var urlSegmentGroup = urlTree.root.children[i2.PRIMARY_OUTLET];
            var urlSegment = urlSegmentGroup.segments;
            return this.parseRouteURL(urlSegment);
        };
        /**
         * check if the current route is a classic view route
         *
         * @returns {boolean} true/false
         * @param {UrlTree} urlTree of the route
         * @description if the current url is a classic view url; so redirect back to the same view
         */
        RouteConverter.prototype.isClassicViewRoute = function (urlTree) {
            var configRoutes = this.systemConfigStore.getConfigValue('module_routing');
            var currentRouteInfo = this.parseRouteInfoFromUrlTree(urlTree);
            var module = currentRouteInfo.module;
            var action = currentRouteInfo.action;
            return !configRoutes[module] || !configRoutes[module][action];
        };
        /**
         * Check if given routeInfo matches the provided activated route
         *
         * @param {object} route to check
         * @param {object} routeInfo to check
         * @returns {boolean} is match
         */
        RouteConverter.prototype.matchesActiveRoute = function (route, routeInfo) {
            var _this = this;
            var toCheck = [
                {
                    name: 'module',
                    map: function (value) {
                        if (!value) {
                            return value;
                        }
                        return _this.mapModuleToFrontend(value);
                    }
                },
                {
                    name: 'action',
                    map: function (value) {
                        if (!value) {
                            return value;
                        }
                        return _this.mapActionToFrontEnd(value);
                    }
                },
                {
                    name: 'record',
                    map: function (value) { return value; }
                }
            ];
            var match = true;
            toCheck.forEach(function (param) {
                if (!route.snapshot.params[param.name] && !routeInfo[param.name]) {
                    return;
                }
                match = match && (route.snapshot.params[param.name] === param.map(routeInfo[param.name]));
            });
            return match;
        };
        /**
         * Internal API
         */
        /**
         * Build front end route
         *
         * @param {string} module name
         * @param {string} action name
         * @param {string} record id
         * @returns {string} route
         */
        RouteConverter.prototype.buildRoute = function (module, action, record) {
            var moduleName = this.mapModuleToFrontend(module);
            var route = "" + moduleName;
            if (action) {
                var actionName = this.mapActionToFrontEnd(action);
                route += "/" + actionName;
            }
            if (record) {
                route += "/" + record;
            }
            return route;
        };
        /**
         * Build query string
         *
         * @param {object} queryParams query parameters
         * @param {string[]} exclude parameters to exclude
         * @returns {string} query string
         */
        RouteConverter.prototype.buildQueryString = function (queryParams, exclude) {
            if (exclude === void 0) { exclude = []; }
            var params = new i1$3.HttpParams();
            Object.keys(queryParams).forEach(function (param) {
                if (exclude.includes(param)) {
                    return;
                }
                var value = queryParams[param];
                params = params.set(param, value);
            });
            if (params.keys().length > 0) {
                return '?' + params.toString();
            }
            return '';
        };
        /**
         * Map legacy module name to frontend
         *
         * @param {string} module legacy name
         * @returns {string} frontend name
         */
        RouteConverter.prototype.mapModuleToFrontend = function (module) {
            return this.moduleNameMapper.toFrontend(module);
        };
        /**
         * Map legacy action name to frontend
         *
         * @param {string} action legacy name
         * @returns {string} frontend name
         */
        RouteConverter.prototype.mapActionToFrontEnd = function (action) {
            return this.actionNameMapper.toFrontend(action);
        };
        return RouteConverter;
    }());
    RouteConverter.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function RouteConverter_Factory() { return new RouteConverter(i0__namespace.ɵɵinject(ModuleNameMapper), i0__namespace.ɵɵinject(ActionNameMapper), i0__namespace.ɵɵinject(SystemConfigStore)); }, token: RouteConverter, providedIn: "root" });
    RouteConverter.decorators = [
        { type: i0.Injectable, args: [{ providedIn: 'root' },] }
    ];
    RouteConverter.ctorParameters = function () { return [
        { type: ModuleNameMapper },
        { type: ActionNameMapper },
        { type: SystemConfigStore }
    ]; };

    var BaseNavbarComponent = /** @class */ (function () {
        function BaseNavbarComponent(navigationStore, languageStore, userPreferenceStore, systemConfigStore, appState, authService, moduleNavigation, screenSize) {
            var _this = this;
            this.navigationStore = navigationStore;
            this.languageStore = languageStore;
            this.userPreferenceStore = userPreferenceStore;
            this.systemConfigStore = systemConfigStore;
            this.appState = appState;
            this.authService = authService;
            this.moduleNavigation = moduleNavigation;
            this.screenSize = screenSize;
            this.loaded = true;
            this.mainNavCollapse = true;
            this.subNavCollapse = true;
            this.mobileNavbar = false;
            this.mobileSubNav = false;
            this.backLink = false;
            this.mainNavLink = true;
            this.submenu = [];
            this.moduleNameMapper = new ModuleNameMapper(this.systemConfigStore);
            this.actionNameMapper = new ActionNameMapper(this.systemConfigStore);
            this.routeConverter = new RouteConverter(this.moduleNameMapper, this.actionNameMapper, this.systemConfigStore);
            this.navbar = new NavbarAbstract(this.routeConverter, this.moduleNavigation);
            this.maxTabs = 8;
            this.screen = exports.ScreenSize.Medium;
            this.languages$ = this.languageStore.vm$;
            this.userPreferences$ = this.userPreferenceStore.userPreferences$;
            this.currentUser$ = this.authService.currentUser$;
            this.appState$ = this.appState.vm$;
            this.navigation$ = this.navigationStore.vm$;
            this.vm$ = rxjs.combineLatest([
                this.navigation$,
                this.languages$,
                this.userPreferences$,
                this.currentUser$,
                this.appState$,
                this.screenSize.screenSize$
            ]).pipe(operators.map(function (_a) {
                var _b = __read(_a, 6), navigation = _b[0], languages = _b[1], userPreferences = _b[2], currentUser = _b[3], appState = _b[4], screenSize = _b[5];
                if (screenSize) {
                    _this.screen = screenSize;
                }
                _this.calculateMaxTabs(navigation);
                _this.navbar.build(navigation, languages, userPreferences, currentUser, appState, _this.maxTabs);
                return {
                    navigation: navigation,
                    languages: languages,
                    userPreferences: userPreferences,
                    appState: appState
                };
            }));
            var navbar = new NavbarAbstract(this.routeConverter, this.moduleNavigation);
            this.setNavbar(navbar);
            BaseNavbarComponent.instances.push(this);
        }
        /**
         * Public API
         */
        /**
         * Reset component instance
         */
        BaseNavbarComponent.reset = function () {
            BaseNavbarComponent.instances.forEach(function (navbarComponent) {
                navbarComponent.loaded = false;
                navbarComponent.navbar = new NavbarAbstract(navbarComponent.routeConverter, navbarComponent.moduleNavigation);
            });
        };
        BaseNavbarComponent.prototype.onResize = function (event) {
            var innerWidth = event.target.innerWidth;
            this.mobileNavbar = innerWidth <= 768;
        };
        BaseNavbarComponent.prototype.ngOnInit = function () {
            var _this = this;
            var navbar = new NavbarAbstract(this.routeConverter, this.moduleNavigation);
            this.setNavbar(navbar);
            this.authService.isUserLoggedIn.subscribe(function (value) {
                _this.isUserLoggedIn = value;
            });
            window.dispatchEvent(new Event('resize'));
        };
        BaseNavbarComponent.prototype.ngOnDestroy = function () {
            this.authService.isUserLoggedIn.unsubscribe();
        };
        /**
         * Change subnavigation
         *
         * @param {object} event triggered
         * @param {object} items
         */
        BaseNavbarComponent.prototype.changeSubNav = function (event, items) {
            this.mobileSubNav = !this.mobileSubNav;
            this.backLink = !this.backLink;
            this.mainNavLink = !this.mainNavLink;
            this.submenu = items;
        };
        /**
         * Set link flags
         */
        BaseNavbarComponent.prototype.navBackLink = function () {
            this.mobileSubNav = !this.mobileSubNav;
            this.backLink = !this.backLink;
            this.mainNavLink = !this.mainNavLink;
        };
        /**
         * Get home page
         *
         * @returns {string} homepage
         */
        BaseNavbarComponent.prototype.getHomePage = function () {
            return this.systemConfigStore.getHomePage();
        };
        /**
         * Internal API
         */
        /**
         * Set navbar model
         *
         * @param {{}} navbar model
         */
        BaseNavbarComponent.prototype.setNavbar = function (navbar) {
            this.navbar = navbar;
            this.loaded = true;
        };
        /**
         * Check if is loaded
         *
         * @returns {{boolean}} is loaded
         */
        BaseNavbarComponent.prototype.isLoaded = function () {
            return this.loaded;
        };
        BaseNavbarComponent.prototype.calculateMaxTabs = function (navigation) {
            var sizeMap = this.systemConfigStore.getConfigValue('navigation_tab_limits');
            if (this.screen && sizeMap) {
                var maxTabs = sizeMap[this.screen];
                if (!maxTabs || navigation.maxTabs && navigation.maxTabs < maxTabs) {
                    maxTabs = navigation.maxTabs;
                }
                this.maxTabs = maxTabs;
            }
        };
        BaseNavbarComponent.prototype.getCloseCallBack = function (myDrop) {
            return function () { return myDrop.close(); };
        };
        return BaseNavbarComponent;
    }());
    BaseNavbarComponent.instances = [];
    BaseNavbarComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-base-navbar',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<!-- Start of main navbar section -->\n\n<div *ngIf=\"(vm$ | async) as vm\" class=\"top-panel fixed-top\">\n\n    <!-- Start of empty navbar section until data is loaded -->\n\n    <ng-template [ngIf]=\"!loaded\">\n        <nav class=\"navbar navbar-expand-lg\">\n            <div class=\"navbar-collapse collapse order-4 order-md-0 collapsenav\">\n                <ul class=\"navbar-nav\">\n                    <li class=\"top-nav nav-item\">&nbsp;\n                    </li>\n                </ul>\n            </div>\n        </nav>\n    </ng-template>\n\n    <!-- End of empty  section until data is loaded -->\n\n    <!-- Start of empty navbar with logo -->\n\n    <ng-container *ngIf=\"loaded\">\n        <ng-container *ngIf=\"!this.isUserLoggedIn\">\n            <nav class=\"navbar ml-0 pl-0\">\n                <div class=\"navbar-collapse\">\n                    <ul class=\"navbar-nav\">\n                        <li class=\"pl-0\">\n                            <scrm-logo-ui></scrm-logo-ui>\n                        </li>\n                    </ul>\n                </div>\n            </nav>\n        </ng-container>\n\n        <!-- End of empty navbar section with logo -->\n\n        <!-- Start of mobile navigation section -->\n\n        <ng-container *ngIf=\"this.isUserLoggedIn && mobileNavbar\">\n            <ul class=\"navbar mobile-nav-block mobilenavbar\">\n                <div #myDrop=\"ngbDropdown\" [autoClose]=\"false\" class=\"position-static\" ngbDropdown>\n                    <button aria-controls=\"navbar\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"\n                            class=\"navbar-toggler\"\n                            ngbDropdownToggle type=\"button\">\n                        <scrm-image class=\" responsive-menu-toggler\" image=\"hamburger\"></scrm-image>\n                    </button>\n                    <div [@mobileNavFade] class=\"mobile-nav-dropdown w-100\" ngbDropdownMenu>\n                        <ng-container *ngIf=\"navbar && navbar.menu && navbar.menu.length\">\n                            <scrm-mobile-menu [all]=\"navbar.all.modules\"\n                                              [current]=\"navbar.current\"\n                                              [items]=\"navbar.menu\"\n                                              [navigationType]=\"vm.userPreferences['navigation_paradigm'] || ''\"\n                                              [onClose]=\"getCloseCallBack(myDrop)\"\n                            >\n                            </scrm-mobile-menu>\n                        </ng-container>\n\n                    </div>\n                </div>\n                <div class=\"global-links\" ngbDropdown>\n                    <li (click)=\"myDrop.close()\" class=\"global-link-item\">\n                        <a #mobileGlobalLinkTitle class=\"nav-link primary-global-link dropdown-toggle\" ngbDropdownToggle>\n                            <scrm-image class=\"global-action-icon sicon-2x\" image=\"user\"></scrm-image>\n                            {{ navbar.currentUser.firstName }} {{navbar.currentUser.lastName}}\n                        </a>\n                        <div [style.min-width.px]=\"mobileGlobalLinkTitle.offsetWidth\" aria-labelledby=\"navbarDropdownMenuLink\"\n                             class=\"dropdown-menu global-links-dropdown\" ngbDropdownMenu>\n                            <ng-template [ngIf]=\"navbar.globalActions\">\n                                <a *ngFor=\"let globalAction of navbar.globalActions\"\n                                   class=\"dropdown-item global-links-sublink\"\n                                   href=\"{{ globalAction.link.url }}\"\n                                   ngbDropdownItem\n                                   target=\"{{ globalAction.link.target }}\">{{ globalAction.link.label }}\n                                </a>\n                            </ng-template>\n                            <scrm-logout-ui></scrm-logout-ui>\n                        </div>\n                    </li>\n                </div>\n            </ul>\n            <scrm-action-bar-ui></scrm-action-bar-ui>\n\n        </ng-container>\n\n        <!-- End of mobile navigation section-->\n\n        <!-- Start of navbar section with data once authenticated -->\n\n        <ng-container *ngIf=\"this.isUserLoggedIn && !mobileNavbar\">\n            <nav class=\"navbar navbar-expand-md navbar-1\">\n                <div [ngbCollapse]=\"mainNavCollapse\" class=\"navbar-collapse collapse collapsenav\">\n                    <scrm-home-menu-item\n                        [active]=\"vm.appState.module && vm.appState.module === 'home'\"\n                        [route]=\"getHomePage()\"\n                    ></scrm-home-menu-item>\n\n                    <!-- Navbar with grouped tabs -->\n\n                    <ng-container *ngIf=\"vm.userPreferences['navigation_paradigm'] == 'gm'\">\n\n                        <ul class=\"navbar-nav grouped\">\n\n                            <li *ngIf=\"navbar.current\" class=\"top-nav nav-item dropdown non-grouped active\">\n                                <scrm-menu-item [item]=\"navbar.current\" [languages]=\"vm.languages\"></scrm-menu-item>\n                            </li>\n\n                            <li *ngFor=\"let item of navbar.menu\" class=\"top-nav nav-item dropdown main-grouped\">\n                                <scrm-grouped-menu-item\n                                    [item]=\"item\"\n                                    [languages]=\"vm.languages\"\n                                    [subNavCollapse]=\"subNavCollapse\"\n                                >\n                                </scrm-grouped-menu-item>\n\n                            </li>\n                        </ul>\n\n                        <scrm-menu-items-list [items]=\"navbar.all.modules\"\n                                              [label]=\"vm.languages.appStrings['LBL_TABGROUP_ALL'] || ''\">\n                        </scrm-menu-items-list>\n\n                    </ng-container>\n\n\n                    <!-- END Navbar with grouped tabs -->\n\n                    <!-- Navbar with non-grouped tabs -->\n\n                    <ng-container *ngIf=\"vm.userPreferences['navigation_paradigm'] != 'gm'\">\n\n                        <ul class=\"navbar-nav\">\n                            <li *ngIf=\"navbar.current\" class=\"top-nav nav-item dropdown non-grouped active\">\n                                <scrm-menu-item [item]=\"navbar.current\" [languages]=\"vm.languages\"></scrm-menu-item>\n                            </li>\n                            <li *ngFor=\"let item of navbar.menu\" class=\"top-nav nav-item dropdown non-grouped\">\n                                <scrm-menu-item [item]=\"item\" [languages]=\"vm.languages\"></scrm-menu-item>\n                            </li>\n                        </ul>\n\n                        <scrm-menu-items-list [items]=\"navbar.all.modules\"\n                                              [label]=\"vm.languages.appStrings['LBL_MORE'] || ''\">\n                        </scrm-menu-items-list>\n\n                    </ng-container>\n\n                    <!-- END Navbar with non-grouped tabs -->\n\n                </div>\n\n\n                <!-- Global Links -->\n\n                <div class=\"global-links\" ngbDropdown>\n                    <ul class=\"navbar-nav\">\n                        <li class=\"global-link-item\">\n                            <a #globalLinkTitle class=\"nav-link primary-global-link dropdown-toggle\" ngbDropdownToggle>\n                                <scrm-image class=\"global-action-icon sicon-2x\" image=\"user\"></scrm-image>\n                                <span class=\"global-user-name\"> {{ navbar.currentUser.firstName }} {{navbar.currentUser.lastName}} </span>\n                            </a>\n                            <div [style.min-width.px]=\"globalLinkTitle.offsetWidth\" aria-labelledby=\"navbarDropdownMenuLink\"\n                                 class=\"dropdown-menu global-links-dropdown dropdown-menu-right\" ngbDropdownMenu>\n                                <ng-container *ngIf=\"navbar.globalActions\">\n                                    <a *ngFor=\"let globalAction of navbar.globalActions\"\n                                       class=\"dropdown-item global-links-sublink\"\n                                       href=\"{{ globalAction.link.url }}\"\n                                       ngbDropdownItem\n                                       target=\"{{ globalAction.link.target }}\">{{ globalAction.link.label }}\n                                    </a>\n                                </ng-container>\n                                <scrm-logout-ui></scrm-logout-ui>\n                            </div>\n                        </li>\n                    </ul>\n                </div>\n\n                <!-- END Global Links -->\n\n            </nav>\n\n            <!-- End of navbar section with data once authenticated -->\n\n            <scrm-action-bar-ui></scrm-action-bar-ui>\n        </ng-container>\n    </ng-container>\n</div>\n\n<!-- End of main navbar section -->\n",
                    animations: [
                        animations.trigger('mobileNavFade', [
                            animations.transition(':enter', animations.useAnimation(ngAnimate.fadeIn, {
                                params: { timing: 0.5, delay: 0 }
                            })),
                        ])
                    ]
                },] }
    ];
    BaseNavbarComponent.ctorParameters = function () { return [
        { type: NavigationStore },
        { type: LanguageStore },
        { type: UserPreferenceStore },
        { type: SystemConfigStore },
        { type: AppStateStore },
        { type: AuthService },
        { type: ModuleNavigation },
        { type: ScreenSizeObserverService }
    ]; };
    BaseNavbarComponent.propDecorators = {
        onResize: [{ type: i0.HostListener, args: ['window:resize', ['$event'],] }]
    };

    var NavbarRegistry = /** @class */ (function (_super) {
        __extends(NavbarRegistry, _super);
        function NavbarRegistry() {
            return _super.call(this) || this;
        }
        NavbarRegistry.prototype.initDefault = function () {
            this.register('default', 'default', BaseNavbarComponent);
        };
        return NavbarRegistry;
    }(i5.BaseComponentRegistry));
    NavbarRegistry.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function NavbarRegistry_Factory() { return new NavbarRegistry(); }, token: NavbarRegistry, providedIn: "root" });
    NavbarRegistry.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    NavbarRegistry.ctorParameters = function () { return []; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var NavbarUiComponent = /** @class */ (function () {
        function NavbarUiComponent(registry) {
            this.registry = registry;
        }
        Object.defineProperty(NavbarUiComponent.prototype, "getType", {
            get: function () {
                return this.registry.get('default', 'default');
            },
            enumerable: false,
            configurable: true
        });
        return NavbarUiComponent;
    }());
    NavbarUiComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-navbar-ui',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n\n<ndc-dynamic [ndcDynamicComponent]=\"getType\"></ndc-dynamic>\n"
                },] }
    ];
    NavbarUiComponent.ctorParameters = function () { return [
        { type: NavbarRegistry }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var LogoUiComponent = /** @class */ (function () {
        function LogoUiComponent() {
        }
        return LogoUiComponent;
    }());
    LogoUiComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-logo-ui',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<scrm-image image=\"company_logo\" class=\"logo\"></scrm-image>\n"
                },] }
    ];

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var LogoUiModule = /** @class */ (function () {
        function LogoUiModule() {
        }
        return LogoUiModule;
    }());
    LogoUiModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [LogoUiComponent],
                    exports: [LogoUiComponent],
                    imports: [
                        common.CommonModule,
                        ImageModule
                    ]
                },] }
    ];

    var LogoutUiComponent = /** @class */ (function () {
        function LogoutUiComponent(auth, languageStore) {
            this.auth = auth;
            this.languageStore = languageStore;
            this.logout = {
                logoutAction: {
                    label: 'LBL_LOGOUT'
                }
            };
            this.languages$ = this.languageStore.vm$;
            this.vm$ = rxjs.combineLatest([
                this.languages$,
            ]).pipe(operators.map(function (_a) {
                var _b = __read(_a, 1), languages = _b[0];
                return ({
                    appStrings: languages.appStrings || {},
                    appListStrings: languages.appListStrings || {}
                });
            }));
        }
        /**
         * call logout
         */
        LogoutUiComponent.prototype.doLogout = function () {
            this.auth.logout();
        };
        return LogoutUiComponent;
    }());
    LogoutUiComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-logout-ui',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<ng-container *ngIf=\"(vm$ | async) as vm\">\n    <a class=\"dropdown-item global-links-sublink\"\n       (click)=\"doLogout()\">{{vm.appStrings[logout.logoutAction.label] || ''}}</a>\n</ng-container>\n<!-- this component should be used in navigation bar / bottom of user action menu -->\n"
                },] }
    ];
    LogoutUiComponent.ctorParameters = function () { return [
        { type: AuthService },
        { type: LanguageStore }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var LogoutUiModule = /** @class */ (function () {
        function LogoutUiModule() {
        }
        return LogoutUiModule;
    }());
    LogoutUiModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [LogoutUiComponent],
                    exports: [LogoutUiComponent],
                    imports: [
                        common.CommonModule,
                    ]
                },] }
    ];

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var BaseMenuItemLinkComponent = /** @class */ (function () {
        function BaseMenuItemLinkComponent() {
        }
        return BaseMenuItemLinkComponent;
    }());
    BaseMenuItemLinkComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-base-menu-item-link',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<a *ngIf=\"link.route\"\n   [ngClass]=\"class\"\n   [queryParams]=\"link.params\"\n   [routerLink]=\"link.route\"\n>\n    <scrm-image *ngIf=\"icon\" image=\"{{ icon }}\"></scrm-image>\n    {{ link.label }}\n</a>\n<a *ngIf=\"!link.route\"\n   [href]=\"link.url\"\n   [ngClass]=\"class\"\n>\n    <scrm-image *ngIf=\"icon\" image=\"{{ icon }}\"></scrm-image>\n    {{ link.label }}\n</a>\n\n"
                },] }
    ];
    BaseMenuItemLinkComponent.ctorParameters = function () { return []; };
    BaseMenuItemLinkComponent.propDecorators = {
        link: [{ type: i0.Input }],
        icon: [{ type: i0.Input }],
        class: [{ type: i0.Input }]
    };

    var MenuItemLinkRegistry = /** @class */ (function (_super) {
        __extends(MenuItemLinkRegistry, _super);
        function MenuItemLinkRegistry() {
            return _super.call(this) || this;
        }
        MenuItemLinkRegistry.prototype.initDefault = function () {
            this.register('default', 'default', BaseMenuItemLinkComponent);
        };
        return MenuItemLinkRegistry;
    }(i5.BaseComponentRegistry));
    MenuItemLinkRegistry.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function MenuItemLinkRegistry_Factory() { return new MenuItemLinkRegistry(); }, token: MenuItemLinkRegistry, providedIn: "root" });
    MenuItemLinkRegistry.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    MenuItemLinkRegistry.ctorParameters = function () { return []; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var MenuItemLinkComponent = /** @class */ (function () {
        function MenuItemLinkComponent(registry) {
            this.registry = registry;
        }
        Object.defineProperty(MenuItemLinkComponent.prototype, "getType", {
            get: function () {
                return this.registry.get('default', 'default');
            },
            enumerable: false,
            configurable: true
        });
        return MenuItemLinkComponent;
    }());
    MenuItemLinkComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-menu-item-link',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<ndc-dynamic *ngIf=\"getType\"\n             [ndcDynamicComponent]=\"getType\"\n             [ndcDynamicInputs]=\"{'link': link, 'icon': icon, 'class': class}\">\n</ndc-dynamic>\n\n"
                },] }
    ];
    MenuItemLinkComponent.ctorParameters = function () { return [
        { type: MenuItemLinkRegistry }
    ]; };
    MenuItemLinkComponent.propDecorators = {
        link: [{ type: i0.Input }],
        icon: [{ type: i0.Input }],
        class: [{ type: i0.Input }]
    };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var BaseGroupedMenuItemComponent = /** @class */ (function () {
        function BaseGroupedMenuItemComponent() {
        }
        return BaseGroupedMenuItemComponent;
    }());
    BaseGroupedMenuItemComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-base-grouped-menu-item',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<ng-container>\n    <span data-target=\".navbar-collapse\" data-toggle=\"collapse\">\n        <a class=\"top-nav-link nav-link-grouped dropdown-toggle\" data-toggle=\"dropdown\">\n            {{ item.link.label }}\n        </a>\n    </span>\n\n    <ul [ngbCollapse]=\"subNavCollapse\"\n        aria-labelledby=\"navbarDropdownMenuLink\"\n        class=\"dropdown-menu main\"\n    >\n        <li *ngFor=\"let sub of item.submenu\" class=\"nav-item dropdown-submenu submenu\">\n\n            <scrm-menu-item-link [class]=\"{\n                                    'sub-nav-link': true,\n                                    'nav-link': true,\n                                    'action-link': true,\n                                    'dropdown-item': sub.submenu.length,\n                                    'dropdown-toggle': sub.submenu.length\n                                  }\"\n                                 [link]=\"sub.link\"\n            >\n            </scrm-menu-item-link>\n\n            <ul *ngIf=\"sub.submenu.length\" class=\"dropdown-menu submenu\">\n\n                <li *ngFor=\"let subitem of sub.submenu\" class=\"nav-item\">\n\n                    <scrm-menu-item-link [class]=\"'submenu-nav-link nav-link action-link'\"\n                                         [icon]=\"subitem.icon\"\n                                         [link]=\"subitem.link\">\n                    </scrm-menu-item-link>\n                </li>\n                <li>\n                    <scrm-menu-recently-viewed [languages]=\"languages\"\n                                               [records]=\"sub.recentRecords\"></scrm-menu-recently-viewed>\n                </li>\n            </ul>\n        </li>\n    </ul>\n</ng-container>\n"
                },] }
    ];
    BaseGroupedMenuItemComponent.ctorParameters = function () { return []; };
    BaseGroupedMenuItemComponent.propDecorators = {
        item: [{ type: i0.Input }],
        languages: [{ type: i0.Input }],
        subNavCollapse: [{ type: i0.Input }]
    };

    var GroupedMenuItemRegistry = /** @class */ (function (_super) {
        __extends(GroupedMenuItemRegistry, _super);
        function GroupedMenuItemRegistry() {
            return _super.call(this) || this;
        }
        GroupedMenuItemRegistry.prototype.initDefault = function () {
            this.register('default', 'default', BaseGroupedMenuItemComponent);
        };
        return GroupedMenuItemRegistry;
    }(i5.BaseComponentRegistry));
    GroupedMenuItemRegistry.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function GroupedMenuItemRegistry_Factory() { return new GroupedMenuItemRegistry(); }, token: GroupedMenuItemRegistry, providedIn: "root" });
    GroupedMenuItemRegistry.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    GroupedMenuItemRegistry.ctorParameters = function () { return []; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var GroupedMenuItemComponent = /** @class */ (function () {
        function GroupedMenuItemComponent(registry) {
            this.registry = registry;
        }
        Object.defineProperty(GroupedMenuItemComponent.prototype, "getType", {
            get: function () {
                return this.registry.get('default', 'default');
            },
            enumerable: false,
            configurable: true
        });
        return GroupedMenuItemComponent;
    }());
    GroupedMenuItemComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-grouped-menu-item',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<ndc-dynamic *ngIf=\"getType\"\n             [ndcDynamicComponent]=\"getType\"\n             [ndcDynamicInputs]=\"{'item': item, 'languages': languages, 'subNavCollapse': subNavCollapse}\">\n</ndc-dynamic>\n"
                },] }
    ];
    GroupedMenuItemComponent.ctorParameters = function () { return [
        { type: GroupedMenuItemRegistry }
    ]; };
    GroupedMenuItemComponent.propDecorators = {
        item: [{ type: i0.Input }],
        languages: [{ type: i0.Input }],
        subNavCollapse: [{ type: i0.Input }]
    };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var BaseMenuItemsListComponent = /** @class */ (function () {
        function BaseMenuItemsListComponent() {
        }
        return BaseMenuItemsListComponent;
    }());
    BaseMenuItemsListComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-base-menu-items-list',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<ul *ngIf=\"items && items.length > 0\" class=\"navbar-nav nav-collapsed-items\">\n\n    <li class=\"top-nav nav-item dropdown non-grouped\">\n\n        <a class=\"nav-link-nongrouped dropdown-toggle\">{{label}}</a>\n\n        <div aria-labelledby=\"navbarDropdownMenuLink\"\n             class=\"dropdown-menu more-menu submenu\"\n        >\n            <div *ngFor=\"let item of items\" class=\"nav-item\">\n                <scrm-menu-item-link [class]=\"'nav-link action-link'\" [link]=\"item.link\">\n                </scrm-menu-item-link>\n            </div>\n        </div>\n    </li>\n</ul>\n"
                },] }
    ];
    BaseMenuItemsListComponent.ctorParameters = function () { return []; };
    BaseMenuItemsListComponent.propDecorators = {
        items: [{ type: i0.Input }],
        label: [{ type: i0.Input }]
    };

    var MenuItemsListRegistry = /** @class */ (function (_super) {
        __extends(MenuItemsListRegistry, _super);
        function MenuItemsListRegistry() {
            return _super.call(this) || this;
        }
        MenuItemsListRegistry.prototype.initDefault = function () {
            this.register('default', 'default', BaseMenuItemsListComponent);
        };
        return MenuItemsListRegistry;
    }(i5.BaseComponentRegistry));
    MenuItemsListRegistry.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function MenuItemsListRegistry_Factory() { return new MenuItemsListRegistry(); }, token: MenuItemsListRegistry, providedIn: "root" });
    MenuItemsListRegistry.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    MenuItemsListRegistry.ctorParameters = function () { return []; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var MenuItemsListComponent = /** @class */ (function () {
        function MenuItemsListComponent(registry) {
            this.registry = registry;
        }
        Object.defineProperty(MenuItemsListComponent.prototype, "getType", {
            get: function () {
                return this.registry.get('default', 'default');
            },
            enumerable: false,
            configurable: true
        });
        return MenuItemsListComponent;
    }());
    MenuItemsListComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-menu-items-list',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<ndc-dynamic *ngIf=\"getType\"\n             [ndcDynamicComponent]=\"getType\"\n             [ndcDynamicInputs]=\"{'items': items, 'label': label}\">\n</ndc-dynamic>\n\n"
                },] }
    ];
    MenuItemsListComponent.ctorParameters = function () { return [
        { type: MenuItemsListRegistry }
    ]; };
    MenuItemsListComponent.propDecorators = {
        items: [{ type: i0.Input }],
        label: [{ type: i0.Input }]
    };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var BaseMenuRecentlyViewedComponent = /** @class */ (function () {
        function BaseMenuRecentlyViewedComponent() {
        }
        return BaseMenuRecentlyViewedComponent;
    }());
    BaseMenuRecentlyViewedComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-base-menu-recently-viewed',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<ng-container *ngIf=\"records && records.length\">\n    <h4 class=\"recently-viewed-header\">{{languages.appStrings['LBL_LAST_VIEWED'] || ''}}</h4>\n    <div *ngFor=\"let recentRecord of records\" class=\"nav-item\">\n        <a [href]=\"recentRecord.url\" class=\"nav-link action-link\">{{ recentRecord.summary }}</a>\n    </div>\n</ng-container>\n"
                },] }
    ];
    BaseMenuRecentlyViewedComponent.ctorParameters = function () { return []; };
    BaseMenuRecentlyViewedComponent.propDecorators = {
        records: [{ type: i0.Input }],
        languages: [{ type: i0.Input }]
    };

    var MenuRecentlyViewedRegistry = /** @class */ (function (_super) {
        __extends(MenuRecentlyViewedRegistry, _super);
        function MenuRecentlyViewedRegistry() {
            return _super.call(this) || this;
        }
        MenuRecentlyViewedRegistry.prototype.initDefault = function () {
            this.register('default', 'default', BaseMenuRecentlyViewedComponent);
        };
        return MenuRecentlyViewedRegistry;
    }(i5.BaseComponentRegistry));
    MenuRecentlyViewedRegistry.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function MenuRecentlyViewedRegistry_Factory() { return new MenuRecentlyViewedRegistry(); }, token: MenuRecentlyViewedRegistry, providedIn: "root" });
    MenuRecentlyViewedRegistry.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    MenuRecentlyViewedRegistry.ctorParameters = function () { return []; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var MenuRecentlyViewedComponent = /** @class */ (function () {
        function MenuRecentlyViewedComponent(registry) {
            this.registry = registry;
        }
        Object.defineProperty(MenuRecentlyViewedComponent.prototype, "getType", {
            get: function () {
                return this.registry.get('default', 'default');
            },
            enumerable: false,
            configurable: true
        });
        return MenuRecentlyViewedComponent;
    }());
    MenuRecentlyViewedComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-menu-recently-viewed',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<ndc-dynamic *ngIf=\"getType\"\n             [ndcDynamicComponent]=\"getType\"\n             [ndcDynamicInputs]=\"{'records': records, 'languages': languages}\">\n</ndc-dynamic>\n"
                },] }
    ];
    MenuRecentlyViewedComponent.ctorParameters = function () { return [
        { type: MenuRecentlyViewedRegistry }
    ]; };
    MenuRecentlyViewedComponent.propDecorators = {
        records: [{ type: i0.Input }],
        languages: [{ type: i0.Input }]
    };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var BaseHomeMenuItemComponent = /** @class */ (function () {
        function BaseHomeMenuItemComponent() {
        }
        return BaseHomeMenuItemComponent;
    }());
    BaseHomeMenuItemComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-base-home-menu-item',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<ul class=\"navbar-nav home-nav\">\n    <li [class.active]=\"active\" class=\"nav-item\">\n        <a [routerLink]=\"route\" class=\"home-nav-link\">\n            <scrm-image class=\"home-icon\" image=\"home\"></scrm-image>\n        </a>\n    </li>\n</ul>\n"
                },] }
    ];
    BaseHomeMenuItemComponent.ctorParameters = function () { return []; };
    BaseHomeMenuItemComponent.propDecorators = {
        route: [{ type: i0.Input }],
        active: [{ type: i0.Input }]
    };

    var HomeMenuItemRegistry = /** @class */ (function (_super) {
        __extends(HomeMenuItemRegistry, _super);
        function HomeMenuItemRegistry() {
            return _super.call(this) || this;
        }
        HomeMenuItemRegistry.prototype.initDefault = function () {
            this.register('default', 'default', BaseHomeMenuItemComponent);
        };
        return HomeMenuItemRegistry;
    }(i5.BaseComponentRegistry));
    HomeMenuItemRegistry.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function HomeMenuItemRegistry_Factory() { return new HomeMenuItemRegistry(); }, token: HomeMenuItemRegistry, providedIn: "root" });
    HomeMenuItemRegistry.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    HomeMenuItemRegistry.ctorParameters = function () { return []; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var HomeMenuItemComponent = /** @class */ (function () {
        function HomeMenuItemComponent(registry) {
            this.registry = registry;
        }
        Object.defineProperty(HomeMenuItemComponent.prototype, "getType", {
            get: function () {
                return this.registry.get('default', 'default');
            },
            enumerable: false,
            configurable: true
        });
        return HomeMenuItemComponent;
    }());
    HomeMenuItemComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-home-menu-item',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<ndc-dynamic *ngIf=\"getType\"\n             [ndcDynamicComponent]=\"getType\"\n             [ndcDynamicInputs]=\"{'route': route, 'active': active}\">\n</ndc-dynamic>\n"
                },] }
    ];
    HomeMenuItemComponent.ctorParameters = function () { return [
        { type: HomeMenuItemRegistry }
    ]; };
    HomeMenuItemComponent.propDecorators = {
        route: [{ type: i0.Input }],
        active: [{ type: i0.Input }]
    };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var BaseMenuItemComponent = /** @class */ (function () {
        function BaseMenuItemComponent() {
        }
        return BaseMenuItemComponent;
    }());
    BaseMenuItemComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-base-menu-item',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<ng-container>\n    <span data-target=\".navbar-collapse\" data-toggle=\"collapse\">\n\n        <scrm-menu-item-link\n            [class]=\"{\n                    'top-nav-link': true,\n                    'nav-link-nongrouped': true,\n                    'dropdown-toggle': item.submenu.length\n                }\"\n            [link]=\"item.link\">\n        </scrm-menu-item-link>\n\n    </span>\n    <div *ngIf=\"item.submenu.length\"\n         aria-labelledby=\"navbarDropdownMenuLink\"\n         class=\"dropdown-menu submenu\">\n\n        <div *ngFor=\"let sub of item.submenu\" class=\"nav-item\">\n\n            <scrm-menu-item-link\n                [class]=\"'sub-nav-link nav-link action-link'\"\n                [icon]=\"sub.icon\"\n                [link]=\"sub.link\">\n            </scrm-menu-item-link>\n\n        </div>\n\n        <scrm-menu-recently-viewed [languages]=\"languages\" [records]=\"item.recentRecords\"></scrm-menu-recently-viewed>\n    </div>\n</ng-container>\n"
                },] }
    ];
    BaseMenuItemComponent.ctorParameters = function () { return []; };
    BaseMenuItemComponent.propDecorators = {
        item: [{ type: i0.Input }],
        languages: [{ type: i0.Input }]
    };

    var MenuItemRegistry = /** @class */ (function (_super) {
        __extends(MenuItemRegistry, _super);
        function MenuItemRegistry() {
            return _super.call(this) || this;
        }
        MenuItemRegistry.prototype.initDefault = function () {
            this.register('default', 'default', BaseMenuItemComponent);
        };
        return MenuItemRegistry;
    }(i5.BaseComponentRegistry));
    MenuItemRegistry.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function MenuItemRegistry_Factory() { return new MenuItemRegistry(); }, token: MenuItemRegistry, providedIn: "root" });
    MenuItemRegistry.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    MenuItemRegistry.ctorParameters = function () { return []; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var MenuItemComponent = /** @class */ (function () {
        function MenuItemComponent(registry) {
            this.registry = registry;
        }
        Object.defineProperty(MenuItemComponent.prototype, "getType", {
            get: function () {
                return this.registry.get('default', 'default');
            },
            enumerable: false,
            configurable: true
        });
        return MenuItemComponent;
    }());
    MenuItemComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-menu-item',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n\n<ndc-dynamic *ngIf=\"getType\"\n             [ndcDynamicComponent]=\"getType\"\n             [ndcDynamicInputs]=\"{'item': item, 'languages': languages}\">\n</ndc-dynamic>\n"
                },] }
    ];
    MenuItemComponent.ctorParameters = function () { return [
        { type: MenuItemRegistry }
    ]; };
    MenuItemComponent.propDecorators = {
        item: [{ type: i0.Input }],
        languages: [{ type: i0.Input }]
    };

    var BaseMobileMenuComponent = /** @class */ (function () {
        function BaseMobileMenuComponent() {
            this.navigationType = '';
            this.submenu = [];
            this.subNavigationType = 'mm';
            this.backLink = false;
            this.mobileSubNav = false;
            this.mainNavLink = true;
        }
        BaseMobileMenuComponent.prototype.ngOnInit = function () {
            this.mainItems = this.items;
            if (this.navigationType !== 'gm' && this.current) {
                this.mainItems = __spreadArray([this.current], __read(this.items));
            }
        };
        /**
         * Change subnavigation
         *
         * @param {object} event triggered
         * @param {object} items
         * @param navigationType
         */
        BaseMobileMenuComponent.prototype.changeSubNav = function (event, items, navigationType) {
            this.mobileSubNav = !this.mobileSubNav;
            this.backLink = !this.backLink;
            this.mainNavLink = !this.mainNavLink;
            this.submenu = items;
            this.subNavigationType = navigationType;
        };
        /**
         * Set link flags
         */
        BaseMobileMenuComponent.prototype.navBackLink = function () {
            this.mobileSubNav = !this.mobileSubNav;
            this.backLink = !this.backLink;
            this.mainNavLink = !this.mainNavLink;
        };
        BaseMobileMenuComponent.prototype.getItems = function () {
        };
        return BaseMobileMenuComponent;
    }());
    BaseMobileMenuComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-base-mobile-menu',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n\n\n<ng-container *ngIf=\"backLink\">\n    <li (click)=\"navBackLink()\" class=\"d-flex align-items-center mobile-back-row\">\n        <scrm-image class=\"sicon-xs mobile-nav-arrow pl-3 pr-3\"\n                    image=\"arrow_left_filled\">\n        </scrm-image>\n        <a class=\"mobile-back-link pl-1 pr-3 pt-2 pb-2\">\n            <scrm-label labelKey=\"LBL_BACK\"></scrm-label>\n        </a>\n    </li>\n</ng-container>\n\n<ng-container *ngIf=\"mainItems && mainItems.length\">\n    <ng-container *ngIf=\"mainNavLink\">\n        <div class=\"mobile-menu-items\">\n\n            <li (click)=\"changeSubNav($event, item.submenu, navigationType)\" *ngFor=\"let item of mainItems\"\n                class=\" d-flex align-items-center\">\n                <a class=\"flex-grow-1 mobile-nav-link pl-3 pr-3 pt-2 pb-2\">{{ item.link.label }}</a>\n                <scrm-image class=\"sicon-xs mobile-nav-arrow pl-3 pr-3\" image=\"arrow_right_filled\"\n                ></scrm-image>\n            </li>\n\n            <ng-container>\n                <li (click)=\"changeSubNav($event, all, 'gm')\"\n                    class=\" d-flex align-items-center\">\n                    <a class=\"flex-grow-1 mobile-nav-link pl-3 pr-3 pt-2 pb-2\">\n                        <scrm-label labelKey=\"LBL_MORE\"></scrm-label>\n                    </a>\n                    <scrm-image class=\"sicon-xs mobile-nav-arrow pl-3 pr-3\" image=\"arrow_right_filled\"\n                    ></scrm-image>\n                </li>\n            </ng-container>\n        </div>\n    </ng-container>\n\n    <ng-container *ngIf=\"mobileSubNav\">\n\n        <ng-container *ngIf=\"subNavigationType !== 'gm'\">\n\n            <scrm-mobile-module-menu [items]=\"submenu\" [onClose]=\"onClose\"></scrm-mobile-module-menu>\n\n        </ng-container>\n\n        <ng-container *ngIf=\"subNavigationType === 'gm'\">\n\n            <scrm-mobile-grouped-menu [items]=\"submenu\" [onClose]=\"onClose\"></scrm-mobile-grouped-menu>\n\n        </ng-container>\n\n    </ng-container>\n\n</ng-container>\n\n<li>\n    <a (click)=\"onClose && onClose()\" class=\"mobile-nav-close clicable pl-3 pr-3 pt-2 pb-2 w-100\">\n        <scrm-image class=\"sicon mobile-nav-close\" image=\"cross_bold\"></scrm-image>\n        <span class=\"nav-close-text\">\n            <scrm-label labelKey=\"LBL_CLOSE_MENU\"></scrm-label>\n        </span>\n    </a>\n</li>\n\n"
                },] }
    ];
    BaseMobileMenuComponent.ctorParameters = function () { return []; };
    BaseMobileMenuComponent.propDecorators = {
        current: [{ type: i0.Input }],
        items: [{ type: i0.Input }],
        all: [{ type: i0.Input }],
        onClose: [{ type: i0.Input }],
        navigationType: [{ type: i0.Input }]
    };

    var MobileMenuRegistry = /** @class */ (function (_super) {
        __extends(MobileMenuRegistry, _super);
        function MobileMenuRegistry() {
            return _super.call(this) || this;
        }
        MobileMenuRegistry.prototype.initDefault = function () {
            this.register('default', 'default', BaseMobileMenuComponent);
        };
        return MobileMenuRegistry;
    }(i5.BaseComponentRegistry));
    MobileMenuRegistry.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function MobileMenuRegistry_Factory() { return new MobileMenuRegistry(); }, token: MobileMenuRegistry, providedIn: "root" });
    MobileMenuRegistry.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    MobileMenuRegistry.ctorParameters = function () { return []; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var MobileMenuComponent = /** @class */ (function () {
        function MobileMenuComponent(registry) {
            this.registry = registry;
            this.navigationType = '';
        }
        Object.defineProperty(MobileMenuComponent.prototype, "getType", {
            get: function () {
                return this.registry.get('default', 'default');
            },
            enumerable: false,
            configurable: true
        });
        return MobileMenuComponent;
    }());
    MobileMenuComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-mobile-menu',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<ndc-dynamic *ngIf=\"getType\"\n             [ndcDynamicComponent]=\"getType\"\n             [ndcDynamicInputs]=\"{\n                'current': current,\n                'items': items,\n                'all': all,\n                'onClose': onClose,\n                'navigationType': navigationType\n             }\">\n</ndc-dynamic>\n"
                },] }
    ];
    MobileMenuComponent.ctorParameters = function () { return [
        { type: MobileMenuRegistry }
    ]; };
    MobileMenuComponent.propDecorators = {
        current: [{ type: i0.Input }],
        items: [{ type: i0.Input }],
        all: [{ type: i0.Input }],
        onClose: [{ type: i0.Input }],
        navigationType: [{ type: i0.Input }]
    };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var BaseMobileGroupedMenuComponent = /** @class */ (function () {
        function BaseMobileGroupedMenuComponent() {
        }
        return BaseMobileGroupedMenuComponent;
    }());
    BaseMobileGroupedMenuComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-base-mobile-grouped-menu',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<div class=\"mobile-menu-items\">\n    <ngb-accordion [closeOthers]=\"true\">\n\n        <ng-container *ngFor=\"let item of items\">\n\n            <ngb-panel *ngIf=\"!item.submenu || !item.submenu.length\"\n                       [cardClass]=\"'mobile-nav-group-item disabled'\"\n                       [disabled]=\"true\">\n\n                <ng-template ngbPanelHeader>\n                    <li (click)=\"onClose && onClose()\"\n                        class=\"\">\n                        <scrm-menu-item-link\n                            [class]=\"'mobile-nav-link dropdown-item action-link pl-5 pr-3 pt-2 pb-2'\"\n                            [icon]=\"item.icon || ''\"\n                            [link]=\"item.link\"></scrm-menu-item-link>\n                    </li>\n                </ng-template>\n\n            </ngb-panel>\n\n            <ngb-panel *ngIf=\"item.submenu && item.submenu.length\"\n                       [title]=\"item.link.label\"\n                       cardClass=\"mobile-nav-group-item\">\n\n                <ng-template ngbPanelContent>\n\n                    <li (click)=\"onClose && onClose()\"\n                        *ngFor=\"let subitem of item.submenu\"\n                        class=\"ml-4\">\n                        <scrm-menu-item-link\n                            [class]=\"'mobile-nav-link action-link pl-1 pr-3 pt-2 pb-2 w-100'\"\n                            [icon]=\"subitem.icon || ''\"\n                            [link]=\"subitem.link\"></scrm-menu-item-link>\n                    </li>\n\n                    <ng-template\n                        [ngIf]=\"item.recentRecords && item.recentRecords.length\">\n                        <h4 class=\"recently-viewed-header\">RECENTLY VIEWED</h4>\n                        <li *ngFor=\"let rec of item.recentRecords\" class=\"nav-item\">\n                            <a class=\"mobile-nav-link action-link\"\n                               href=\"#/{{ rec.showSelectModalmoduleName }}/{{ rec.itemId }}\">{{ rec.itemSummary }}</a>\n                        </li>\n                    </ng-template>\n\n                </ng-template>\n            </ngb-panel>\n\n        </ng-container>\n\n    </ngb-accordion>\n</div>\n\n"
                },] }
    ];
    BaseMobileGroupedMenuComponent.ctorParameters = function () { return []; };
    BaseMobileGroupedMenuComponent.propDecorators = {
        items: [{ type: i0.Input }],
        onClose: [{ type: i0.Input }]
    };

    var MobileGroupedMenuRegistry = /** @class */ (function (_super) {
        __extends(MobileGroupedMenuRegistry, _super);
        function MobileGroupedMenuRegistry() {
            return _super.call(this) || this;
        }
        MobileGroupedMenuRegistry.prototype.initDefault = function () {
            this.register('default', 'default', BaseMobileGroupedMenuComponent);
        };
        return MobileGroupedMenuRegistry;
    }(i5.BaseComponentRegistry));
    MobileGroupedMenuRegistry.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function MobileGroupedMenuRegistry_Factory() { return new MobileGroupedMenuRegistry(); }, token: MobileGroupedMenuRegistry, providedIn: "root" });
    MobileGroupedMenuRegistry.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    MobileGroupedMenuRegistry.ctorParameters = function () { return []; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var MobileGroupedMenuComponent = /** @class */ (function () {
        function MobileGroupedMenuComponent(registry) {
            this.registry = registry;
        }
        Object.defineProperty(MobileGroupedMenuComponent.prototype, "getType", {
            get: function () {
                return this.registry.get('default', 'default');
            },
            enumerable: false,
            configurable: true
        });
        return MobileGroupedMenuComponent;
    }());
    MobileGroupedMenuComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-mobile-grouped-menu',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<ndc-dynamic *ngIf=\"getType\"\n             [ndcDynamicComponent]=\"getType\"\n             [ndcDynamicInputs]=\"{'items': items, 'onClose': onClose}\">\n</ndc-dynamic>\n"
                },] }
    ];
    MobileGroupedMenuComponent.ctorParameters = function () { return [
        { type: MobileGroupedMenuRegistry }
    ]; };
    MobileGroupedMenuComponent.propDecorators = {
        items: [{ type: i0.Input }],
        onClose: [{ type: i0.Input }]
    };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var BaseMobileModuleMenuComponent = /** @class */ (function () {
        function BaseMobileModuleMenuComponent() {
        }
        return BaseMobileModuleMenuComponent;
    }());
    BaseMobileModuleMenuComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-base-mobile-module-menu',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n\n<ng-container *ngFor=\"let item of items\">\n    <div class=\"mobile-menu-items\">\n        <li (click)=\"onClose && onClose()\" class=\"\">\n            <scrm-menu-item-link\n                [class]=\"'mobile-nav-link dropdown-item action-link pl-3 pr-3 pt-2 pb-2'\"\n                [icon]=\"item.icon || ''\"\n                [link]=\"item.link\">\n            </scrm-menu-item-link>\n        </li>\n    </div>\n</ng-container>\n\n"
                },] }
    ];
    BaseMobileModuleMenuComponent.ctorParameters = function () { return []; };
    BaseMobileModuleMenuComponent.propDecorators = {
        items: [{ type: i0.Input }],
        onClose: [{ type: i0.Input }]
    };

    var MobileModuleMenuRegistry = /** @class */ (function (_super) {
        __extends(MobileModuleMenuRegistry, _super);
        function MobileModuleMenuRegistry() {
            return _super.call(this) || this;
        }
        MobileModuleMenuRegistry.prototype.initDefault = function () {
            this.register('default', 'default', BaseMobileModuleMenuComponent);
        };
        return MobileModuleMenuRegistry;
    }(i5.BaseComponentRegistry));
    MobileModuleMenuRegistry.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function MobileModuleMenuRegistry_Factory() { return new MobileModuleMenuRegistry(); }, token: MobileModuleMenuRegistry, providedIn: "root" });
    MobileModuleMenuRegistry.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    MobileModuleMenuRegistry.ctorParameters = function () { return []; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var MobileModuleMenuComponent = /** @class */ (function () {
        function MobileModuleMenuComponent(registry) {
            this.registry = registry;
        }
        Object.defineProperty(MobileModuleMenuComponent.prototype, "getType", {
            get: function () {
                return this.registry.get('default', 'default');
            },
            enumerable: false,
            configurable: true
        });
        return MobileModuleMenuComponent;
    }());
    MobileModuleMenuComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-mobile-module-menu',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<ndc-dynamic *ngIf=\"getType\"\n             [ndcDynamicComponent]=\"getType\"\n             [ndcDynamicInputs]=\"{'items': items, 'onClose': onClose}\">\n</ndc-dynamic>\n"
                },] }
    ];
    MobileModuleMenuComponent.ctorParameters = function () { return [
        { type: MobileModuleMenuRegistry }
    ]; };
    MobileModuleMenuComponent.propDecorators = {
        items: [{ type: i0.Input }],
        onClose: [{ type: i0.Input }]
    };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var NavbarUiModule = /** @class */ (function () {
        function NavbarUiModule() {
        }
        return NavbarUiModule;
    }());
    NavbarUiModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [
                        NavbarUiComponent,
                        MenuItemComponent,
                        BaseMenuItemComponent,
                        MenuRecentlyViewedComponent,
                        BaseMenuRecentlyViewedComponent,
                        HomeMenuItemComponent,
                        MenuItemLinkComponent,
                        BaseHomeMenuItemComponent,
                        BaseMenuItemLinkComponent,
                        GroupedMenuItemComponent,
                        BaseGroupedMenuItemComponent,
                        MenuItemsListComponent,
                        BaseMenuItemsListComponent,
                        BaseNavbarComponent,
                        MobileMenuComponent,
                        BaseMobileMenuComponent,
                        MobileGroupedMenuComponent,
                        BaseMobileGroupedMenuComponent,
                        MobileModuleMenuComponent,
                        BaseMobileModuleMenuComponent
                    ],
                    exports: [
                        NavbarUiComponent,
                        MenuItemComponent,
                        BaseMenuItemComponent,
                        MenuRecentlyViewedComponent,
                        BaseMenuRecentlyViewedComponent,
                        HomeMenuItemComponent,
                        MenuItemLinkComponent,
                        BaseHomeMenuItemComponent,
                        BaseMenuItemLinkComponent,
                        GroupedMenuItemComponent,
                        BaseGroupedMenuItemComponent,
                        MenuItemsListComponent,
                        BaseMenuItemsListComponent,
                        BaseNavbarComponent,
                        LogoutUiComponent,
                        MobileMenuComponent,
                        BaseMobileMenuComponent,
                        MobileGroupedMenuComponent,
                        BaseMobileGroupedMenuComponent,
                        MobileModuleMenuComponent,
                        BaseMobileModuleMenuComponent
                    ],
                    imports: [
                        common.CommonModule,
                        LogoUiModule,
                        LogoutUiModule,
                        ActionBarUiModule,
                        i1$2.NgbModule,
                        i2.RouterModule,
                        ImageModule,
                        ngDynamicComponent.DynamicModule,
                        LabelModule
                    ]
                },] }
    ];

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var HomeUiModule = /** @class */ (function () {
        function HomeUiModule() {
        }
        return HomeUiModule;
    }());
    HomeUiModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [
                        HomeUiComponent
                    ],
                    exports: [
                        HomeUiComponent
                    ],
                    imports: [
                        i2.RouterModule.forChild(HomeUiRoutes),
                        NavbarUiModule,
                        FooterUiModule,
                        common.CommonModule
                    ]
                },] }
    ];

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var alertTypes = {
        success: {
            alertClass: 'alert-success',
            alertIcon: 'info-circle'
        },
        error: {
            alertClass: 'alert-danger',
            alertIcon: 'exclamation-circle'
        },
        warning: {
            alertClass: 'alert-warning',
            alertIcon: 'exclamation-triangle'
        },
        info: {
            alertClass: 'alert-info',
            alertIcon: 'info-circle'
        },
        light: {
            alertClass: 'alert-light',
            alertIcon: 'exclamation-circle'
        }
    };
    var InstallErrorModalComponent = /** @class */ (function () {
        function InstallErrorModalComponent(appState, languageStore, modal) {
            this.appState = appState;
            this.languageStore = languageStore;
            this.modal = modal;
            this.titleKey = 'LBL_CHECKSYS_TITLE';
        }
        InstallErrorModalComponent.prototype.getHeaderLabel = function () {
            return this.languageStore.getFieldLabel('LBL_CHECKSYS_TITLE');
        };
        InstallErrorModalComponent.prototype.getColumnLabel = function (label) {
            var langLabel = this.languageStore.getFieldLabel(label, this.appState.getModule());
            return !i5.isEmptyString(langLabel) ? langLabel : label;
        };
        InstallErrorModalComponent.prototype.ngOnInit = function () {
            var _this = this;
            console.log(this.errors);
            this.closeButtonIcon = {
                klass: ['btn', 'btn-outline-light', 'btn-sm'],
                onClick: function () {
                    _this.modal.close({
                        type: 'close-button'
                    });
                }
            };
            this.closeButton = {
                klass: ['btn', 'modal-button-cancel'],
                labelKey: 'LBL_COLUMN_SELECTOR_CLOSE_BUTTON',
                onClick: function () {
                    _this.modal.close({
                        type: 'close-button'
                    });
                }
            };
        };
        InstallErrorModalComponent.prototype.getAlertType = function (alert) {
            if (alert.status === 'error') {
                return alertTypes[alert.type]['alertClass'];
            }
            return alertTypes[alert.status]['alertClass'];
        };
        InstallErrorModalComponent.prototype.getAlertIcon = function (alert) {
            if (alert.status === 'error') {
                return alertTypes[alert.type]['alertIcon'];
            }
            return alertTypes[alert.status]['alertIcon'];
        };
        InstallErrorModalComponent.prototype.returnZero = function () {
            return 0;
        };
        return InstallErrorModalComponent;
    }());
    InstallErrorModalComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-install-error-modal',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n\n<scrm-modal\n    [closable]=\"true\"\n    [close]=\"closeButtonIcon\"\n    [title]=\"getHeaderLabel()\"\n    [titleKey]=\"titleKey\"\n    [headerKlass]=\"'alert-header'\"\n    [bodyKlass]=\"'alert-body'\">\n\n    <div modal-body>\n        <ng-container>\n            <div *ngIf=\"errors['hasValidationError'] && errors['hasValidationError'] === true\"\n                 class=\"alert alert-danger\" role=\"alert\">\n\n                <div class=\"alert-heading\">\n                    <strong>{{getColumnLabel('LBL_CHECKSYS_TITLE')}}</strong>\n                </div>\n                <div class=\"alert-desc\">\n                    {{getColumnLabel('ERR_CHECKSYS')}}\n                </div>\n            </div>\n\n            <div>\n                <ul class=\"list-style-none\">\n\n                    <li *ngFor=\"let item of errors['data'] | keyvalue : returnZero\">\n\n                        <div class=\"alert {{getAlertType(item.value)}}\" role=\"alert\">\n\n                            <div>\n                                <span>\n                                    <scrm-image [image]=\"getAlertIcon(item.value)\"></scrm-image>\n                                    <strong style=\"margin-left: 2px;\">\n                                        {{getColumnLabel(item.value.label)}}\n                                    </strong>\n                                </span>\n\n                                <span *ngIf=\"item.value.info!==''\" style=\"float:right\">\n                                    <strong>\n                                        {{getColumnLabel(item.value.info)}}\n                                    </strong>\n                                </span>\n                            </div>\n\n                            <div *ngIf=\"item.value.error!==''\">\n                                {{getColumnLabel(item.value.error)}}\n                            </div>\n                        </div>\n\n                        <div *ngIf=\"item.value.data.length!==0\" class=\"alert alert-light\" role=\"alert\">\n                            <ul>\n                                <li *ngFor=\"let subItems of item.value.data\">\n                                    {{subItems}}\n                                </li>\n                            </ul>\n                        </div>\n\n                    </li>\n                </ul>\n            </div>\n        </ng-container>\n    </div>\n</scrm-modal>\n\n"
                },] }
    ];
    InstallErrorModalComponent.ctorParameters = function () { return [
        { type: AppStateStore },
        { type: LanguageStore },
        { type: i1$2.NgbActiveModal }
    ]; };
    InstallErrorModalComponent.propDecorators = {
        errors: [{ type: i0.Input }]
    };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var InstallErrorModalModule = /** @class */ (function () {
        function InstallErrorModalModule() {
        }
        return InstallErrorModalModule;
    }());
    InstallErrorModalModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [InstallErrorModalComponent],
                    exports: [InstallErrorModalComponent],
                    imports: [
                        common.CommonModule,
                        dragDrop.DragDropModule,
                        CloseButtonModule,
                        ModalModule,
                        LabelModule,
                        ButtonModule,
                        i1$2.NgbModule,
                        i1$2.NgbAlertModule,
                        ImageModule
                    ],
                    entryComponents: [InstallErrorModalComponent],
                    bootstrap: [InstallErrorModalComponent]
                },] }
    ];

    var SubpanelActionHandler = /** @class */ (function (_super) {
        __extends(SubpanelActionHandler, _super);
        function SubpanelActionHandler() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return SubpanelActionHandler;
    }(i5.ActionHandler));

    var SubpanelCreateAction = /** @class */ (function (_super) {
        __extends(SubpanelCreateAction, _super);
        function SubpanelCreateAction(moduleNameMapper, router) {
            var _this = _super.call(this) || this;
            _this.moduleNameMapper = moduleNameMapper;
            _this.router = router;
            _this.key = 'create';
            _this.modes = ['list'];
            return _this;
        }
        SubpanelCreateAction.prototype.run = function (data) {
            var _a, _b;
            var moduleName = data.module;
            var moduleAction = (_b = (_a = data === null || data === void 0 ? void 0 : data.action) === null || _a === void 0 ? void 0 : _a.moduleAction) !== null && _b !== void 0 ? _b : 'edit';
            var route = "/" + moduleName + "/" + moduleAction;
            var queryParams = {
                // eslint-disable-next-line camelcase,@typescript-eslint/camelcase
                return_module: this.moduleNameMapper.toLegacy(data.parentModule),
                // eslint-disable-next-line camelcase,@typescript-eslint/camelcase
                return_action: 'DetailView',
                // eslint-disable-next-line camelcase,@typescript-eslint/camelcase
                return_id: data.parentId || ''
            };
            this.addAdditionalFields(data, queryParams);
            this.addParams(data, queryParams);
            this.router.navigate([route], {
                queryParams: queryParams
            }).then();
        };
        SubpanelCreateAction.prototype.shouldDisplay = function () {
            return true;
        };
        /**
         * Add additional record fields
         *
         * @param {object} data SubpanelActionData
         * @param {object} queryParams Params map
         */
        SubpanelCreateAction.prototype.addAdditionalFields = function (data, queryParams) {
            var _a;
            var parentAttributes = (data.store.parentRecord && data.store.parentRecord.attributes) || {};
            if (!parentAttributes && !Object.keys(parentAttributes).length) {
                return;
            }
            var additionalFields = (_a = data.action.additionalFields) !== null && _a !== void 0 ? _a : {};
            var additionalFieldKeys = Object.keys(additionalFields) || [];
            additionalFieldKeys.forEach(function (additionalFieldKey) {
                if (!additionalFieldKey || !additionalFields[additionalFieldKey]) {
                    return;
                }
                var parentAttribute = additionalFields[additionalFieldKey];
                var attribute = get__default['default'](parentAttributes, parentAttribute, null);
                if (i5.isVoid(attribute)) {
                    return;
                }
                queryParams[additionalFieldKey] = attribute;
            });
        };
        /**
         * Add configuration defined params
         *
         * @param {object} data SubpanelActionData
         * @param {object} queryParams Params map
         */
        SubpanelCreateAction.prototype.addParams = function (data, queryParams) {
            var _a;
            var params = (_a = data.action.extraParams) !== null && _a !== void 0 ? _a : {};
            var paramKeys = Object.keys(params) || [];
            paramKeys.forEach(function (paramKey) {
                if (!paramKey || !params[paramKey]) {
                    return;
                }
                queryParams[paramKey] = params[paramKey];
            });
        };
        return SubpanelCreateAction;
    }(SubpanelActionHandler));
    SubpanelCreateAction.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function SubpanelCreateAction_Factory() { return new SubpanelCreateAction(i0__namespace.ɵɵinject(ModuleNameMapper), i0__namespace.ɵɵinject(i2__namespace.Router)); }, token: SubpanelCreateAction, providedIn: "root" });
    SubpanelCreateAction.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    SubpanelCreateAction.ctorParameters = function () { return [
        { type: ModuleNameMapper },
        { type: i2.Router }
    ]; };

    var EntityMutationGQL = /** @class */ (function () {
        function EntityMutationGQL(apollo) {
            this.apollo = apollo;
        }
        /**
         * Create record on the backend
         *
         * @param {string} graphqlEntityName to use
         * @param {string} entityName to use
         * @param {object} input values
         * @param {object} metadata with the fields to ask for
         *
         * @returns {object} Observable<any>
         */
        EntityMutationGQL.prototype.create = function (graphqlEntityName, entityName, input, metadata) {
            var fields = metadata.fields;
            var mutationOptions = {
                mutation: gql__default['default'](templateObject_1$2 || (templateObject_1$2 = __makeTemplateObject(["\n                mutation create", "($input: create", "Input!) {\n                  create", "(input: $input) {\n                    ", " {\n                      ", "\n                    }\n                    clientMutationId\n                  }\n                }\n            "], ["\n                mutation create", "($input: create", "Input!) {\n                  create", "(input: $input) {\n                    ", " {\n                      ", "\n                    }\n                    clientMutationId\n                  }\n                }\n            "])), entityName, entityName, entityName, graphqlEntityName, fields.join('\n')),
                variables: {
                    input: input
                },
            };
            return this.apollo.mutate(mutationOptions);
        };
        return EntityMutationGQL;
    }());
    EntityMutationGQL.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function EntityMutationGQL_Factory() { return new EntityMutationGQL(i0__namespace.ɵɵinject(i1__namespace.Apollo)); }, token: EntityMutationGQL, providedIn: "root" });
    EntityMutationGQL.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    EntityMutationGQL.ctorParameters = function () { return [
        { type: i1.Apollo }
    ]; };
    var templateObject_1$2;

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var blankProcess = {
        id: null,
        _id: null,
        status: null,
        async: null,
        type: null,
        options: null,
        messages: []
    };
    var ProcessService = /** @class */ (function () {
        function ProcessService(recordMutationGQL) {
            this.recordMutationGQL = recordMutationGQL;
            this.graphqlName = 'process';
            this.coreName = 'Process';
            this.createFieldsMetadata = {
                fields: [
                    '_id',
                    'status',
                    'async',
                    'type',
                    'messages',
                    'data'
                ]
            };
        }
        /**
         * Public Api
         */
        /**
         * Submit and action/process request
         * Returns observable
         *
         * @param {string} type to create
         * @param {object} options to send
         * @returns {object} Observable<any>
         */
        ProcessService.prototype.submit = function (type, options) {
            return this.create(type, options);
        };
        /**
         * Internal API
         */
        /**
         * Create a process on the backend
         *
         * @param {string} type to create
         * @param {object} options to send
         * @returns {object} Observable<any>
         */
        ProcessService.prototype.create = function (type, options) {
            var input = {
                type: type,
                options: options
            };
            return this.recordMutationGQL.create(this.graphqlName, this.coreName, input, this.createFieldsMetadata)
                .pipe(operators.map(function (_a) {
                var data = _a.data;
                var process = Object.assign({}, blankProcess);
                if (data.createProcess && data.createProcess.process) {
                    return data.createProcess.process;
                }
                return process;
            }));
        };
        return ProcessService;
    }());
    ProcessService.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function ProcessService_Factory() { return new ProcessService(i0__namespace.ɵɵinject(EntityMutationGQL)); }, token: ProcessService, providedIn: "root" });
    ProcessService.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root',
                },] }
    ];
    ProcessService.ctorParameters = function () { return [
        { type: EntityMutationGQL }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var AsyncActionHandler = /** @class */ (function () {
        function AsyncActionHandler() {
        }
        return AsyncActionHandler;
    }());

    var RedirectAsyncAction = /** @class */ (function (_super) {
        __extends(RedirectAsyncAction, _super);
        function RedirectAsyncAction(router, message) {
            var _this = _super.call(this) || this;
            _this.router = router;
            _this.message = message;
            _this.key = 'redirect';
            return _this;
        }
        RedirectAsyncAction.prototype.run = function (data) {
            if (!data || !data.route) {
                this.message.addDangerMessageByKey('LBL_MISSING_HANDLER_DATA_ROUTE');
                return;
            }
            var params = {
                queryParams: {}
            };
            if (data.queryParams) {
                params.queryParams = data.queryParams;
            }
            this.router.navigate([data.route], params).then();
        };
        return RedirectAsyncAction;
    }(AsyncActionHandler));
    RedirectAsyncAction.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function RedirectAsyncAction_Factory() { return new RedirectAsyncAction(i0__namespace.ɵɵinject(i2__namespace.Router), i0__namespace.ɵɵinject(MessageService)); }, token: RedirectAsyncAction, providedIn: "root" });
    RedirectAsyncAction.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    RedirectAsyncAction.ctorParameters = function () { return [
        { type: i2.Router },
        { type: MessageService }
    ]; };

    var ExportAsyncAction = /** @class */ (function (_super) {
        __extends(ExportAsyncAction, _super);
        function ExportAsyncAction(message) {
            var _this = _super.call(this) || this;
            _this.message = message;
            _this.key = 'export';
            return _this;
        }
        ExportAsyncAction.prototype.run = function (data) {
            if (!data || !data.url || !data.formData) {
                this.message.addDangerMessageByKey('LBL_MISSING_HANDLER_DATA_ROUTE');
                return;
            }
            var options = {
                responseType: 'blob',
                observe: 'response',
            };
            if (data.queryParams) {
                options.params = data.queryParams;
            }
            this.download(data.url, data.formData);
        };
        /**
         * Download file
         *
         * NOTE: using a hidden form instead of js for better memory management see:
         * https://github.com/eligrey/FileSaver.js/wiki/Saving-a-remote-file#using-a-form-element-other-than-get-methods
         *
         * @param {string} url for download
         * @param {object} formData to submit
         */
        ExportAsyncAction.prototype.download = function (url, formData) {
            var form = document.createElement('form');
            form.setAttribute('id', 'export-download');
            form.setAttribute('method', 'post');
            form.setAttribute('action', url);
            form.setAttribute('target', '_self');
            form.setAttribute('style', 'display: none;');
            Object.keys(formData).forEach(function (key) {
                var hiddenField = document.createElement('input');
                hiddenField.setAttribute('name', key);
                hiddenField.setAttribute('value', formData[key]);
                form.appendChild(hiddenField);
            });
            document.body.appendChild(form);
            form.submit();
            document.body.removeChild(form);
        };
        return ExportAsyncAction;
    }(AsyncActionHandler));
    ExportAsyncAction.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function ExportAsyncAction_Factory() { return new ExportAsyncAction(i0__namespace.ɵɵinject(MessageService)); }, token: ExportAsyncAction, providedIn: "root" });
    ExportAsyncAction.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    ExportAsyncAction.ctorParameters = function () { return [
        { type: MessageService }
    ]; };

    var NoopAsyncAction = /** @class */ (function (_super) {
        __extends(NoopAsyncAction, _super);
        function NoopAsyncAction() {
            var _this = _super.call(this) || this;
            _this.key = 'noop';
            return _this;
        }
        NoopAsyncAction.prototype.run = function (data) {
        };
        return NoopAsyncAction;
    }(AsyncActionHandler));
    NoopAsyncAction.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function NoopAsyncAction_Factory() { return new NoopAsyncAction(); }, token: NoopAsyncAction, providedIn: "root" });
    NoopAsyncAction.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    NoopAsyncAction.ctorParameters = function () { return []; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var IframeResizeHandlerHandler = /** @class */ (function () {
        function IframeResizeHandlerHandler() {
        }
        /**
         * Public Api
         */
        IframeResizeHandlerHandler.prototype.init = function (iframe) {
            this.iframe = iframe;
            this.initialSizeAdjustment();
            this.addBodyResizeListener();
        };
        IframeResizeHandlerHandler.prototype.destroy = function () {
            if (this.observer) {
                this.observer.disconnect();
            }
            this.iframe = null;
            this.observer = null;
        };
        /**
         * Protected Api
         */
        IframeResizeHandlerHandler.prototype.initialSizeAdjustment = function () {
            setTimeout(this.onResize.bind(this), 200);
        };
        IframeResizeHandlerHandler.prototype.addBodyResizeListener = function () {
            var _this = this;
            var watchedData = {
                document: this.iframe.contentWindow.document,
                element: this.iframe.contentWindow.document.body,
                height: this.iframe.contentWindow.document.body.scrollHeight,
                watched: [
                    {
                        getHeight: function () {
                            var modals = watchedData.document.getElementsByClassName('modal in');
                            var modal = modals && modals[0];
                            var modalDialog = modal && modal.firstElementChild;
                            return (modalDialog && (modalDialog.scrollHeight + 200)) || -1;
                        }
                    },
                    {
                        getHeight: function () {
                            var container = watchedData.document.getElementById('bootstrap-container');
                            var containerHeight = (container && container.scrollHeight + 150) || -1;
                            if (containerHeight > 0) {
                                return containerHeight;
                            }
                            return watchedData.element.scrollHeight + 50;
                        }
                    }
                ]
            };
            this.observer = (new observers.MutationObserverFactory()).create(function () {
                var heights = [];
                watchedData.watched.forEach(function (watched) {
                    var elHeight = watched.getHeight();
                    if (elHeight > 0) {
                        heights.push(elHeight);
                    }
                });
                heights.sort(function (a, b) { return a - b; });
                // consider the Height of the biggest
                var elementHeight = heights.pop();
                var feedback = _this.calculateResizing(watchedData.height, elementHeight);
                if (feedback.resized) {
                    watchedData.height = feedback.height;
                }
            });
            this.observer.observe(this.iframe.contentWindow.document.body, {
                attributes: true,
                childList: true,
                characterData: true,
                subtree: true
            });
        };
        IframeResizeHandlerHandler.prototype.calculateResizing = function (currentHeight, elementHeight) {
            var availableWindowHeight = window.innerHeight - 50;
            // if window size is bigger, take that size
            if (elementHeight < availableWindowHeight) {
                elementHeight = availableWindowHeight;
            }
            if (currentHeight === elementHeight) {
                return {
                    resized: false
                };
            }
            if (currentHeight < (elementHeight - 20)) {
                this.resizeIFrame(elementHeight);
                return {
                    resized: true,
                    height: elementHeight
                };
            }
            if (this.iframe.scrollHeight > elementHeight) {
                this.resizeIFrame(elementHeight);
                return {
                    resized: true,
                    height: elementHeight
                };
            }
            return {
                resized: false
            };
        };
        IframeResizeHandlerHandler.prototype.onResize = function () {
            var elementHeight = this.iframe.contentWindow.document.body.scrollHeight + 120;
            var currentHeight = this.iframe.offsetHeight;
            this.calculateResizing(currentHeight, elementHeight);
        };
        IframeResizeHandlerHandler.prototype.resizeIFrame = function (size) {
            var adjustedValue = size + 1;
            this.iframe.style.height = adjustedValue + 'px';
        };
        return IframeResizeHandlerHandler;
    }());

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var IframePageChangeObserver = /** @class */ (function () {
        function IframePageChangeObserver(iframe, changeCallback, loadCallback, unLoadCallback) {
            if (changeCallback === void 0) { changeCallback = null; }
            if (loadCallback === void 0) { loadCallback = null; }
            if (unLoadCallback === void 0) { unLoadCallback = null; }
            this.changeCallback = null;
            this.loadCallback = null;
            this.unLoadCallback = null;
            this.unloadListener = null;
            this.loadListener = null;
            this.iframe = iframe;
            this.changeCallback = changeCallback;
            this.loadCallback = loadCallback;
            this.unLoadCallback = unLoadCallback;
        }
        /**
         * Public Api
         */
        IframePageChangeObserver.prototype.init = function () {
            this.loadListener = this.loadHandler.bind(this);
            this.unloadListener = this.unloadHandler.bind(this);
            this.iframe.contentWindow.addEventListener('load', this.loadListener);
            this.iframe.contentWindow.removeEventListener('unload', this.unloadListener);
        };
        IframePageChangeObserver.prototype.destroy = function () {
            var contentWindow = this.iframe && this.iframe.contentWindow;
            if (contentWindow) {
                contentWindow.removeEventListener('unload', this.unloadListener);
                contentWindow.removeEventListener('load', this.loadListener);
            }
            this.iframe = null;
            this.lastDispatched = null;
            this.changeCallback = null;
            this.loadCallback = null;
            this.unLoadCallback = null;
            this.loadListener = null;
            this.unloadListener = null;
        };
        /**
         * Internal API
         */
        IframePageChangeObserver.prototype.loadHandler = function () {
            this.loadCallback();
            this.bindUnload();
        };
        IframePageChangeObserver.prototype.bindUnload = function () {
            this.iframe.contentWindow.removeEventListener('unload', this.unloadListener);
            this.unloadListener = this.unloadHandler.bind(this);
            this.iframe.contentWindow.addEventListener('unload', this.unloadListener);
        };
        IframePageChangeObserver.prototype.unloadHandler = function () {
            this.unLoadCallback();
            // Timeout needed because the URL changes immediately after
            // the `unload` event is dispatched.
            setTimeout(this.triggerPageChange.bind(this), 0);
        };
        IframePageChangeObserver.prototype.triggerPageChange = function () {
            var newHref = this.iframe && this.iframe.contentWindow && this.iframe.contentWindow.location.href;
            if (newHref && newHref !== this.lastDispatched) {
                this.lastDispatched = newHref;
                this.changeCallback(newHref);
            }
        };
        return IframePageChangeObserver;
    }());

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var ClassicModalComponent = /** @class */ (function () {
        function ClassicModalComponent(languageStore, activeModal) {
            this.languageStore = languageStore;
            this.activeModal = activeModal;
            this.url = '';
            this.titleKey = '';
            this.asyncActionCallback = null;
            this.iframe = null;
        }
        ClassicModalComponent.prototype.ngOnInit = function () {
            var _this = this;
            this.closeButton = {
                klass: ['btn', 'btn-outline-light', 'btn-sm'],
                onClick: function () {
                    _this.activeModal.close({
                        type: 'close-button'
                    });
                }
            };
        };
        ClassicModalComponent.prototype.ngAfterViewInit = function () {
            this.initIframe();
        };
        ClassicModalComponent.prototype.ngOnDestroy = function () {
            this.cleanObservers();
            this.iframe = null;
            var placeholder = this.wrapper;
            if (this.wrapper.firstChild) {
                placeholder.removeChild(placeholder.firstChild);
            }
            placeholder.innerHTML = '<iframe></iframe>';
            this.wrapper = null;
        };
        ClassicModalComponent.prototype.cleanObservers = function () {
            if (this.iframeResizeHandler) {
                this.iframeResizeHandler.destroy();
                this.iframeResizeHandler = null;
            }
            if (this.iframePageChangeHandler) {
                this.iframePageChangeHandler.destroy();
                this.iframePageChangeHandler = null;
            }
        };
        ClassicModalComponent.prototype.initIframe = function () {
            this.wrapper = this.dataContainer.nativeElement;
            if (this.wrapper.firstChild) {
                this.wrapper.removeChild(this.wrapper.firstChild);
            }
            var iframe = document.createElement('iframe');
            iframe.src = this.url;
            this.wrapper.appendChild(iframe);
            this.iframe = iframe;
            this.iframe.style.display = 'block';
            this.initObservers();
        };
        ClassicModalComponent.prototype.initObservers = function () {
            this.iframePageChangeHandler = this.buildIframePageChangeObserver();
            this.iframeResizeHandler = this.buildIframeResizeHandlerHandler();
            if (this.iframePageChangeHandler) {
                this.iframePageChangeHandler.init();
            }
        };
        ClassicModalComponent.prototype.onIFrameLoad = function () {
            // Do not show scroll at any time, to avoid flickering
            this.iframe.contentWindow.document.body.style.overflow = 'hidden';
            // callback function to execute custom task
            // as required by the caller
            if (this.asyncActionCallback !== null) {
                this.asyncActionCallback(this.iframe);
            }
            // Init resize handler
            this.iframeResizeHandler.init(this.iframe);
        };
        ClassicModalComponent.prototype.onIFrameUnload = function () {
            // hide iframe, while being re-directed
            this.iframe.style.display = 'none';
            this.iframeResizeHandler.destroy();
        };
        ClassicModalComponent.prototype.buildIframePageChangeObserver = function () {
            return new IframePageChangeObserver(this.iframe, null, this.onIFrameLoad.bind(this), this.onIFrameUnload.bind(this));
        };
        ClassicModalComponent.prototype.buildIframeResizeHandlerHandler = function () {
            return new IframeResizeHandlerHandler();
        };
        return ClassicModalComponent;
    }());
    ClassicModalComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-classic-modal',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n\n<scrm-modal [closable]=\"true\"\n            [close]=\"closeButton\"\n            [titleKey]=\"titleKey\"\n            bodyKlass=\"m-0 small-font\"\n            footerKlass=\"border-0\"\n            klass=\"classic-view-modal\">\n\n    <div modal-body>\n\n        <div class=\"classic-view-container\" #dataContainer>\n            <iframe></iframe>\n        </div>\n\n    </div>\n\n</scrm-modal>\n",
                    animations: [
                        animations.trigger('modalFade', [
                            animations.transition('void <=> *', [
                                animations.animate('800ms')
                            ]),
                        ]),
                    ]
                },] }
    ];
    ClassicModalComponent.ctorParameters = function () { return [
        { type: LanguageStore },
        { type: i1$2.NgbActiveModal }
    ]; };
    ClassicModalComponent.propDecorators = {
        url: [{ type: i0.Input }],
        titleKey: [{ type: i0.Input }],
        asyncActionCallback: [{ type: i0.Input }],
        dataContainer: [{ type: i0.ViewChild, args: ['dataContainer', { static: true },] }]
    };

    var ChangelogAsyncAction = /** @class */ (function (_super) {
        __extends(ChangelogAsyncAction, _super);
        function ChangelogAsyncAction(router, modalService, message) {
            var _this = _super.call(this) || this;
            _this.router = router;
            _this.modalService = modalService;
            _this.message = message;
            _this.key = 'audit';
            return _this;
        }
        ChangelogAsyncAction.prototype.run = function (data) {
            if (!data || !data.url) {
                this.message.addDangerMessageByKey('LBL_MISSING_HANDLER_DATA_ROUTE');
                return;
            }
            this.showClassicViewModal(data.url);
        };
        /**
         * Remove title text from iframe source document
         */
        ChangelogAsyncAction.prototype.changeLogLegacyContentFormatter = function (iframeElement) {
            if (!iframeElement) {
                return;
            }
            var node = iframeElement.contentDocument.getElementsByClassName('moduleTitle')[0];
            if (!node) {
                return;
            }
            node.innerText = '';
        };
        /**
         * Show record selection modal
         */
        ChangelogAsyncAction.prototype.showClassicViewModal = function (url) {
            var modal = this.modalService.open(ClassicModalComponent, {
                size: 'xl',
                centered: true,
                scrollable: true
            });
            modal.componentInstance.titleKey = 'LBL_CHANGE_LOG';
            modal.componentInstance.url = url;
            modal.componentInstance.asyncActionCallback = this.changeLogLegacyContentFormatter.bind(this);
        };
        return ChangelogAsyncAction;
    }(AsyncActionHandler));
    ChangelogAsyncAction.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function ChangelogAsyncAction_Factory() { return new ChangelogAsyncAction(i0__namespace.ɵɵinject(i2__namespace.Router), i0__namespace.ɵɵinject(i1__namespace$3.NgbModal), i0__namespace.ɵɵinject(MessageService)); }, token: ChangelogAsyncAction, providedIn: "root" });
    ChangelogAsyncAction.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    ChangelogAsyncAction.ctorParameters = function () { return [
        { type: i2.Router },
        { type: i1$2.NgbModal },
        { type: MessageService }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var AsyncActionService = /** @class */ (function () {
        function AsyncActionService(processService, appStateStore, message, redirectAction, exportAction, noopAction, changelogAction) {
            this.processService = processService;
            this.appStateStore = appStateStore;
            this.message = message;
            this.redirectAction = redirectAction;
            this.exportAction = exportAction;
            this.noopAction = noopAction;
            this.changelogAction = changelogAction;
            this.actions = {};
            this.registerHandler(redirectAction);
            this.registerHandler(exportAction);
            this.registerHandler(noopAction);
            this.registerHandler(changelogAction);
        }
        AsyncActionService.prototype.registerHandler = function (handler) {
            this.actions[handler.key] = handler;
        };
        /**
         * Send action request
         *
         * @param {string} actionName to submit
         * @param {string} data to send
         * @param {string} presetHandlerKey to use
         * @returns {object} Observable<Process>
         */
        AsyncActionService.prototype.run = function (actionName, data, presetHandlerKey) {
            var _this = this;
            if (presetHandlerKey === void 0) { presetHandlerKey = null; }
            var options = Object.assign({}, data);
            this.appStateStore.updateLoading(actionName, true);
            return this.processService
                .submit(actionName, options)
                .pipe(operators.take(1), operators.tap(function (process) {
                _this.appStateStore.updateLoading(actionName, false);
                var handler = 'addSuccessMessageByKey';
                if (process.status === 'error') {
                    handler = 'addDangerMessageByKey';
                }
                if (process.messages) {
                    process.messages.forEach(function (message) {
                        if (!!message) {
                            _this.message[handler](message);
                        }
                    });
                }
                if (process.status === 'error') {
                    return;
                }
                var actionHandlerKey = presetHandlerKey || (process.data && process.data.handler) || null;
                if (!actionHandlerKey) {
                    return;
                }
                var actionHandler = _this.actions[actionHandlerKey];
                if (!actionHandler) {
                    _this.message.addDangerMessageByKey('LBL_MISSING_HANDLER');
                    return;
                }
                actionHandler.run(process.data.params);
            }), operators.catchError(function (err) {
                _this.message.addDangerMessageByKey('LBL_ACTION_ERROR');
                _this.appStateStore.updateLoading(actionName, false);
                throw err;
            }));
        };
        return AsyncActionService;
    }());
    AsyncActionService.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function AsyncActionService_Factory() { return new AsyncActionService(i0__namespace.ɵɵinject(ProcessService), i0__namespace.ɵɵinject(AppStateStore), i0__namespace.ɵɵinject(MessageService), i0__namespace.ɵɵinject(RedirectAsyncAction), i0__namespace.ɵɵinject(ExportAsyncAction), i0__namespace.ɵɵinject(NoopAsyncAction), i0__namespace.ɵɵinject(ChangelogAsyncAction)); }, token: AsyncActionService, providedIn: "root" });
    AsyncActionService.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root',
                },] }
    ];
    AsyncActionService.ctorParameters = function () { return [
        { type: ProcessService },
        { type: AppStateStore },
        { type: MessageService },
        { type: RedirectAsyncAction },
        { type: ExportAsyncAction },
        { type: NoopAsyncAction },
        { type: ChangelogAsyncAction }
    ]; };

    var SubpanelSelectAction = /** @class */ (function (_super) {
        __extends(SubpanelSelectAction, _super);
        function SubpanelSelectAction(modalService, message, asyncActionService) {
            var _this = _super.call(this) || this;
            _this.modalService = modalService;
            _this.message = message;
            _this.asyncActionService = asyncActionService;
            _this.key = 'select';
            _this.modes = ['list'];
            return _this;
        }
        SubpanelSelectAction.prototype.shouldDisplay = function (data) {
            return true;
        };
        SubpanelSelectAction.prototype.run = function (data) {
            this.showSelectModal(data);
        };
        /**
         * Show record selection modal
         */
        SubpanelSelectAction.prototype.showSelectModal = function (data) {
            var _this = this;
            var modal = this.modalService.open(RecordListModalComponent, { size: 'xl', scrollable: true });
            modal.componentInstance.module = data.module;
            modal.result.then(function (result) {
                if (!result || !result.selection || !result.selection.selected) {
                    return;
                }
                var record = _this.getSelectedRecord(result);
                var linkField = data.subpanelMeta.get_subpanel_data;
                var module = record.module || '';
                var collectionList = data.subpanelMeta.collection_list || null;
                if (collectionList && collectionList[module] && collectionList[module].get_subpanel_data) {
                    linkField = collectionList[module].get_subpanel_data;
                }
                var input = {
                    action: 'record-select',
                    module: data.store.parentModule,
                    id: data.store.parentId || '',
                    payload: {
                        baseModule: data.parentModule,
                        baseRecordId: data.parentId,
                        linkField: linkField,
                        relateModule: record.module,
                        relateRecordId: record.id
                    }
                };
                _this.runAsyncAction(input, data);
            });
        };
        /**
         * Get Selected Record
         *
         * @param {object} data RecordListModalResult
         * @returns {object} Record
         */
        SubpanelSelectAction.prototype.getSelectedRecord = function (data) {
            var id = '';
            Object.keys(data.selection.selected).some(function (selected) {
                id = selected;
                return true;
            });
            var record = null;
            data.records.some(function (rec) {
                if (rec && rec.id === id) {
                    record = rec;
                    return true;
                }
            });
            return record;
        };
        SubpanelSelectAction.prototype.runAsyncAction = function (asyncData, data) {
            var actionName = 'record-select';
            this.message.removeMessages();
            this.asyncActionService.run(actionName, asyncData).pipe(operators.take(1)).subscribe(function () {
                data.store.load(false).pipe(operators.take(1)).subscribe();
                data.store.loadAllStatistics(false).pipe(operators.take(1)).subscribe();
            });
        };
        return SubpanelSelectAction;
    }(SubpanelActionHandler));
    SubpanelSelectAction.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function SubpanelSelectAction_Factory() { return new SubpanelSelectAction(i0__namespace.ɵɵinject(i1__namespace$3.NgbModal), i0__namespace.ɵɵinject(MessageService), i0__namespace.ɵɵinject(AsyncActionService)); }, token: SubpanelSelectAction, providedIn: "root" });
    SubpanelSelectAction.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    SubpanelSelectAction.ctorParameters = function () { return [
        { type: i1$2.NgbModal },
        { type: MessageService },
        { type: AsyncActionService }
    ]; };

    var AsyncProcessSubpanelAction = /** @class */ (function (_super) {
        __extends(AsyncProcessSubpanelAction, _super);
        function AsyncProcessSubpanelAction() {
            var _this = _super.call(this) || this;
            _this.key = 'async-process';
            _this.modes = i5.ALL_VIEW_MODES;
            return _this;
        }
        AsyncProcessSubpanelAction.prototype.run = function (data) {
        };
        AsyncProcessSubpanelAction.prototype.shouldDisplay = function (data) {
            return true;
        };
        return AsyncProcessSubpanelAction;
    }(SubpanelActionHandler));
    AsyncProcessSubpanelAction.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function AsyncProcessSubpanelAction_Factory() { return new AsyncProcessSubpanelAction(); }, token: AsyncProcessSubpanelAction, providedIn: "root" });
    AsyncProcessSubpanelAction.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    AsyncProcessSubpanelAction.ctorParameters = function () { return []; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var SubpanelActionManager = /** @class */ (function () {
        function SubpanelActionManager(create, select, async) {
            this.create = create;
            this.select = select;
            this.async = async;
            this.actions = {};
            this.actions[create.key] = create;
            this.actions[select.key] = select;
            this.actions[async.key] = async;
        }
        SubpanelActionManager.prototype.run = function (action, data) {
            this.actions[action].run(data);
        };
        return SubpanelActionManager;
    }());
    SubpanelActionManager.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function SubpanelActionManager_Factory() { return new SubpanelActionManager(i0__namespace.ɵɵinject(SubpanelCreateAction), i0__namespace.ɵɵinject(SubpanelSelectAction), i0__namespace.ɵɵinject(AsyncProcessSubpanelAction)); }, token: SubpanelActionManager, providedIn: "root" });
    SubpanelActionManager.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root',
                },] }
    ];
    SubpanelActionManager.ctorParameters = function () { return [
        { type: SubpanelCreateAction },
        { type: SubpanelSelectAction },
        { type: AsyncProcessSubpanelAction }
    ]; };

    var LineActionMenuComponent = /** @class */ (function () {
        function LineActionMenuComponent(languageStore, actionManager, languages, screenSize, systemConfigStore) {
            this.languageStore = languageStore;
            this.actionManager = actionManager;
            this.languages = languages;
            this.screenSize = screenSize;
            this.systemConfigStore = systemConfigStore;
            this.klass = '';
            this.limitConfigKey = 'listview_line_actions_limits';
            this.configState = new rxjs.BehaviorSubject({ buttons: [] });
            this.config$ = this.configState.asObservable();
            this.buttonClass = 'line-action-item line-action';
            this.buttonGroupClass = 'float-right';
            this.subs = [];
            this.screen = exports.ScreenSize.Medium;
            this.defaultBreakpoint = 3;
        }
        LineActionMenuComponent.prototype.ngOnInit = function () {
            var _this = this;
            this.subs.push(rxjs.combineLatest([
                this.config.getActions({ record: this.record }),
                this.screenSize.screenSize$,
                this.languages.vm$
            ]).pipe(operators.map(function (_a) {
                var _b = __read(_a, 3), actions = _b[0], screenSize = _b[1], languages = _b[2];
                if (screenSize) {
                    _this.screen = screenSize;
                }
                _this.configState.next(_this.getButtonGroupConfig(actions));
                _this.actions = actions;
            })).subscribe());
        };
        LineActionMenuComponent.prototype.ngOnDestroy = function () {
            this.subs.forEach(function (sub) { return sub.unsubscribe(); });
        };
        LineActionMenuComponent.prototype.getButtonGroupConfig = function (actions) {
            var _this = this;
            var expanded = [];
            var collapsed = [];
            actions.forEach(function (action) {
                var button = _this.buildButton(action);
                if (action.params && action.params.expanded) {
                    expanded.push(button);
                    return;
                }
                collapsed.push(button);
            });
            var breakpoint = this.getBreakpoint();
            if (expanded.length < breakpoint) {
                breakpoint = expanded.length;
            }
            var buttons = expanded.concat(collapsed);
            return {
                buttonKlass: [this.buttonClass],
                dropdownLabel: this.languages.getAppString('LBL_ACTIONS') || '',
                breakpoint: breakpoint,
                dropdownOptions: {
                    placement: ['bottom-right'],
                    wrapperKlass: [(this.buttonGroupClass)]
                },
                buttons: buttons
            };
        };
        LineActionMenuComponent.prototype.getBreakpoint = function () {
            var breakpointMap = this.systemConfigStore.getConfigValue(this.limitConfigKey);
            if (this.screen && breakpointMap && breakpointMap[this.screen]) {
                this.breakpoint = breakpointMap[this.screen];
                return this.breakpoint;
            }
            if (this.breakpoint) {
                return this.breakpoint;
            }
            return this.defaultBreakpoint;
        };
        LineActionMenuComponent.prototype.buildButton = function (action) {
            var _this = this;
            var button = {
                titleKey: action.labelKey || '',
                klass: this.buttonClass,
                icon: action.icon || '',
                onClick: function () {
                    _this.config.runAction(action, {
                        module: (_this.record && _this.record.module) || '',
                        record: _this.record
                    });
                }
            };
            if (action.icon) {
                button.icon = action.icon;
            }
            if (action.status) {
                i5.Button.appendClasses(button, [action.status]);
            }
            return button;
        };
        return LineActionMenuComponent;
    }());
    LineActionMenuComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-line-action-menu',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<ng-container *ngIf=\"actions\">\n    <div id=\"line-action-div\" class=\"line-action float-right\">\n        <div class=\"{{klass}}\">\n            <scrm-button-group *ngIf=\"config$\" [config$]=\"config$\"></scrm-button-group>\n        </div>\n    </div>\n</ng-container>\n\n"
                },] }
    ];
    LineActionMenuComponent.ctorParameters = function () { return [
        { type: LanguageStore },
        { type: SubpanelActionManager },
        { type: LanguageStore },
        { type: ScreenSizeObserverService },
        { type: SystemConfigStore }
    ]; };
    LineActionMenuComponent.propDecorators = {
        klass: [{ type: i0.Input }],
        record: [{ type: i0.Input }],
        config: [{ type: i0.Input }],
        limitConfigKey: [{ type: i0.Input }]
    };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var LineActionModule = /** @class */ (function () {
        function LineActionModule() {
        }
        return LineActionModule;
    }());
    LineActionModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [LineActionMenuComponent],
                    exports: [LineActionMenuComponent],
                    imports: [
                        common.CommonModule,
                        i1$2.NgbModule,
                        ImageModule,
                        i2.RouterModule,
                        ButtonGroupModule,
                    ]
                },] }
    ];

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var LoadingSpinnerComponent = /** @class */ (function () {
        function LoadingSpinnerComponent() {
            this.overlay = false;
        }
        return LoadingSpinnerComponent;
    }());
    LoadingSpinnerComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-loading-spinner',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<div [class.overlay]=\"overlay\">\n    <div class=\"loading-spinner\">\n        <div class=\"sk-cube-grid\">\n            <div class=\"sk-cube sk-cube1 sk-cube-primary\"></div>\n            <div class=\"sk-cube sk-cube1 sk-cube-primary\"></div>\n            <div class=\"sk-cube sk-cube2 sk-cube-secondary\"></div>\n            <div class=\"sk-cube sk-cube3 sk-cube-secondary\"></div>\n            <div class=\"sk-cube sk-cube4 sk-cube-primary\"></div>\n            <div class=\"sk-cube sk-cube4 sk-cube-primary\"></div>\n            <div class=\"sk-cube sk-cube5 sk-cube-secondary\"></div>\n            <div class=\"sk-cube sk-cube6 sk-cube-secondary\"></div>\n            <div class=\"sk-cube sk-cube7 sk-cube-primary\"></div>\n            <div class=\"sk-cube sk-cube7 sk-cube-primary\"></div>\n            <div class=\"sk-cube sk-cube8 sk-cube-primary\"></div>\n            <div class=\"sk-cube sk-cube9 sk-cube-primary\"></div>\n            <div class=\"sk-cube sk-cube7 sk-cube-primary\"></div>\n            <div class=\"sk-cube sk-cube7 sk-cube-primary\"></div>\n            <div class=\"sk-cube sk-cube8 sk-cube-primary\"></div>\n            <div class=\"sk-cube sk-cube9 sk-cube-primary\"></div>\n        </div>\n    </div>\n</div>\n\n",
                    styles: [".sk-cube-grid{width:6.25em;height:6.25em}.sk-cube-grid .sk-cube{width:25%;height:25%;float:left;-webkit-animation:sk-cubeGridScaleDelay 1.3s infinite ease-in-out;animation:sk-cubeGridScaleDelay 1.3s infinite ease-in-out}.sk-cube-grid .sk-cube1{-webkit-animation-delay:.2s;animation-delay:.2s}.sk-cube-grid .sk-cube2{-webkit-animation-delay:.3s;animation-delay:.3s}.sk-cube-grid .sk-cube3{-webkit-animation-delay:.4s;animation-delay:.4s}.sk-cube-grid .sk-cube4{-webkit-animation-delay:.1s;animation-delay:.1s}.sk-cube-grid .sk-cube5{-webkit-animation-delay:.2s;animation-delay:.2s}.sk-cube-grid .sk-cube6{-webkit-animation-delay:.3s;animation-delay:.3s}.sk-cube-grid .sk-cube7{-webkit-animation-delay:0s;animation-delay:0s}.sk-cube-grid .sk-cube8{-webkit-animation-delay:.1s;animation-delay:.1s}.sk-cube-grid .sk-cube9{-webkit-animation-delay:.2s;animation-delay:.2s}@-webkit-keyframes sk-cubeGridScaleDelay{0%,70%,to{transform:scale(1)}35%{transform:scale(0)}}@keyframes sk-cubeGridScaleDelay{0%,70%,to{transform:scale(1)}35%{transform:scale(0)}}\n"]
                },] }
    ];
    LoadingSpinnerComponent.ctorParameters = function () { return []; };
    LoadingSpinnerComponent.propDecorators = {
        overlay: [{ type: i0.Input }]
    };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var LoadingSpinnerModule = /** @class */ (function () {
        function LoadingSpinnerModule() {
        }
        return LoadingSpinnerModule;
    }());
    LoadingSpinnerModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [
                        LoadingSpinnerComponent
                    ],
                    exports: [
                        LoadingSpinnerComponent
                    ],
                    imports: [
                        common.CommonModule
                    ]
                },] }
    ];

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var MessageUiComponent = /** @class */ (function () {
        function MessageUiComponent(messageService, languages) {
            this.messageService = messageService;
            this.languages = languages;
            this.appStrings$ = languages.appStrings$;
        }
        MessageUiComponent.prototype.ngOnInit = function () {
            this.messages$ = this.messageService.messages$;
        };
        MessageUiComponent.prototype.close = function (message) {
            this.messageService.contains(message, true);
        };
        return MessageUiComponent;
    }());
    MessageUiComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-message-ui',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<div class=\"container-fluid alert-fixed message-wrapper\" *ngIf=\"(appStrings$ | async) as appStrings\">\n    <div class=\"d-flex justify-content-center flex-column align-items-center message-container\"\n         *ngIf=\"(messages$ | async) as items\">\n        <div *ngFor=\"let message of items\"\n             (click)=\"close(message)\"\n             class=\"message {{ message.type }} alert-dismissible fade show shadow\"\n             [@fade]\n             role=\"alert\">\n            <ng-container *ngIf=\"message.labelKey\">{{appStrings[message.labelKey] || ''}}</ng-container>\n            <ng-container *ngIf=\"message.text\">{{message.text}}</ng-container>\n            <a (click)=\"close(message)\" type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n                <span aria-hidden=\"true\">&times;</span>\n            </a>\n        </div>\n    </div>\n</div>\n",
                    animations: [
                        animations.trigger('fade', [
                            animations.transition(':enter', animations.useAnimation(ngAnimate.fadeIn, {
                                params: { timing: 0.5, delay: 0 }
                            })),
                            animations.transition(':leave', animations.useAnimation(ngAnimate.fadeOut, {
                                params: { timing: 0.5, delay: 0 }
                            })),
                        ])
                    ]
                },] }
    ];
    MessageUiComponent.ctorParameters = function () { return [
        { type: MessageService },
        { type: LanguageStore }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var MessageUiModule = /** @class */ (function () {
        function MessageUiModule() {
        }
        return MessageUiModule;
    }());
    MessageUiModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [MessageUiComponent],
                    exports: [MessageUiComponent],
                    imports: [
                        common.CommonModule,
                    ]
                },] }
    ];

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var ClassicModalModule = /** @class */ (function () {
        function ClassicModalModule() {
        }
        return ClassicModalModule;
    }());
    ClassicModalModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [ClassicModalComponent],
                    imports: [
                        common.CommonModule,
                        ModalModule,
                    ]
                },] }
    ];

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var MessageModalComponent = /** @class */ (function () {
        function MessageModalComponent(activeModal) {
            this.activeModal = activeModal;
            this.buttons = [];
        }
        MessageModalComponent.prototype.ngOnInit = function () {
            var _this = this;
            this.buttonGroup$ = rxjs.of({
                buttons: this.buttons
            });
            this.closeButton = {
                klass: ['btn', 'btn-outline-light', 'btn-sm'],
                onClick: function () {
                    _this.activeModal.close({
                        type: 'close-button'
                    });
                }
            };
        };
        return MessageModalComponent;
    }());
    MessageModalComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-message-modal',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<scrm-modal [closable]=\"true\"\n            [close]=\"closeButton\"\n            [title]=\"titleKey || ''\"\n            klass=\"message-modal\">\n\n    <div class=\"p-3\" modal-body>\n        <span><scrm-label [labelKey]=\"textKey\"></scrm-label></span>\n    </div>\n\n    <div modal-footer>\n        <scrm-modal-button-group [activeModal]=\"activeModal\"\n                                 [config$]=\"buttonGroup$\">\n        </scrm-modal-button-group>\n    </div>\n</scrm-modal>\n",
                    animations: [
                        animations.trigger('modalFade', [
                            animations.transition('void <=> *', [
                                animations.animate('800ms')
                            ]),
                        ]),
                    ]
                },] }
    ];
    MessageModalComponent.ctorParameters = function () { return [
        { type: i1$2.NgbActiveModal }
    ]; };
    MessageModalComponent.propDecorators = {
        titleKey: [{ type: i0.Input }],
        textKey: [{ type: i0.Input }],
        buttons: [{ type: i0.Input }]
    };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var ModalButtonGroupComponent = /** @class */ (function () {
        function ModalButtonGroupComponent(buttonUtils, config) {
            this.buttonUtils = buttonUtils;
            this.config = config;
            this.activeModal = null;
            this.defaultButtonGroup = {
                breakpoint: 4,
                wrapperKlass: ['modal-buttons'],
                buttonKlass: ['modal-button', 'btn', 'btn-sm'],
                buttons: []
            };
            var ui = this.config.getConfigValue('ui');
            if (ui && ui.modal_button_group_breakpoint) {
                this.defaultButtonGroup.breakpoint = ui.modal_buttons_collapse_breakpoint;
            }
        }
        ModalButtonGroupComponent.prototype.ngOnInit = function () {
            var _this = this;
            if (this.config$) {
                this.buttonGroup$ = this.config$.pipe(operators.map(function (config) { return _this.mapButtonGroup(config); }));
            }
        };
        ModalButtonGroupComponent.prototype.mapButtonGroup = function (config) {
            var group = defaults__default['default'](Object.assign({}, config), i5.deepClone(this.defaultButtonGroup));
            this.mapButtons(group);
            return group;
        };
        ModalButtonGroupComponent.prototype.mapButtons = function (group) {
            var _this = this;
            var buttons = group.buttons || [];
            group.buttons = [];
            if (buttons.length > 0) {
                buttons.forEach(function (modalButton) {
                    var button = _this.buttonUtils.addOnClickPartial(modalButton, _this.activeModal);
                    group.buttons.push(button);
                });
            }
        };
        return ModalButtonGroupComponent;
    }());
    ModalButtonGroupComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-modal-button-group',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<scrm-button-group [config$]=\"buttonGroup$\"></scrm-button-group>\n"
                },] }
    ];
    ModalButtonGroupComponent.ctorParameters = function () { return [
        { type: ButtonUtils },
        { type: SystemConfigStore }
    ]; };
    ModalButtonGroupComponent.propDecorators = {
        config$: [{ type: i0.Input }],
        activeModal: [{ type: i0.Input }]
    };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var ModalButtonGroupModule = /** @class */ (function () {
        function ModalButtonGroupModule() {
        }
        return ModalButtonGroupModule;
    }());
    ModalButtonGroupModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [ModalButtonGroupComponent],
                    exports: [
                        ModalButtonGroupComponent
                    ],
                    imports: [
                        common.CommonModule,
                        ButtonGroupModule
                    ]
                },] }
    ];

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var MessageModalModule = /** @class */ (function () {
        function MessageModalModule() {
        }
        return MessageModalModule;
    }());
    MessageModalModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [MessageModalComponent],
                    exports: [MessageModalComponent],
                    imports: [
                        common.CommonModule,
                        ModalModule,
                        ButtonGroupModule,
                        LabelModule,
                        ModalButtonGroupModule,
                        i1$2.NgbModule
                    ]
                },] }
    ];

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var ModuleTitleComponent = /** @class */ (function () {
        function ModuleTitleComponent() {
            this.title = '';
        }
        return ModuleTitleComponent;
    }());
    ModuleTitleComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-module-title',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n{{title | uppercase}}\n"
                },] }
    ];
    ModuleTitleComponent.propDecorators = {
        title: [{ type: i0.Input }]
    };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var ModuleTitleModule = /** @class */ (function () {
        function ModuleTitleModule() {
        }
        return ModuleTitleModule;
    }());
    ModuleTitleModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [ModuleTitleComponent],
                    exports: [ModuleTitleComponent],
                    imports: [
                        common.CommonModule,
                    ]
                },] }
    ];

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var LinkModel = /** @class */ (function () {
        function LinkModel() {
            this.target = exports.LinkTarget.none;
        }
        return LinkModel;
    }());

    var PaginationComponent = /** @class */ (function () {
        function PaginationComponent(languageStore) {
            this.languageStore = languageStore;
            this.appStrings$ = this.languageStore.appStrings$;
            this.vm$ = null;
        }
        PaginationComponent.prototype.ngOnInit = function () {
            var pageCount$ = this.state.getPaginationCount();
            this.vm$ = rxjs.combineLatest([this.appStrings$, pageCount$]).pipe(operators.map(function (_a) {
                var _b = __read(_a, 2), appStrings = _b[0], pageCount = _b[1];
                return ({ appStrings: appStrings, pageCount: pageCount });
            }));
        };
        PaginationComponent.prototype.first = function () {
            this.state.changePage(i5.PageSelection.FIRST);
        };
        PaginationComponent.prototype.previous = function () {
            this.state.changePage(i5.PageSelection.PREVIOUS);
        };
        PaginationComponent.prototype.next = function () {
            this.state.changePage(i5.PageSelection.NEXT);
        };
        PaginationComponent.prototype.last = function () {
            this.state.changePage(i5.PageSelection.LAST);
        };
        return PaginationComponent;
    }());
    PaginationComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-pagination',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<div class=\"bulk-action float-right\" *ngIf=\"(vm$ | async) as vm\">\n    <button class=\"pagination-button pagination-first\"\n            aria-label=\"Navigate to first page\"\n            (click)=\"first()\">\n        <scrm-image class=\"sicon-2x pagination-icons\" image=\"paginate_first\">\n        </scrm-image>\n    </button>\n    <button class=\"pagination-button pagination-previous\"\n            aria-label=\"Previous page\"\n            (click)=\"previous()\">\n        <scrm-image class=\"sicon-2x pagination-icons\" image=\"paginate_previous\">\n        </scrm-image>\n    </button>\n    <span class=\"pagination-count\"\n          [ngClass]=\"{\n            'hide-pagination-count': displayResponsiveTable\n          }\"\n    >\n      ({{vm.pageCount.pageFirst}}\n        - {{vm.pageCount.pageLast}} {{vm.appStrings['LBL_LIST_OF'] || ''}} {{vm.pageCount.total}})\n    </span>\n    <button class=\"pagination-button pagination-next\"\n            aria-label=\"Navigate to last page\"\n            (click)=\"next()\">\n        <scrm-image class=\"sicon-2x pagination-icons\" image=\"paginate_next\">\n        </scrm-image>\n    </button>\n    <button class=\"pagination-button pagination-last\"\n            aria-label=\"Next page\"\n            (click)=\"last()\">\n        <scrm-image class=\"sicon-2x pagination-icons\" image=\"paginate_last\">\n        </scrm-image>\n    </button>\n</div>\n"
                },] }
    ];
    PaginationComponent.ctorParameters = function () { return [
        { type: LanguageStore }
    ]; };
    PaginationComponent.propDecorators = {
        state: [{ type: i0.Input }]
    };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var PaginationModule = /** @class */ (function () {
        function PaginationModule() {
        }
        return PaginationModule;
    }());
    PaginationModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [PaginationComponent],
                    exports: [PaginationComponent],
                    imports: [
                        common.CommonModule,
                        ImageModule
                    ]
                },] }
    ];

    var RecordContentComponent = /** @class */ (function () {
        function RecordContentComponent(language) {
            this.language = language;
            this.config = {};
            this.active = 1;
            this.subs = [];
        }
        RecordContentComponent.prototype.ngOnInit = function () {
            var _this = this;
            this.subs.push(this.dataSource.getDisplayConfig().subscribe(function (config) {
                _this.config = Object.assign({}, config);
            }));
            this.subs.push(this.dataSource.getPanels().subscribe(function (panels) {
                _this.panels = __spreadArray([], __read(panels));
            }));
            this.subs.push(this.dataSource.getRecord().subscribe(function (record) {
                _this.record = Object.assign({}, record);
                _this.fields = record.fields;
            }));
        };
        RecordContentComponent.prototype.ngOnDestroy = function () {
            this.subs.forEach(function (sub) { return sub.unsubscribe(); });
        };
        RecordContentComponent.prototype.getLayoutDataSource = function (panel) {
            var _this = this;
            return {
                inlineEdit: true,
                getConfig: function () { return _this.dataSource.getDisplayConfig().pipe(operators.map(function (config) { return ({
                    mode: config.mode,
                    maxColumns: config.maxColumns,
                }); })); },
                getLayout: function () { return rxjs.of(panel).pipe(operators.shareReplay(1)); },
                getFields: function () { return _this.dataSource.getRecord().pipe(operators.map(function (record) { return (record.fields); })); },
                getRecord: function () { return _this.dataSource.getRecord(); },
                getEditAction: function () { return _this.dataSource.getEditAction(); }
            };
        };
        return RecordContentComponent;
    }());
    RecordContentComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-record-content',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<ng-container *ngIf=\"dataSource\">\n    <div *ngIf=\"config && config.layout === 'panels'\" class=\"record-content panel-layout container-fluid pl-0 pr-0\">\n        <div class=\"row no-gutters mb-3\" *ngFor=\"let panel of panels\">\n            <div class=\"col\">\n                <scrm-panel [title]=\"panel.label\" mode=\"collapsible\">\n                    <div panel-body class=\"panel-{{panel.key}}\">\n                        <scrm-field-layout [dataSource]=\"getLayoutDataSource(panel)\"></scrm-field-layout>\n                    </div>\n                </scrm-panel>\n            </div>\n        </div>\n\n    </div>\n\n    <div *ngIf=\"config && config.layout === 'tabs'\" class=\"record-content tabs-layout container-fluid pl-0 pr-0\">\n\n        <ul ngbNav #nav=\"ngbNav\" class=\"nav-tabs\" [(activeId)]=\"active\">\n            <li class=\"tab\" *ngFor=\"let panel of panels; index as i;\" [ngbNavItem]=\"i+1\">\n                <a class=\"tab-link\" ngbNavLink>{{panel.label}}</a>\n                <ng-template ngbNavContent>\n                    <div class=\"tab-{{panel.key}}\">\n                        <scrm-field-layout [dataSource]=\"getLayoutDataSource(panel)\"></scrm-field-layout>\n                    </div>\n                </ng-template>\n            </li>\n        </ul>\n        <div [ngbNavOutlet]=\"nav\" class=\"p-2 pt-3 rounded-right rounded-bottom\"></div>\n\n    </div>\n\n</ng-container>\n"
                },] }
    ];
    RecordContentComponent.ctorParameters = function () { return [
        { type: LanguageStore }
    ]; };
    RecordContentComponent.propDecorators = {
        dataSource: [{ type: i0.Input }]
    };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var RecordContentModule = /** @class */ (function () {
        function RecordContentModule() {
        }
        return RecordContentModule;
    }());
    RecordContentModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [
                        RecordContentComponent
                    ],
                    exports: [
                        RecordContentComponent
                    ],
                    imports: [
                        common.CommonModule,
                        PanelModule,
                        i1$2.NgbModule,
                        FieldLayoutModule
                    ]
                },] }
    ];

    var RecordFlexboxComponent = /** @class */ (function () {
        function RecordFlexboxComponent() {
            this.mode = 'detail';
            this.maxColumns = 4;
            this.sizeMap = {
                handset: 1,
                tablet: 2,
                web: 3,
                wide: 4
            };
        }
        RecordFlexboxComponent.prototype.ngOnInit = function () {
            var _this = this;
            if (!this.config) {
                return;
            }
            var config = this.config;
            this.vm$ = rxjs.combineLatest([
                config.record$,
                config.mode$,
                config.layout$,
            ]).pipe(operators.map(function (_a) {
                var _b = __read(_a, 3), record = _b[0], mode = _b[1], layout = _b[2];
                _this.mode = mode;
                return { record: record, mode: mode, layout: layout };
            }));
        };
        RecordFlexboxComponent.prototype.getRowClass = function () {
            return this.config.rowClass;
        };
        RecordFlexboxComponent.prototype.getColClass = function () {
            return this.config.colClass;
        };
        RecordFlexboxComponent.prototype.getSizeClass = function (size) {
            var sizeMap = {
                regular: 'text-regular',
                medium: 'text-medium',
                large: 'text-large',
                'x-large': 'text-x-large',
                'xx-large': 'text-xx-large',
                huge: 'text-huge'
            };
            return sizeMap[size] || 'text-regular';
        };
        RecordFlexboxComponent.prototype.getFontWeight = function (bold) {
            var fontWeight = 'font-weight-normal';
            if (bold && i5.isTrue(bold)) {
                fontWeight = 'font-weight-bolder';
            }
            return fontWeight;
        };
        RecordFlexboxComponent.prototype.getColor = function (color) {
            var sizeMap = {
                yellow: 'text-yellow',
                blue: 'text-blue',
                green: 'text-green',
                red: 'text-red',
                purple: 'text-purple',
                dark: 'text-dark',
                grey: 'text-grey'
            };
            return sizeMap[color] || '';
        };
        RecordFlexboxComponent.prototype.getJustify = function (justify) {
            var justifyMap = {
                start: 'justify-content-start',
                end: 'justify-content-end',
                center: 'justify-content-center',
                between: 'justify-content-between',
                around: 'justify-content-around'
            };
            return justifyMap[justify] || '';
        };
        RecordFlexboxComponent.prototype.getAlign = function (align) {
            var alignMap = {
                start: 'align-items-start',
                end: 'align-items-end',
                center: 'align-items-center',
                baseline: 'align-items-baseline',
                stretch: 'align-items-stretch'
            };
            return alignMap[align] || '';
        };
        RecordFlexboxComponent.prototype.getLayoutRowClass = function (row) {
            return (row && row.class) || '';
        };
        RecordFlexboxComponent.prototype.getClass = function (layoutCol) {
            if (!layoutCol) {
                return '';
            }
            var klasses = [];
            klasses.push(layoutCol.class || '');
            layoutCol.size && klasses.push(this.getSizeClass(layoutCol.size) || '');
            layoutCol.bold && klasses.push(this.getFontWeight(layoutCol.bold) || '');
            layoutCol.color && klasses.push(this.getColor(layoutCol.color) || '');
            return klasses.join(' ');
        };
        RecordFlexboxComponent.prototype.getLabelDisplay = function (col) {
            return col.labelDisplay || (this.config && this.config.labelDisplay) || 'inline';
        };
        RecordFlexboxComponent.prototype.getField = function (record, field) {
            if (!field || !field.name || !record || !record.fields) {
                return null;
            }
            return record.fields[field.name] || null;
        };
        RecordFlexboxComponent.prototype.getFieldClass = function (col) {
            var klasses = this.config.inputClass || {};
            if (col.inputClass) {
                klasses[col.inputClass] = true;
            }
            return klasses;
        };
        RecordFlexboxComponent.prototype.getLabelClass = function (col) {
            var klasses = this.config.labelClass || {};
            if (col.labelClass) {
                klasses[col.labelClass] = true;
            }
            return klasses;
        };
        RecordFlexboxComponent.prototype.shouldDisplay = function (col, field) {
            if (!col.hideIfEmpty) {
                return true;
            }
            var hasValue = false;
            hasValue = hasValue || !!field.value;
            hasValue = hasValue || !!(field.valueList && field.valueList.length);
            hasValue = hasValue || !!(field.valueObject && Object.keys(field.valueObject).length);
            return hasValue;
        };
        RecordFlexboxComponent.prototype.getDisplay = function (col) {
            return col.display || '';
        };
        return RecordFlexboxComponent;
    }());
    RecordFlexboxComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-record-flexbox',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n\n<div *ngIf=\"(vm$| async) as vm\" class=\"d-flex flex-column {{(config && config.klass) || ''}}\">\n\n    <ng-container *ngFor=\"let item of vm.layout.rows\">\n\n        <div [ngClass]=\"getRowClass()\"\n             class=\"d-flex record-flexbox-row {{getJustify(item.justify)}} {{getAlign(item.align)}} {{getLayoutRowClass(item)}}\">\n\n            <div *ngFor=\"let col of item.cols\"\n                 [ngClass]=\"getColClass()\"\n                 class=\"record-flexbox-col {{getClass(col)}}\">\n\n                <ng-container *ngIf=\"col.display !== 'hidden'\">\n\n                    <div [class.align-items-center]=\"getLabelDisplay(col) === 'inline'\"\n                         [class.flex-column]=\"getLabelDisplay(col) === 'top'\"\n                         [class.flex-row]=\"getLabelDisplay(col) === 'inline'\"\n                         [class.justify-content-end]=\"!col.field\"\n                         class=\"d-flex\"\n                    >\n                        <ng-container *ngIf=\"getField(vm.record, col.field) as field\">\n\n                            <ng-container *ngIf=\"shouldDisplay(col, field)\">\n                                <ng-container *ngIf=\"getLabelDisplay(col) !== 'none'\">\n\n                                    <div [class.pr-3]=\"getLabelDisplay(col) === 'inline' && getDisplay(col) !== 'none'\">\n\n                                        <label *ngIf=\"field.label\" [ngClass]=\"getLabelClass(col)\">\n                                            {{field.label}}\n                                        </label>\n\n                                        <scrm-label *ngIf=\"!field.label && field.labelKey\"\n                                                    [labelKey]=\"field.labelKey\"\n                                                    [ngClass]=\"getLabelClass(col)\">\n                                        </scrm-label>\n                                    </div>\n\n                                </ng-container>\n\n                                <ng-container *ngIf=\"getDisplay(col) !== 'none'\">\n\n                                    <div [class.flex-grow-1]=\"getLabelDisplay(col) === 'inline'\">\n\n                                        <scrm-field [field]=\"field\"\n                                                    [klass]=\"getFieldClass(col)\"\n                                                    [mode]=\"vm.mode\"\n                                                    [type]=\"field.type\">\n                                        </scrm-field>\n\n                                    </div>\n\n                                </ng-container>\n\n\n                            </ng-container>\n\n                        </ng-container>\n\n\n                        <ng-container *ngIf=\"col.actionSlot && this.config.actions\">\n                            <scrm-action-group-menu [buttonClass]=\"config.buttonClass\"\n                                                    [config]=\"config.actions\">\n                            </scrm-action-group-menu>\n                        </ng-container>\n\n                    </div>\n                </ng-container>\n\n            </div>\n\n        </div>\n    </ng-container>\n</div>\n"
                },] }
    ];
    RecordFlexboxComponent.ctorParameters = function () { return []; };
    RecordFlexboxComponent.propDecorators = {
        config: [{ type: i0.Input }]
    };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var RecordFlexboxModule = /** @class */ (function () {
        function RecordFlexboxModule() {
        }
        return RecordFlexboxModule;
    }());
    RecordFlexboxModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [RecordFlexboxComponent],
                    exports: [
                        RecordFlexboxComponent
                    ],
                    imports: [
                        common.CommonModule,
                        ButtonModule,
                        FieldModule,
                        LabelModule,
                        ActionGroupMenuModule
                    ]
                },] }
    ];

    var RecordGridComponent = /** @class */ (function () {
        function RecordGridComponent() {
            this.gridButtons = [];
            this.mode = 'detail';
            this.maxColumns = 4;
            this.sizeMap = {
                handset: 1,
                tablet: 2,
                web: 3,
                wide: 4
            };
            this.fields = [];
            this.special = [];
        }
        RecordGridComponent.prototype.ngOnInit = function () {
            var _this = this;
            if (!this.config) {
                return;
            }
            var config = this.config;
            this.vm$ = rxjs.combineLatest([
                config.record$,
                config.mode$,
                config.fields$,
                config.maxColumns$,
                config.sizeMap$
            ]).pipe(operators.map(function (_a) {
                var _b = __read(_a, 5), record = _b[0], mode = _b[1], fields = _b[2], maxColumns = _b[3], sizeMap = _b[4];
                _this.mode = mode;
                _this.maxColumns = maxColumns;
                _this.sizeMap = sizeMap;
                _this.fields = _this.getFields(record, fields);
                return { record: record, mode: mode, fields: fields, maxColumns: maxColumns };
            }));
        };
        RecordGridComponent.prototype.getFields = function (record, fieldKeys) {
            if (!record || !fieldKeys || !record.fields) {
                return [];
            }
            var fields = [];
            fieldKeys.forEach(function (fieldKey) {
                if (!record.fields[fieldKey]) {
                    return;
                }
                fields.push(record.fields[fieldKey]);
            });
            return fields;
        };
        return RecordGridComponent;
    }());
    RecordGridComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-record-grid',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<ng-container *ngIf=\"config\">\n    <div *ngIf=\"(vm$ | async) as vm\" class=\"record-grid {{(config && config.klass) || ''}}\">\n        <scrm-field-grid [actions]=\"!!config.actions\"\n                         [appendActions]=\"(config && config.appendActions) || false\"\n                         [colClass]=\"config && config.colClass\"\n                         [fieldMode]=\"mode\"\n                         [fields]=\"fields\"\n                         [inputClass]=\"config && config.inputClass\"\n                         [labelClass]=\"config && config.labelClass\"\n                         [labelDisplay]=\"(config && config.labelDisplay) || 'top'\"\n                         [maxColumns]=\"maxColumns\"\n                         [rowClass]=\"config && config.rowClass\"\n                         [sizeMap]=\"sizeMap\"\n        >\n        <span *ngIf=\"config.actions\" class=\"float-right\" field-grid-actions>\n            <scrm-action-group-menu [buttonClass]=\"config.buttonClass\"\n                                    [config]=\"config.actions\"></scrm-action-group-menu>\n        </span>\n        </scrm-field-grid>\n    </div>\n</ng-container>\n"
                },] }
    ];
    RecordGridComponent.ctorParameters = function () { return []; };
    RecordGridComponent.propDecorators = {
        config: [{ type: i0.Input }]
    };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var RecordGridModule = /** @class */ (function () {
        function RecordGridModule() {
        }
        return RecordGridModule;
    }());
    RecordGridModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [RecordGridComponent],
                    exports: [
                        RecordGridComponent
                    ],
                    imports: [
                        common.CommonModule,
                        FieldGridModule,
                        ActionGroupMenuModule
                    ]
                },] }
    ];

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var SortButtonComponent = /** @class */ (function () {
        function SortButtonComponent() {
            this.statusIcons = {
                NONE: 'sort',
                ASC: 'sort_ascend',
                DESC: 'sort_descend'
            };
            this.nextDirection = {
                NONE: i5.SortDirection.DESC,
                ASC: i5.SortDirection.NONE,
                DESC: i5.SortDirection.ASC
            };
        }
        SortButtonComponent.prototype.ngOnInit = function () {
            this.direction$ = this.state.getSortDirection();
        };
        SortButtonComponent.prototype.getStatusIcon = function (direction) {
            return this.statusIcons[direction];
        };
        SortButtonComponent.prototype.changeSorting = function (direction) {
            var newDirection = this.nextDirection[direction];
            this.state.changeSortDirection(newDirection);
        };
        return SortButtonComponent;
    }());
    SortButtonComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-sort-button',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<ng-container *ngIf=\"(direction$ | async) as direction\">\n    <a class=\"btn btn-sm p-0 sort-button\" (click)=\"changeSorting(direction)\">\n        <scrm-image class=\"sort-icon sicon\" [image]=\"getStatusIcon(direction)\"></scrm-image>\n    </a>\n</ng-container>\n\n"
                },] }
    ];
    SortButtonComponent.ctorParameters = function () { return []; };
    SortButtonComponent.propDecorators = {
        state: [{ type: i0.Input }]
    };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var SortButtonModule = /** @class */ (function () {
        function SortButtonModule() {
        }
        return SortButtonModule;
    }());
    SortButtonModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [SortButtonComponent],
                    exports: [
                        SortButtonComponent
                    ],
                    imports: [
                        common.CommonModule,
                        ImageModule
                    ]
                },] }
    ];

    var RecordSaveGQL = /** @class */ (function () {
        function RecordSaveGQL(apollo) {
            this.apollo = apollo;
        }
        /**
         * Save record on the backend
         *
         * @param {object} record to save
         *
         * @returns {object} Observable<Record>
         */
        RecordSaveGQL.prototype.save = function (record) {
            var _this = this;
            var input = {
                module: record.module,
                attributes: i5.deepClone(record.attributes),
            };
            if (record.id) {
                // eslint-disable-next-line no-underscore-dangle
                input._id = record.id;
            }
            var mutationOptions = {
                mutation: gql__default['default'](templateObject_1$1 || (templateObject_1$1 = __makeTemplateObject(["\n                mutation saveRecord($input: saveRecordInput!) {\n                    saveRecord(input: $input) {\n                        record {\n                            attributes\n                            id\n                            _id\n                            module\n                            acls\n                        }\n                    }\n                }\n            "], ["\n                mutation saveRecord($input: saveRecordInput!) {\n                    saveRecord(input: $input) {\n                        record {\n                            attributes\n                            id\n                            _id\n                            module\n                            acls\n                        }\n                    }\n                }\n            "]))),
                variables: {
                    input: input
                },
            };
            return this.apollo.mutate(mutationOptions).pipe(operators.map(function (result) { return _this.mapToRecord(result); }));
        };
        RecordSaveGQL.prototype.mapToRecord = function (response) {
            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r;
            if (!response.data || !response.data.saveRecord || !response.data.saveRecord.record) {
                return null;
            }
            return {
                // eslint-disable-next-line no-underscore-dangle
                id: response.data.saveRecord.record._id,
                type: (_d = (_c = (_b = (_a = response === null || response === void 0 ? void 0 : response.data) === null || _a === void 0 ? void 0 : _a.saveRecord) === null || _b === void 0 ? void 0 : _b.record) === null || _c === void 0 ? void 0 : _c.type) !== null && _d !== void 0 ? _d : '',
                module: (_h = (_g = (_f = (_e = response === null || response === void 0 ? void 0 : response.data) === null || _e === void 0 ? void 0 : _e.saveRecord) === null || _f === void 0 ? void 0 : _f.record) === null || _g === void 0 ? void 0 : _g.module) !== null && _h !== void 0 ? _h : '',
                attributes: (_m = (_l = (_k = (_j = response === null || response === void 0 ? void 0 : response.data) === null || _j === void 0 ? void 0 : _j.saveRecord) === null || _k === void 0 ? void 0 : _k.record) === null || _l === void 0 ? void 0 : _l.attributes) !== null && _m !== void 0 ? _m : [],
                acls: (_r = (_q = (_p = (_o = response === null || response === void 0 ? void 0 : response.data) === null || _o === void 0 ? void 0 : _o.saveRecord) === null || _p === void 0 ? void 0 : _p.record) === null || _q === void 0 ? void 0 : _q.acls) !== null && _r !== void 0 ? _r : [],
            };
        };
        return RecordSaveGQL;
    }());
    RecordSaveGQL.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function RecordSaveGQL_Factory() { return new RecordSaveGQL(i0__namespace.ɵɵinject(i1__namespace.Apollo)); }, token: RecordSaveGQL, providedIn: "root" });
    RecordSaveGQL.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    RecordSaveGQL.ctorParameters = function () { return [
        { type: i1.Apollo }
    ]; };
    var templateObject_1$1;

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var SubpanelStore = /** @class */ (function () {
        function SubpanelStore(listStoreFactory, languageStore, statisticsStoreFactory) {
            this.listStoreFactory = listStoreFactory;
            this.languageStore = languageStore;
            this.statisticsStoreFactory = statisticsStoreFactory;
            this.show = false;
            this.subs = [];
            this.recordList = listStoreFactory.create();
            this.statistics = {};
            this.metadataState = new rxjs.BehaviorSubject({});
            this.metadata$ = this.metadataState.asObservable();
            this.loading$ = this.recordList.loading$;
        }
        SubpanelStore.prototype.getTitle = function () {
            var label = this.languageStore.getFieldLabel(this.metadata.title_key, this.parentModule);
            if (!label) {
                var moduleList = this.languageStore.getAppListString('moduleList');
                label = (moduleList && moduleList[this.metadata.title_key]) || '';
            }
            return label;
        };
        SubpanelStore.prototype.getIcon = function () {
            return this.metadata.icon;
        };
        SubpanelStore.prototype.clear = function () {
            this.metadataState.unsubscribe();
            this.metadataState = null;
            this.recordList.clear();
            this.recordList = null;
            this.subs.forEach(function (sub) { return sub.unsubscribe(); });
        };
        SubpanelStore.prototype.clearAuthBased = function () {
            this.recordList.clearAuthBased();
        };
        /**
         * Initial list records load if not cached and update state.
         * Returns observable to be used in resolver if needed
         *
         * @param {string} parentModule name
         * @param {string} parentId id
         * @param {object} meta to use
         * @param {object} parentRecord$ to use
         */
        SubpanelStore.prototype.init = function (parentModule, parentId, meta, parentRecord$) {
            var _this = this;
            if (parentRecord$ === void 0) { parentRecord$ = null; }
            this.parentModule = parentModule;
            this.parentId = parentId;
            this.metadata = meta;
            this.metadataState.next(this.metadata);
            this.recordList.init(meta.module, false, 'list_max_entries_per_subpanel');
            this.initStatistics(meta, parentModule, parentId);
            this.initSearchCriteria(parentModule, parentId, meta.name);
            if (parentRecord$) {
                this.parentRecord$ = parentRecord$;
                this.parentRecord$.subscribe(function (record) { return _this.parentRecord = record; });
            }
        };
        /**
         * Load / reload records using current pagination and criteria
         *
         * @param {boolean} useCache if to use cache
         * @returns {object} Observable<RecordList>
         */
        SubpanelStore.prototype.load = function (useCache) {
            if (useCache === void 0) { useCache = true; }
            return this.recordList.load(useCache);
        };
        /**
         * Get statistic store
         *
         * @param {string} key key of statistic
         * @returns {object} SingleValueStatisticsStore
         */
        SubpanelStore.prototype.getStatistic = function (key) {
            if (!this.statistics[key]) {
                return null;
            }
            return this.statistics[key];
        };
        /**
         * Load / reload statistics
         *
         * @param {string} key of statistic
         * @param {boolean} useCache if to use cache
         * @returns {object} Observable<Statistic>
         */
        SubpanelStore.prototype.loadStatistics = function (key, useCache) {
            if (useCache === void 0) { useCache = true; }
            if (!this.statistics[key]) {
                return null;
            }
            return this.statistics[key].load(useCache);
        };
        /**
         * Load / reload all statistics
         *
         * @param {boolean} useCache if to use cache
         * @returns {object} Observable<Statistic>
         */
        SubpanelStore.prototype.loadAllStatistics = function (useCache) {
            var _this = this;
            if (useCache === void 0) { useCache = true; }
            if (!this.statistics || !Object.keys(this.statistics).length) {
                return null;
            }
            var stats$ = {};
            Object.keys(this.statistics).forEach(function (statisticKey) {
                if (!_this.statistics[statisticKey]) {
                    return;
                }
                stats$[statisticKey] = _this.loadStatistics(statisticKey, useCache);
            });
            return rxjs.forkJoin(stats$);
        };
        /**
         * Should batch statistic
         *
         * @returns {boolean} shouldBatch
         */
        SubpanelStore.prototype.shouldBatchStatistic = function () {
            var metadata = this.metadata || {};
            return !(metadata.insightWidget && metadata.insightWidget.batch && metadata.insightWidget.batch === false);
        };
        /**
         * Set loading
         *
         * @param {string} key of statistic
         * @param {boolean} loading bool
         */
        SubpanelStore.prototype.setStatisticsLoading = function (key, loading) {
            if (!this.statistics[key]) {
                return;
            }
            this.statistics[key].setLoading(loading);
        };
        /**
         * Set all statistics loading
         *
         * @param {boolean} loading bool
         */
        SubpanelStore.prototype.setAllStatisticsLoading = function (loading) {
            var _this = this;
            if (!this.statistics || !Object.keys(this.statistics).length) {
                return;
            }
            Object.keys(this.statistics).forEach(function (statisticKey) {
                if (!_this.statistics[statisticKey]) {
                    return;
                }
                _this.setStatisticsLoading(statisticKey, loading);
            });
        };
        /**
         * Set Statistic value
         *
         * @param {string} key of statistic
         * @param {object} statistic Statistic
         * @param {boolean} cache bool
         */
        SubpanelStore.prototype.setStatistics = function (key, statistic, cache) {
            if (cache === void 0) { cache = false; }
            if (!this.statistics[key]) {
                return;
            }
            this.statistics[key].setStatistic(key, statistic, cache);
        };
        /**
         * Get statistic query
         *
         * @param {string} key of statistic
         * @returns {object} StatisticsQuery
         */
        SubpanelStore.prototype.getStatisticQuery = function (key) {
            return this.statistics[key].getQuery();
        };
        /**
         * Get all statistics queries
         *
         * @returns {object} StatisticsQuery
         */
        SubpanelStore.prototype.getAllStatisticQuery = function () {
            var _this = this;
            if (!this.statistics || !Object.keys(this.statistics).length) {
                return {};
            }
            var queriesMap = {};
            Object.keys(this.statistics).forEach(function (statisticKey) {
                if (!_this.statistics[statisticKey]) {
                    return;
                }
                queriesMap[statisticKey] = _this.getStatisticQuery(statisticKey);
            });
            return queriesMap;
        };
        /**
         * Get widget layout
         *
         * @returns {any} any
         */
        SubpanelStore.prototype.getWidgetLayout = function () {
            var meta = this.metadata;
            if (!meta || !meta.insightWidget || !meta.insightWidget.options || !meta.insightWidget.options.insightWidget) {
                return { rows: [] };
            }
            var layout = i5.deepClone(meta.insightWidget.options.insightWidget);
            if (!layout.rows || !layout.rows.length) {
                layout.rows = {};
            }
            return layout;
        };
        /**
         * Init search criteria
         *
         * @param {string} parentModule name
         * @param {string} parentId id
         * @param {string} subpanel name
         */
        SubpanelStore.prototype.initSearchCriteria = function (parentModule, parentId, subpanel) {
            this.recordList.criteria = {
                preset: {
                    type: 'subpanel',
                    params: {
                        subpanel: subpanel,
                        parentModule: parentModule,
                        parentId: parentId
                    }
                }
            };
        };
        /**
         * Init statistics store
         *
         * @param {object} meta for subpanel
         * @param {string} parentModule name
         * @param {string} parentId {id}
         */
        SubpanelStore.prototype.initStatistics = function (meta, parentModule, parentId) {
            var _this = this;
            var layout = this.getWidgetLayout();
            layout.rows.forEach(function (row) {
                if (!row.cols || !row.cols.length) {
                    return;
                }
                row.cols.forEach(function (col) {
                    if (!col.statistic || typeof col.statistic !== 'string') {
                        return;
                    }
                    _this.initStatistic(col.statistic, meta, parentModule, parentId);
                    col.store = _this.statistics[col.statistic];
                });
            });
        };
        /**
         * Init a single value statistic
         *
         * @param {string} statisticKey to use
         * @param {object} meta SubPanelDefinition
         * @param {string} parentModule to use
         * @param {string} parentId to use
         */
        SubpanelStore.prototype.initStatistic = function (statisticKey, meta, parentModule, parentId) {
            this.statistics[statisticKey] = this.statisticsStoreFactory.create();
            this.statistics[statisticKey].init(meta.module, {
                key: statisticKey,
                context: { module: parentModule, id: parentId },
                params: { subpanel: meta.name }
            }, false);
        };
        return SubpanelStore;
    }());
    SubpanelStore.decorators = [
        { type: i0.Injectable }
    ];
    SubpanelStore.ctorParameters = function () { return [
        { type: RecordListStoreFactory },
        { type: LanguageStore },
        { type: SingleValueStatisticsStoreFactory }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var SubpanelStoreFactory = /** @class */ (function () {
        function SubpanelStoreFactory(listStoreFactory, languageStore, statisticsStoreFactory) {
            this.listStoreFactory = listStoreFactory;
            this.languageStore = languageStore;
            this.statisticsStoreFactory = statisticsStoreFactory;
        }
        SubpanelStoreFactory.prototype.create = function () {
            return new SubpanelStore(this.listStoreFactory, this.languageStore, this.statisticsStoreFactory);
        };
        return SubpanelStoreFactory;
    }());
    SubpanelStoreFactory.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function SubpanelStoreFactory_Factory() { return new SubpanelStoreFactory(i0__namespace.ɵɵinject(RecordListStoreFactory), i0__namespace.ɵɵinject(LanguageStore), i0__namespace.ɵɵinject(SingleValueStatisticsStoreFactory)); }, token: SubpanelStoreFactory, providedIn: "root" });
    SubpanelStoreFactory.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root',
                },] }
    ];
    SubpanelStoreFactory.ctorParameters = function () { return [
        { type: RecordListStoreFactory },
        { type: LanguageStore },
        { type: SingleValueStatisticsStoreFactory }
    ]; };

    var ViewStore = /** @class */ (function () {
        function ViewStore(appStateStore, languageStore, navigationStore, moduleNavigation, metadataStore) {
            var _this = this;
            this.appStateStore = appStateStore;
            this.languageStore = languageStore;
            this.navigationStore = navigationStore;
            this.moduleNavigation = moduleNavigation;
            this.metadataStore = metadataStore;
            this.appState$ = this.appStateStore.vm$;
            this.language$ = this.languageStore.vm$;
            this.navigation$ = this.navigationStore.vm$;
            this.module$ = rxjs.combineLatest([this.appState$, this.navigationStore.vm$]).pipe(operators.map(function (_a) {
                var _b = __read(_a, 2), appStateInfo = _b[0], navigationInfo = _b[1];
                return _this.moduleNavigation.getModuleInfo(appStateInfo.module, navigationInfo);
            }));
            this.appData$ = rxjs.combineLatest([this.appState$, this.module$, this.language$, this.navigation$]).pipe(operators.map(function (_a) {
                var _b = __read(_a, 4), appState = _b[0], module = _b[1], language = _b[2], navigation = _b[3];
                _this.appData = { appState: appState, module: module, language: language, navigation: navigation };
                return _this.appData;
            }));
            this.metadata$ = metadataStore.metadata$.pipe(operators.tap(function (metadata) {
                _this.metadata = metadata;
            }));
        }
        ViewStore.prototype.clear = function () {
        };
        ViewStore.prototype.clearAuthBased = function () {
            this.clear();
        };
        Object.defineProperty(ViewStore.prototype, "appState", {
            get: function () {
                if (!this.appData.appState) {
                    return {};
                }
                return this.appData.appState;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ViewStore.prototype, "module", {
            get: function () {
                return this.appData.module;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ViewStore.prototype, "language", {
            get: function () {
                if (!this.appData.language) {
                    return {
                        appStrings: {},
                        appListStrings: {},
                        modStrings: {},
                        languageKey: ''
                    };
                }
                return this.appData.language;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ViewStore.prototype, "appStrings", {
            get: function () {
                return this.language.appStrings;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ViewStore.prototype, "appListStrings", {
            get: function () {
                return this.language.appListStrings;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ViewStore.prototype, "modStrings", {
            get: function () {
                return this.language.modStrings;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ViewStore.prototype, "navigation", {
            get: function () {
                return this.appData.navigation;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ViewStore.prototype, "searchMeta", {
            get: function () {
                if (!this.metadata.search) {
                    return {
                        layout: {
                            basic: {},
                            advanced: {}
                        }
                    };
                }
                return this.metadata.search;
            },
            enumerable: false,
            configurable: true
        });
        return ViewStore;
    }());
    ViewStore.decorators = [
        { type: i0.Injectable }
    ];
    ViewStore.ctorParameters = function () { return [
        { type: AppStateStore },
        { type: LanguageStore },
        { type: NavigationStore },
        { type: ModuleNavigation },
        { type: MetadataStore }
    ]; };

    var RecordFetchGQL = /** @class */ (function () {
        function RecordFetchGQL(apollo) {
            this.apollo = apollo;
        }
        /**
         * Fetch data from backend
         *
         * @param {string} module name
         * @param {string} record id
         * @param {object} metadata with the fields to ask for
         * @returns {object} Observable<ApolloQueryResult<any>>
         */
        RecordFetchGQL.prototype.fetch = function (module, record, metadata) {
            var fields = metadata.fields;
            var queryOptions = {
                query: gql__default['default'](templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n            query getRecord($module: String!, $record: String!) {\n                getRecord(module: $module, record: $record) {\n                    ", "\n                }\n            }\n        "], ["\n            query getRecord($module: String!, $record: String!) {\n                getRecord(module: $module, record: $record) {\n                    ", "\n                }\n            }\n        "])), fields.join('\n')),
                variables: {
                    module: module,
                    record: record,
                },
            };
            return this.apollo.query(queryOptions);
        };
        return RecordFetchGQL;
    }());
    RecordFetchGQL.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function RecordFetchGQL_Factory() { return new RecordFetchGQL(i0__namespace.ɵɵinject(i1__namespace.Apollo)); }, token: RecordFetchGQL, providedIn: "root" });
    RecordFetchGQL.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    RecordFetchGQL.ctorParameters = function () { return [
        { type: i1.Apollo }
    ]; };
    var templateObject_1;

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var StatisticsBatch = /** @class */ (function () {
        function StatisticsBatch(fetchGQL) {
            this.fetchGQL = fetchGQL;
        }
        /**
         * Get statistics
         *
         * @param {string} module to use
         * @param {object} queries StatisticsQueryMap
         * @returns {object} Observable<any>
         */
        StatisticsBatch.prototype.fetch = function (module, queries) {
            return this.fetchGQL.fetch(module, queries);
        };
        return StatisticsBatch;
    }());
    StatisticsBatch.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function StatisticsBatch_Factory() { return new StatisticsBatch(i0__namespace.ɵɵinject(StatisticsFetchGQL)); }, token: StatisticsBatch, providedIn: "root" });
    StatisticsBatch.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root',
                },] }
    ];
    StatisticsBatch.ctorParameters = function () { return [
        { type: StatisticsFetchGQL }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var initialState$8 = {
        id: '',
        type: '',
        module: '',
        attributes: {},
        acls: []
    };
    var RecordStore = /** @class */ (function () {
        function RecordStore(definitions$, recordSaveGQL, recordFetchGQL, message, recordManager, recordMappers) {
            var _this = this;
            this.definitions$ = definitions$;
            this.recordSaveGQL = recordSaveGQL;
            this.recordFetchGQL = recordFetchGQL;
            this.message = message;
            this.recordManager = recordManager;
            this.recordMappers = recordMappers;
            this.cache$ = null;
            this.internalState = i5.deepClone(initialState$8);
            this.stagingState = i5.deepClone(initialState$8);
            this.store = new rxjs.BehaviorSubject(this.internalState);
            this.staging = new rxjs.BehaviorSubject(this.stagingState);
            this.definitions = [];
            this.subs = [];
            this.fieldsMetadata = {
                fields: [
                    '_id',
                    'id',
                    'attributes',
                    'module',
                    'type',
                    'acls'
                ]
            };
            this.state$ = this.store.asObservable().pipe(operators.distinctUntilChanged());
            this.staging$ = this.staging.asObservable();
            this.subs.push(this.state$.subscribe(function (record) {
                _this.updateStaging(record);
            }));
            this.subs.push(definitions$.subscribe(function (definitions) {
                _this.definitions = definitions;
                _this.init(_this.internalState);
            }));
        }
        RecordStore.prototype.init = function (record) {
            var newRecord = Object.assign({}, record);
            this.initRecord(newRecord);
            this.updateState(newRecord);
        };
        RecordStore.prototype.getStaging = function () {
            if (!this.stagingState) {
                return null;
            }
            return this.stagingState;
        };
        RecordStore.prototype.setStaging = function (record) {
            this.initRecord(record);
            this.staging.next(this.stagingState = record);
        };
        RecordStore.prototype.setRecord = function (record) {
            this.initRecord(record);
            this.updateState(record);
        };
        RecordStore.prototype.save = function () {
            var _this = this;
            this.mapStagingFields();
            return this.recordSaveGQL.save(this.stagingState).pipe(operators.tap(function (record) {
                _this.initRecord(record);
                _this.updateState(record);
            }));
        };
        RecordStore.prototype.validate = function () {
            this.stagingState.formGroup.markAllAsTouched();
            return this.stagingState.formGroup.statusChanges.pipe(operators.startWith(this.stagingState.formGroup.status), operators.filter(function (status) { return status !== 'PENDING'; }), operators.take(1), operators.map(function (status) { return status === 'VALID'; }));
        };
        RecordStore.prototype.resetStaging = function () {
            this.updateStaging(this.internalState);
        };
        RecordStore.prototype.destroy = function () {
            this.subs.forEach(function (sub) { return sub.unsubscribe(); });
        };
        /**
         * Get record
         *
         * @returns {object} Record
         */
        RecordStore.prototype.getBaseRecord = function () {
            if (!this.internalState) {
                return null;
            }
            var baseRecord = {
                id: this.internalState.id,
                type: this.internalState.type,
                module: this.internalState.module,
                attributes: this.internalState.attributes,
                acls: this.internalState.acls
            };
            return i5.deepClone(baseRecord);
        };
        /**
         * Get record
         *
         * @returns {object} Record
         */
        RecordStore.prototype.getBaseStaging = function () {
            if (!this.stagingState) {
                return null;
            }
            this.mapStagingFields();
            var baseRecord = {
                id: this.stagingState.id,
                type: this.stagingState.type,
                module: this.stagingState.module,
                attributes: this.stagingState.attributes,
                acls: this.stagingState.acls
            };
            return i5.deepClone(baseRecord);
        };
        /**
         * Extract base record
         *
         * @returns {object} Record
         */
        RecordStore.prototype.extractBaseRecord = function (record) {
            var fields = record.fields, formGroup = record.formGroup, base = __rest(record, ["fields", "formGroup"]);
            return Object.assign({}, base);
        };
        /**
         * Is staging record dirty
         *
         * @returns {object} Record
         */
        RecordStore.prototype.isDirty = function () {
            if (!this.stagingState || !this.stagingState.formGroup) {
                return false;
            }
            return this.stagingState.formGroup.dirty;
        };
        /**
         * Get record cached Observable or call the backend
         *
         * @param {string} module to use
         * @param {string} recordId to use
         * @param {boolean} useCache if to use cache
         * @returns {object} Observable<any>
         */
        RecordStore.prototype.retrieveRecord = function (module, recordId, useCache) {
            var _this = this;
            if (useCache === void 0) { useCache = true; }
            if (this.cache$ == null || useCache === false) {
                this.cache$ = this.fetch(module, recordId).pipe(operators.tap(function (record) { return _this.init(record); }), operators.shareReplay(1));
            }
            return this.cache$;
        };
        /**
         * Internal API
         */
        /**
         * Update the state
         *
         * @param {object} state to set
         */
        RecordStore.prototype.updateState = function (state) {
            this.store.next(this.internalState = state);
        };
        /**
         * Update the staging
         *
         * @param {object} state to set
         */
        RecordStore.prototype.updateStaging = function (state) {
            var newState = i5.deepClone(this.extractBaseRecord(state));
            this.initRecord(newState);
            this.staging.next(this.stagingState = newState);
        };
        /**
         * Map staging fields
         */
        RecordStore.prototype.mapStagingFields = function () {
            var _this = this;
            var mappers = this.recordMappers.get(this.stagingState.module);
            Object.keys(mappers).forEach(function (key) {
                var mapper = mappers[key];
                mapper.map(_this.stagingState);
            });
        };
        /**
         * Init record fields
         *
         * @param {object} record Record
         */
        RecordStore.prototype.initRecord = function (record) {
            if (record.module && this.definitions && this.definitions.length > 0) {
                record.fields = this.recordManager.initFields(record, this.definitions);
            }
        };
        /**
         * Fetch the record from the backend
         *
         * @param {string} module to use
         * @param {string} recordID to use
         * @returns {object} Observable<any>
         */
        RecordStore.prototype.fetch = function (module, recordID) {
            var _this = this;
            return this.recordFetchGQL.fetch(module, recordID, this.fieldsMetadata)
                .pipe(operators.map(function (_a) {
                var data = _a.data;
                var record = {
                    type: '',
                    module: '',
                    attributes: {},
                    acls: []
                };
                if (!data) {
                    return record;
                }
                var id = data.getRecord.attributes.id;
                if (!id) {
                    _this.message.addDangerMessageByKey('LBL_RECORD_DOES_NOT_EXIST');
                    return record;
                }
                record.id = id;
                record.module = module;
                record.type = data.getRecord.attributes && data.getRecord.attributes.object_name;
                record.attributes = data.getRecord.attributes;
                record.acls = data.getRecord.acls;
                return record;
            }), operators.catchError(function (err) { return rxjs.throwError(err); }));
        };
        return RecordStore;
    }());

    var BaseSaveRecordMapper = /** @class */ (function () {
        function BaseSaveRecordMapper() {
        }
        BaseSaveRecordMapper.prototype.getKey = function () {
            return 'base';
        };
        BaseSaveRecordMapper.prototype.map = function (record) {
            if (!record.fields || !Object.keys(record.fields).length) {
                return;
            }
            Object.keys(record.fields).forEach(function (fieldName) {
                var field = record.fields[fieldName];
                var type = field.type || '';
                var source = field.definition.source || '';
                var rname = field.definition.rname || 'name';
                var idName = field.definition.id_name || '';
                if (type === 'relate' && source === 'non-db' && idName === fieldName) {
                    record.attributes[fieldName] = field.value;
                    return;
                }
                if (type === 'relate' && source === 'non-db' && rname !== '' && field.valueObject) {
                    var attribute = record.attributes[fieldName] || {};
                    attribute[rname] = field.valueObject[rname];
                    attribute.id = field.valueObject.id;
                    record.attributes[fieldName] = attribute;
                    record.attributes[idName] = field.valueObject.id;
                    return;
                }
                if (field.valueObject) {
                    record.attributes[fieldName] = field.valueObject;
                    return;
                }
                if (field.items) {
                    record.attributes[fieldName] = [];
                    field.items.forEach(function (item) {
                        record.attributes[fieldName].push({
                            id: item.id,
                            module: item.module,
                            attributes: i5.deepClone(item.attributes)
                        });
                    });
                    return;
                }
                if (field.valueObjectArray) {
                    record.attributes[fieldName] = field.valueObjectArray;
                    return;
                }
                if (field.valueList) {
                    record.attributes[fieldName] = field.valueList;
                    return;
                }
                record.attributes[fieldName] = field.value;
            });
        };
        return BaseSaveRecordMapper;
    }());
    BaseSaveRecordMapper.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function BaseSaveRecordMapper_Factory() { return new BaseSaveRecordMapper(); }, token: BaseSaveRecordMapper, providedIn: "root" });
    BaseSaveRecordMapper.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var RecordStoreFactory = /** @class */ (function () {
        function RecordStoreFactory(recordFetchGQL, recordSaveGQL, message, recordManager, recordMappers, baseMapper) {
            this.recordFetchGQL = recordFetchGQL;
            this.recordSaveGQL = recordSaveGQL;
            this.message = message;
            this.recordManager = recordManager;
            this.recordMappers = recordMappers;
            this.baseMapper = baseMapper;
            recordMappers.register('default', baseMapper.getKey(), baseMapper);
        }
        RecordStoreFactory.prototype.create = function (definitions$) {
            return new RecordStore(definitions$, this.recordSaveGQL, this.recordFetchGQL, this.message, this.recordManager, this.recordMappers);
        };
        return RecordStoreFactory;
    }());
    RecordStoreFactory.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function RecordStoreFactory_Factory() { return new RecordStoreFactory(i0__namespace.ɵɵinject(RecordFetchGQL), i0__namespace.ɵɵinject(RecordSaveGQL), i0__namespace.ɵɵinject(MessageService), i0__namespace.ɵɵinject(RecordManager), i0__namespace.ɵɵinject(i5__namespace.RecordMapperRegistry), i0__namespace.ɵɵinject(BaseSaveRecordMapper)); }, token: RecordStoreFactory, providedIn: "root" });
    RecordStoreFactory.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root',
                },] }
    ];
    RecordStoreFactory.ctorParameters = function () { return [
        { type: RecordFetchGQL },
        { type: RecordSaveGQL },
        { type: MessageService },
        { type: RecordManager },
        { type: i5.RecordMapperRegistry },
        { type: BaseSaveRecordMapper }
    ]; };

    var initialState$7 = {
        module: '',
        recordID: '',
        loading: false,
        widgets: false,
        showSidebarWidgets: false,
        showTopWidget: false,
        showSubpanels: false,
        mode: 'detail',
        params: {
            returnModule: '',
            returnId: '',
            returnAction: ''
        }
    };
    var RecordViewStore = /** @class */ (function (_super) {
        __extends(RecordViewStore, _super);
        function RecordViewStore(recordFetchGQL, recordSaveGQL, appStateStore, languageStore, navigationStore, moduleNavigation, metadataStore, localStorage, message, subpanelFactory, recordManager, statisticsBatch, recordStoreFactory) {
            var _this = _super.call(this, appStateStore, languageStore, navigationStore, moduleNavigation, metadataStore) || this;
            _this.recordFetchGQL = recordFetchGQL;
            _this.recordSaveGQL = recordSaveGQL;
            _this.appStateStore = appStateStore;
            _this.languageStore = languageStore;
            _this.navigationStore = navigationStore;
            _this.moduleNavigation = moduleNavigation;
            _this.metadataStore = metadataStore;
            _this.localStorage = localStorage;
            _this.message = message;
            _this.subpanelFactory = subpanelFactory;
            _this.recordManager = recordManager;
            _this.statisticsBatch = statisticsBatch;
            _this.recordStoreFactory = recordStoreFactory;
            /** Internal Properties */
            _this.cache$ = null;
            _this.internalState = i5.deepClone(initialState$7);
            _this.store = new rxjs.BehaviorSubject(_this.internalState);
            _this.state$ = _this.store.asObservable();
            _this.subpanelReloadSubject = new rxjs.BehaviorSubject({});
            _this.subpanelReloadSub = [];
            _this.subs = [];
            _this.recordStore = recordStoreFactory.create(_this.getViewFieldsObservable());
            _this.record$ = _this.recordStore.state$.pipe(operators.distinctUntilChanged());
            _this.stagingRecord$ = _this.recordStore.staging$.pipe(operators.distinctUntilChanged());
            _this.loading$ = _this.state$.pipe(operators.map(function (state) { return state.loading; }));
            _this.widgets$ = _this.state$.pipe(operators.map(function (state) { return state.widgets; }));
            _this.showSidebarWidgets$ = _this.state$.pipe(operators.map(function (state) { return state.showSidebarWidgets; }));
            _this.showTopWidget$ = _this.state$.pipe(operators.map(function (state) { return state.showTopWidget; }));
            _this.showSubpanels$ = _this.state$.pipe(operators.map(function (state) { return state.showSubpanels; }));
            _this.mode$ = _this.state$.pipe(operators.map(function (state) { return state.mode; }));
            _this.subpanelReload$ = _this.subpanelReloadSubject.asObservable();
            var data$ = rxjs.combineLatest([_this.record$, _this.loading$]).pipe(operators.map(function (_a) {
                var _b = __read(_a, 2), record = _b[0], loading = _b[1];
                _this.data = { record: record, loading: loading };
                return _this.data;
            }));
            _this.vm$ = rxjs.combineLatest([data$, _this.appData$, _this.metadata$]).pipe(operators.map(function (_a) {
                var _b = __read(_a, 3), data = _b[0], appData = _b[1], metadata = _b[2];
                _this.vm = { data: data, appData: appData, metadata: metadata };
                return _this.vm;
            }));
            _this.subpanelsState = new rxjs.BehaviorSubject({});
            _this.subpanels$ = _this.subpanelsState.asObservable();
            _this.viewContext$ = _this.record$.pipe(operators.map(function () {
                return _this.getViewContext();
            }));
            return _this;
        }
        Object.defineProperty(RecordViewStore.prototype, "widgets", {
            get: function () {
                return this.internalState.widgets;
            },
            set: function (show) {
                this.updateState(Object.assign(Object.assign({}, this.internalState), { widgets: show }));
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(RecordViewStore.prototype, "showSidebarWidgets", {
            get: function () {
                return this.internalState.showSidebarWidgets;
            },
            set: function (show) {
                this.updateState(Object.assign(Object.assign({}, this.internalState), { showSidebarWidgets: show }));
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(RecordViewStore.prototype, "showTopWidget", {
            get: function () {
                return this.internalState.showTopWidget;
            },
            set: function (show) {
                this.updateState(Object.assign(Object.assign({}, this.internalState), { showTopWidget: show }));
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(RecordViewStore.prototype, "showSubpanels", {
            get: function () {
                return this.internalState.showTopWidget;
            },
            set: function (show) {
                this.updateState(Object.assign(Object.assign({}, this.internalState), { showSubpanels: show }));
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(RecordViewStore.prototype, "params", {
            get: function () {
                return this.internalState.params || {};
            },
            set: function (params) {
                this.updateState(Object.assign(Object.assign({}, this.internalState), { params: params }));
            },
            enumerable: false,
            configurable: true
        });
        RecordViewStore.prototype.getModuleName = function () {
            return this.internalState.module;
        };
        RecordViewStore.prototype.getRecordId = function () {
            return this.internalState.recordID;
        };
        RecordViewStore.prototype.getViewContext = function () {
            return {
                module: this.getModuleName(),
                id: this.getRecordId(),
                record: this.getBaseRecord()
            };
        };
        RecordViewStore.prototype.getSubpanels = function () {
            return this.subpanels;
        };
        /**
         * Clean destroy
         */
        RecordViewStore.prototype.destroy = function () {
            this.clear();
        };
        /**
         * Initial record load if not cached and update state.
         * Returns observable to be used in resolver if needed
         *
         * @param {string} module to use
         * @param {string} recordID to use
         * @param {string} mode to use
         * @param {object} params to set
         * @returns {object} Observable<any>
         */
        RecordViewStore.prototype.init = function (module, recordID, mode, params) {
            var _this = this;
            if (mode === void 0) { mode = 'detail'; }
            if (params === void 0) { params = {}; }
            this.internalState.module = module;
            this.internalState.recordID = recordID;
            this.setMode(mode);
            this.initSubpanels(module, recordID);
            this.calculateShowWidgets();
            return this.load().pipe(operators.tap(function () {
                _this.showTopWidget = true;
                _this.loadSubpanelStatistics(module);
                _this.parseParams(params);
            }));
        };
        /**
         * Clear observable cache
         */
        RecordViewStore.prototype.clear = function () {
            this.cache$ = null;
            this.clearSubpanels();
            this.subpanelsState.unsubscribe();
            this.updateState(i5.deepClone(initialState$7));
        };
        /**
         * Get staging record
         *
         * @returns {string} ViewMode
         */
        RecordViewStore.prototype.getBaseRecord = function () {
            if (!this.internalState) {
                return null;
            }
            return this.recordStore.getBaseRecord();
        };
        /**
         * Get current view mode
         *
         * @returns {string} ViewMode
         */
        RecordViewStore.prototype.getMode = function () {
            if (!this.internalState) {
                return null;
            }
            return this.internalState.mode;
        };
        /**
         * Set new mode
         *
         * @param {string} mode ViewMode
         */
        RecordViewStore.prototype.setMode = function (mode) {
            this.updateState(Object.assign(Object.assign({}, this.internalState), { mode: mode }));
        };
        RecordViewStore.prototype.save = function () {
            var _this = this;
            this.appStateStore.updateLoading(this.internalState.module + "-record-save", true);
            return this.recordStore.save().pipe(operators.catchError(function () {
                _this.message.addDangerMessageByKey('LBL_ERROR_SAVING');
                return rxjs.of({});
            }), operators.finalize(function () {
                _this.setMode('detail');
                _this.appStateStore.updateLoading(_this.internalState.module + "-record-save", false);
            }));
        };
        /**
         * Load / reload record using current pagination and criteria
         *
         * @param {boolean} useCache if to use cache
         * @returns {object} Observable<RecordViewState>
         */
        RecordViewStore.prototype.load = function (useCache) {
            var _this = this;
            if (useCache === void 0) { useCache = true; }
            this.appStateStore.updateLoading(this.internalState.module + "-record-fetch", true);
            return this.recordStore.retrieveRecord(this.internalState.module, this.internalState.recordID, useCache).pipe(operators.tap(function (data) {
                _this.appStateStore.updateLoading(_this.internalState.module + "-record-fetch", false);
                _this.updateState(Object.assign(Object.assign({}, _this.internalState), { recordID: data.id, module: data.module }));
            }));
        };
        /**
         * Get summary template
         *
         * @returns {string} summary template label
         */
        RecordViewStore.prototype.getSummaryTemplate = function () {
            var metadata = this.metadata || {};
            var recordMeta = metadata.recordView || {};
            var templates = recordMeta.summaryTemplates || {};
            return templates[this.getMode()] || '';
        };
        /**
         * Parse query params
         *
         * @param {object} params to set
         */
        RecordViewStore.prototype.parseParams = function (params) {
            if (params === void 0) { params = {}; }
            if (!params) {
                return;
            }
            var currentParams = Object.assign({}, this.internalState.params);
            Object.keys(params).forEach(function (paramKey) {
                if (!i5.isVoid(currentParams[paramKey])) {
                    currentParams[paramKey] = params[paramKey];
                    return;
                }
            });
            this.params = params;
        };
        /**
         * Load all statistics
         *
         * @param {string} module if to use cache
         */
        RecordViewStore.prototype.loadSubpanelStatistics = function (module) {
            var _this = this;
            var subpanels = this.subpanelsState.value;
            if (!subpanels) {
                return;
            }
            var queries = {};
            Object.keys(subpanels).forEach(function (subpanelKey) {
                var subpanel = subpanels[subpanelKey];
                var statsMap = subpanel.statistics;
                if (!statsMap || !Object.keys(statsMap).length) {
                    return;
                }
                if (subpanel.shouldBatchStatistic() === false) {
                    subpanel.loadAllStatistics().pipe(operators.take(1)).subscribe();
                    return;
                }
                var subpanelQueries = subpanel.getAllStatisticQuery();
                Object.keys(subpanelQueries).forEach(function (subpanelQueryKey) {
                    var queryKey = _this.buildStatKey(subpanelKey, subpanelQueryKey);
                    queries[queryKey] = subpanelQueries[subpanelQueryKey];
                });
                subpanel.setAllStatisticsLoading(true);
            });
            this.statisticsBatch.fetch(module, queries)
                .pipe(operators.take(1))
                .subscribe(function (stats) {
                Object.keys(subpanels).forEach(function (subpanelKey) {
                    var subpanel = subpanels[subpanelKey];
                    var subpanelQueries = subpanel.getAllStatisticQuery();
                    Object.keys(subpanelQueries).forEach(function (subpanelQueryKey) {
                        var queryKey = _this.buildStatKey(subpanelKey, subpanelQueryKey);
                        var stat = stats[queryKey];
                        if (!stat) {
                            return;
                        }
                        subpanel.setStatistics(subpanelQueryKey, stat, true);
                    });
                    subpanel.setAllStatisticsLoading(false);
                });
            });
        };
        RecordViewStore.prototype.buildStatKey = function (subpanelKey, subpanelQueryKey) {
            subpanelKey = subpanelKey.replace(/_/g, '-');
            subpanelQueryKey = subpanelQueryKey.replace(/_/g, '-');
            return subpanelKey + '-' + subpanelQueryKey;
        };
        /**
         * Update the state
         *
         * @param {object} state to set
         */
        RecordViewStore.prototype.updateState = function (state) {
            this.store.next(this.internalState = state);
        };
        /**
         * Init subpanels
         *
         * @param {string} module parent module
         * @param {string} recordId id
         */
        RecordViewStore.prototype.initSubpanels = function (module, recordId) {
            var _this = this;
            this.showSubpanels = true;
            this.metadataStore.subPanelMetadata$.subscribe(function (meta) {
                _this.clearSubpanels();
                Object.keys(meta).forEach(function (key) {
                    _this.subpanels[key] = _this.subpanelFactory.create();
                    _this.subpanels[key].init(module, recordId, meta[key], _this.record$);
                });
                _this.subpanelsState.next(_this.subpanels);
                Object.keys(_this.subpanels).forEach(function (subpanelKey) {
                    var subpanel = _this.subpanels[subpanelKey];
                    _this.subpanelReloadSub.push(subpanel.recordList.records$.pipe(operators.tap(function () {
                        var update = {};
                        update[subpanelKey] = true;
                        _this.subpanelReloadSubject.next(update);
                    })).subscribe());
                });
            });
        };
        RecordViewStore.prototype.clearSubpanels = function () {
            var _this = this;
            if (this.subpanels) {
                Object.keys(this.subpanels).forEach(function (key) {
                    _this.subpanels[key].clear();
                });
            }
            if (this.subpanelReloadSub.length) {
                this.subpanelReloadSub.forEach(function (sub) { return sub.unsubscribe(); });
                this.subpanelReloadSub = [];
            }
            this.subpanels = {};
        };
        /**
         * Calculate if widgets are to display
         */
        RecordViewStore.prototype.calculateShowWidgets = function () {
            var show = false;
            var recordViewMeta = this.getRecordViewMetadata();
            var sidebarWidgetsConfig = recordViewMeta.sidebarWidgets || [];
            if (sidebarWidgetsConfig && sidebarWidgetsConfig.length > 0) {
                show = true;
            }
            this.showSidebarWidgets = show;
            this.widgets = show;
        };
        /**
         * Get record view metadata
         *
         * @returns {object} metadata RecordViewMetadata
         */
        RecordViewStore.prototype.getRecordViewMetadata = function () {
            var meta = this.metadataStore.get() || {};
            return meta.recordView || {};
        };
        /**
         * Get vardefs
         *
         * @returns {object} vardefs FieldDefinitionMap
         */
        RecordViewStore.prototype.getVardefs = function () {
            var meta = this.getRecordViewMetadata();
            return meta.vardefs || {};
        };
        /**
         * Get view fields observable
         *
         * @returns {object} Observable<ViewFieldDefinition[]>
         */
        RecordViewStore.prototype.getViewFieldsObservable = function () {
            return this.metadataStore.recordViewMetadata$.pipe(operators.map(function (recordMetadata) {
                var fields = [];
                recordMetadata.panels.forEach(function (panel) {
                    panel.rows.forEach(function (row) {
                        row.cols.forEach(function (col) {
                            fields.push(col);
                        });
                    });
                });
                return fields;
            }));
        };
        return RecordViewStore;
    }(ViewStore));
    RecordViewStore.decorators = [
        { type: i0.Injectable }
    ];
    RecordViewStore.ctorParameters = function () { return [
        { type: RecordFetchGQL },
        { type: RecordSaveGQL },
        { type: AppStateStore },
        { type: LanguageStore },
        { type: NavigationStore },
        { type: ModuleNavigation },
        { type: MetadataStore },
        { type: LocalStorageService },
        { type: MessageService },
        { type: SubpanelStoreFactory },
        { type: RecordManager },
        { type: StatisticsBatch },
        { type: RecordStoreFactory }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var StatusBarComponent = /** @class */ (function () {
        function StatusBarComponent(recordViewStore, moduleNavigation) {
            this.recordViewStore = recordViewStore;
            this.moduleNavigation = moduleNavigation;
            this.displayResponsiveTable = false;
        }
        return StatusBarComponent;
    }());
    StatusBarComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-status-bar',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<ng-container>\n    <div class=\"record-view-header\">\n        <ng-container *ngIf=\"displayResponsiveTable\">\n            <div class=\"d-flex flex-nowrap\">\n                <div class=\"row\">\n                    <div class=\"w-100\"></div>\n                    <div class=\"col\">\n                        <div class=\"order-2\">\n                            <div>Record Status Bar Component</div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </ng-container>\n        <ng-template [ngIf]=\"!displayResponsiveTable\">\n            <div class=\"row mr-0\">\n                <div class=\"col-md-4\">\n                    <div>Record Status Bar Component</div>\n                </div>\n            </div>\n        </ng-template>\n    </div>\n</ng-container>\n"
                },] }
    ];
    StatusBarComponent.ctorParameters = function () { return [
        { type: RecordViewStore },
        { type: ModuleNavigation }
    ]; };

    var FiltersListGQL = /** @class */ (function (_super) {
        __extends(FiltersListGQL, _super);
        function FiltersListGQL(apollo) {
            var _this = _super.call(this, apollo) || this;
            _this.apollo = apollo;
            return _this;
        }
        /**
         * Fetch the list of filters from the backend
         *
         * @param {string} module to use
         * @param {object} criteria to use
         * @param {object} sort to use
         * @param {object} pagination to use
         * @returns {object} Observable<any>
         */
        FiltersListGQL.prototype.get = function (module, criteria, sort, pagination) {
            return _super.prototype.get.call(this, module, criteria, sort, pagination);
        };
        /**
         * Map record. Allow for extensions
         * @param record
         */
        FiltersListGQL.prototype.mapRecord = function (record) {
            if (!record) {
                return record;
            }
            record.key = record.id || (record.attributes && record.attributes.id) || '';
            var contents = (record.attributes && record.attributes && record.attributes.contents) || null;
            if (contents) {
                var savedFilter = Object.assign({}, record);
                savedFilter.criteria = contents;
                return savedFilter;
            }
            return record;
        };
        return FiltersListGQL;
    }(ListGQL));
    FiltersListGQL.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function FiltersListGQL_Factory() { return new FiltersListGQL(i0__namespace.ɵɵinject(i1__namespace.Apollo)); }, token: FiltersListGQL, providedIn: "root" });
    FiltersListGQL.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    FiltersListGQL.ctorParameters = function () { return [
        { type: i1.Apollo }
    ]; };

    var FilterListStore = /** @class */ (function (_super) {
        __extends(FilterListStore, _super);
        /**
         * Constructor
         * @param listGQL
         * @param configs
         * @param preferences
         * @param appState
         * @param language
         * @param message
         * @param auth
         * @param moduleNameMapper
         */
        function FilterListStore(listGQL, configs, preferences, appState, language, message, auth, moduleNameMapper) {
            var _this = _super.call(this, listGQL, configs, preferences, appState, language, message) || this;
            _this.listGQL = listGQL;
            _this.configs = configs;
            _this.preferences = preferences;
            _this.appState = appState;
            _this.language = language;
            _this.message = message;
            _this.auth = auth;
            _this.moduleNameMapper = moduleNameMapper;
            _this.moduleName = 'saved-search';
            _this.filterFields = {
                module: 'search_module',
                user: 'assigned_user_id',
            };
            return _this;
        }
        /**
         * Initialize store
         * @param module
         */
        FilterListStore.prototype.init = function (module) {
            var result$ = _super.prototype.init.call(this, this.moduleName, false);
            this.initCriteria(module);
            return result$;
        };
        /**
         * Load / reload records using current pagination and criteria
         *
         * @param {boolean} useCache if to use cache
         * @returns {object} Observable<RecordList>
         */
        FilterListStore.prototype.load = function (useCache) {
            if (useCache === void 0) { useCache = true; }
            return _super.prototype.load.call(this, useCache);
        };
        /**
         * Get current list of saved filters
         */
        FilterListStore.prototype.getFilters = function () {
            return this.records;
        };
        /**
         * Add new filter to list
         * @param filter
         */
        FilterListStore.prototype.addFilter = function (filter) {
            var isNew = true;
            var filters = this.records;
            var newList = [];
            filters.forEach(function (record) {
                if (record.id === filter.id) {
                    newList.push(filter);
                    isNew = false;
                    return;
                }
                newList.push(record);
            });
            if (isNew) {
                newList.push(filter);
            }
            this.updateState(Object.assign(Object.assign({}, this.internalState), { records: newList }));
        };
        /**
         * Remove existing filter
         * @param filter
         */
        FilterListStore.prototype.removeFilter = function (filter) {
            if (!filter || !filter.id) {
                return;
            }
            var filters = this.records;
            var newList = [];
            filters.forEach(function (record) {
                if (record.id === filter.id) {
                    return;
                }
                newList.push(record);
            });
            this.updateState(Object.assign(Object.assign({}, this.internalState), { records: newList }));
        };
        /**
         * Initialize criteria
         * @param module
         */
        FilterListStore.prototype.initCriteria = function (module) {
            var criteria = this.criteria;
            criteria.filters[this.filterFields.module] = {
                field: this.filterFields.module,
                operator: '=',
                values: [this.moduleNameMapper.toLegacy(module)]
            };
            criteria.filters[this.filterFields.user] = {
                field: this.filterFields.user,
                operator: '=',
                values: [this.auth.getCurrentUser().id]
            };
            this.updateSearchCriteria(criteria, false);
        };
        return FilterListStore;
    }(RecordListStore));
    FilterListStore.decorators = [
        { type: i0.Injectable }
    ];
    FilterListStore.ctorParameters = function () { return [
        { type: FiltersListGQL },
        { type: SystemConfigStore },
        { type: UserPreferenceStore },
        { type: AppStateStore },
        { type: LanguageStore },
        { type: MessageService },
        { type: AuthService },
        { type: ModuleNameMapper }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var FilterListStoreFactory = /** @class */ (function () {
        /**
         * Constructor
         * @param listGQL
         * @param configs
         * @param preferences
         * @param appState
         * @param language
         * @param message
         * @param auth
         * @param moduleNameMapper
         */
        function FilterListStoreFactory(listGQL, configs, preferences, appState, language, message, auth, moduleNameMapper) {
            this.listGQL = listGQL;
            this.configs = configs;
            this.preferences = preferences;
            this.appState = appState;
            this.language = language;
            this.message = message;
            this.auth = auth;
            this.moduleNameMapper = moduleNameMapper;
        }
        /**
         * Create a new FilterListStore instance
         * @returns {object} FilterListStore
         */
        FilterListStoreFactory.prototype.create = function () {
            return new FilterListStore(this.listGQL, this.configs, this.preferences, this.appState, this.language, this.message, this.auth, this.moduleNameMapper);
        };
        return FilterListStoreFactory;
    }());
    FilterListStoreFactory.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function FilterListStoreFactory_Factory() { return new FilterListStoreFactory(i0__namespace.ɵɵinject(FiltersListGQL), i0__namespace.ɵɵinject(SystemConfigStore), i0__namespace.ɵɵinject(UserPreferenceStore), i0__namespace.ɵɵinject(AppStateStore), i0__namespace.ɵɵinject(LanguageStore), i0__namespace.ɵɵinject(MessageService), i0__namespace.ɵɵinject(AuthService), i0__namespace.ɵɵinject(ModuleNameMapper)); }, token: FilterListStoreFactory, providedIn: "root" });
    FilterListStoreFactory.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root',
                },] }
    ];
    FilterListStoreFactory.ctorParameters = function () { return [
        { type: FiltersListGQL },
        { type: SystemConfigStore },
        { type: UserPreferenceStore },
        { type: AppStateStore },
        { type: LanguageStore },
        { type: MessageService },
        { type: AuthService },
        { type: ModuleNameMapper }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var ConfirmationModalService = /** @class */ (function () {
        function ConfirmationModalService(modalService) {
            this.modalService = modalService;
        }
        ConfirmationModalService.prototype.showModal = function (messageLabel, onProceed) {
            var modal = this.modalService.open(MessageModalComponent);
            modal.componentInstance.textKey = messageLabel !== null && messageLabel !== void 0 ? messageLabel : 'LBL_GENERIC_CONFIRMATION';
            modal.componentInstance.buttons = [
                {
                    labelKey: 'LBL_CANCEL',
                    klass: ['btn-secondary'],
                    onClick: function (activeModal) { return activeModal.dismiss(); }
                },
                {
                    labelKey: 'LBL_PROCEED',
                    klass: ['btn-main'],
                    onClick: function (activeModal) {
                        onProceed();
                        activeModal.close();
                    }
                },
            ];
        };
        return ConfirmationModalService;
    }());
    ConfirmationModalService.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function ConfirmationModalService_Factory() { return new ConfirmationModalService(i0__namespace.ɵɵinject(i1__namespace$3.NgbModal)); }, token: ConfirmationModalService, providedIn: "root" });
    ConfirmationModalService.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root',
                },] }
    ];
    ConfirmationModalService.ctorParameters = function () { return [
        { type: i1$2.NgbModal }
    ]; };

    var initialFilter = {
        key: 'default',
        module: 'saved-search',
        attributes: {
            contents: ''
        },
        criteria: {
            name: 'default',
            filters: {}
        }
    };
    var initialFilters = {
        'default': i5.deepClone(initialFilter)
    };
    var initialState$6 = {
        module: '',
        widgets: true,
        actionPanel: '',
        showSidebarWidgets: false,
        recordPanelConfig: {},
        activeFilters: i5.deepClone(initialFilters),
        openFilter: i5.deepClone(initialFilter)
    };
    var ListViewStore = /** @class */ (function (_super) {
        __extends(ListViewStore, _super);
        function ListViewStore(appStateStore, languageStore, navigationStore, moduleNavigation, metadataStore, localStorage, message, listStoreFactory, modalService, filterListStoreFactory, confirmation) {
            var _this = _super.call(this, appStateStore, languageStore, navigationStore, moduleNavigation, metadataStore) || this;
            _this.appStateStore = appStateStore;
            _this.languageStore = languageStore;
            _this.navigationStore = navigationStore;
            _this.moduleNavigation = moduleNavigation;
            _this.metadataStore = metadataStore;
            _this.localStorage = localStorage;
            _this.message = message;
            _this.listStoreFactory = listStoreFactory;
            _this.modalService = modalService;
            _this.filterListStoreFactory = filterListStoreFactory;
            _this.confirmation = confirmation;
            /** Internal Properties */
            _this.cache$ = null;
            _this.internalState = i5.deepClone(initialState$6);
            _this.store = new rxjs.BehaviorSubject(_this.internalState);
            _this.state$ = _this.store.asObservable();
            _this.subs = [];
            _this.recordList = _this.listStoreFactory.create();
            _this.columns$ = metadataStore.listViewColumns$;
            _this.lineActions$ = metadataStore.listViewLineActions$;
            _this.records$ = _this.recordList.records$;
            _this.criteria$ = _this.recordList.criteria$;
            _this.context$ = _this.recordList.criteria$.pipe(operators.map(function () { return _this.getViewContext(); }));
            _this.sort$ = _this.recordList.sort$;
            _this.pagination$ = _this.recordList.pagination$;
            _this.selection$ = _this.recordList.selection$;
            _this.selectedCount$ = _this.recordList.selectedCount$;
            _this.selectedStatus$ = _this.recordList.selectedStatus$;
            _this.loading$ = _this.recordList.loading$;
            _this.moduleName$ = _this.state$.pipe(operators.map(function (state) { return state.module; }), operators.distinctUntilChanged());
            _this.widgets$ = _this.state$.pipe(operators.map(function (state) { return state.widgets; }), operators.distinctUntilChanged());
            _this.showSidebarWidgets$ = _this.state$.pipe(operators.map(function (state) { return state.showSidebarWidgets; }));
            _this.displayFilters$ = _this.state$.pipe(operators.map(function (state) { return state.actionPanel === 'filters'; }), operators.distinctUntilChanged());
            _this.actionPanel$ = _this.state$.pipe(operators.map(function (state) { return state.actionPanel; }), operators.distinctUntilChanged());
            _this.activeFilters$ = _this.state$.pipe(operators.map(function (state) { return state.activeFilters; }), operators.distinctUntilChanged());
            _this.openFilter$ = _this.state$.pipe(operators.map(function (state) { return state.openFilter; }), operators.distinctUntilChanged());
            var data$ = rxjs.combineLatest([_this.records$, _this.criteria$, _this.pagination$, _this.selection$, _this.loading$]).pipe(operators.map(function (_c) {
                var _d = __read(_c, 5), records = _d[0], criteria = _d[1], pagination = _d[2], selection = _d[3], loading = _d[4];
                _this.data = { records: records, criteria: criteria, pagination: pagination, selection: selection, loading: loading };
                return _this.data;
            }));
            _this.vm$ = rxjs.combineLatest([data$, _this.appData$, _this.metadata$]).pipe(operators.map(function (_c) {
                var _d = __read(_c, 3), data = _d[0], appData = _d[1], metadata = _d[2];
                _this.vm = { data: data, appData: appData, metadata: metadata };
                return _this.vm;
            }));
            _this.subs.push(_this.recordList.loading$.subscribe(function (loading) {
                _this.appStateStore.updateLoading(_this.internalState.module + "-list-fetch", loading);
            }, function () {
                _this.appStateStore.updateLoading(_this.internalState.module + "-list-fetch", false);
            }));
            var listViewColumns = [];
            _this.subs.push(metadataStore.listViewColumns$.subscribe(function (cols) {
                listViewColumns = cols;
            }));
            _this.columns = new rxjs.BehaviorSubject(listViewColumns);
            _this.columns$ = _this.columns.asObservable();
            _this.initDataUpdateState();
            _this.initDataSetUpdatedState();
            _this.filterList = _this.filterListStoreFactory.create();
            return _this;
        }
        Object.defineProperty(ListViewStore.prototype, "actionPanel", {
            get: function () {
                return this.internalState.actionPanel;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ListViewStore.prototype, "showFilters", {
            get: function () {
                return this.internalState.actionPanel === 'filters';
            },
            set: function (show) {
                this.updateState(Object.assign(Object.assign({}, this.internalState), { actionPanel: show ? 'filters' : '' }));
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ListViewStore.prototype, "widgets", {
            get: function () {
                return this.internalState.widgets;
            },
            set: function (show) {
                this.updateState(Object.assign(Object.assign({}, this.internalState), { widgets: show }));
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ListViewStore.prototype, "showSidebarWidgets", {
            get: function () {
                return this.internalState.showSidebarWidgets;
            },
            set: function (show) {
                this.updateState(Object.assign(Object.assign({}, this.internalState), { showSidebarWidgets: show }));
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ListViewStore.prototype, "recordPanelConfig", {
            get: function () {
                return this.internalState.recordPanelConfig;
            },
            enumerable: false,
            configurable: true
        });
        ListViewStore.prototype.isRecordPanelOpen = function () {
            return this.internalState.actionPanel === 'recordPanel';
        };
        ListViewStore.prototype.openRecordPanel = function (config) {
            this.updateState(Object.assign(Object.assign({}, this.internalState), { actionPanel: 'recordPanel', recordPanelConfig: config }));
        };
        ListViewStore.prototype.closeRecordPanel = function () {
            this.updateState(Object.assign(Object.assign({}, this.internalState), { actionPanel: '', recordPanelConfig: {} }));
        };
        ListViewStore.prototype.getModuleName = function () {
            return this.internalState.module;
        };
        ListViewStore.prototype.getViewContext = function () {
            var context = {
                module: this.getModuleName(),
            };
            context.criteria = this.recordList.criteria;
            context.sort = this.recordList.sort;
            return context;
        };
        /**
         * Clean destroy
         */
        ListViewStore.prototype.destroy = function () {
            this.clear();
            this.subs.forEach(function (sub) { return sub.unsubscribe(); });
        };
        Object.defineProperty(ListViewStore.prototype, "activeFilters", {
            /**
             * get active filters
             *
             * @returns {object} active filters
             */
            get: function () {
                return i5.deepClone(this.internalState.activeFilters);
            },
            enumerable: false,
            configurable: true
        });
        /**
         * Clear observable cache
         */
        ListViewStore.prototype.clear = function () {
            this.cache$ = null;
            this.updateState(i5.deepClone(initialState$6));
            this.recordList.clear();
        };
        ListViewStore.prototype.clearAuthBased = function () {
            this.clear();
            this.recordList.clearAuthBased();
        };
        /**
         * Initial list records load if not cached and update state.
         * Returns observable to be used in resolver if needed
         *
         * @param {string} module to use
         * @returns {object} Observable<any>
         */
        ListViewStore.prototype.init = function (module) {
            var _this = this;
            this.internalState.module = module;
            this.recordList.init(module, false);
            this.filterList.init(module);
            this.filterList.load(false).pipe(operators.take(1)).subscribe();
            this.calculateShowWidgets();
            this.storageLoad(module, 'active-filters', function (storage) { return _this.setFilters(storage, false); });
            this.storageLoad(module, 'sort-selection', function (storage) { return _this.recordList.sort = storage; });
            return this.load();
        };
        /**
         * Set open filters
         *
         * @param {object} filter to set
         */
        ListViewStore.prototype.setOpenFilter = function (filter) {
            this.updateState(Object.assign(Object.assign({}, this.internalState), { openFilter: i5.deepClone(filter) }));
        };
        /**
         * Set active filters
         *
         * @param {object} filters to set
         * @param {boolean} reload flag
         */
        ListViewStore.prototype.setFilters = function (filters, reload) {
            if (reload === void 0) { reload = true; }
            var _a, _b;
            var filterKey = Object.keys(filters).shift();
            var filter = filters[filterKey];
            this.updateState(Object.assign(Object.assign({}, this.internalState), { activeFilters: i5.deepClone(filters), openFilter: i5.deepClone(filter) }));
            if (filter.criteria) {
                var orderBy = (_a = filter.criteria.orderBy) !== null && _a !== void 0 ? _a : '';
                var sortOrder = (_b = filter.criteria.sortOrder) !== null && _b !== void 0 ? _b : '';
                var direction = this.recordList.mapSortOrder(sortOrder);
                this.recordList.updateSorting(orderBy, direction, false);
                this.updateLocalStorage();
            }
            this.updateSearchCriteria(reload);
        };
        /**
         * Update filters
         *
         * @param {object} filter to set
         */
        ListViewStore.prototype.addSavedFilter = function (filter) {
            var newState = Object.assign({}, this.internalState);
            var activeFilters = this.activeFilters;
            if (filter.key && activeFilters[filter.key]) {
                activeFilters[filter.key] = filter;
                newState.activeFilters = activeFilters;
            }
            newState.openFilter = filter;
            this.filterList.addFilter(filter);
            this.updateState(newState);
        };
        /**
         * Update filters
         *
         * @param {object} filter to set
         */
        ListViewStore.prototype.removeSavedFilter = function (filter) {
            if (!filter || !filter.key) {
                return;
            }
            this.filterList.removeFilter(filter);
            var newState = Object.assign({}, this.internalState);
            if (newState.openFilter && newState.openFilter.key === filter.key) {
                this.resetFilters(true);
            }
        };
        /**
         * Reset active filters
         *
         * @param {boolean} reload flag
         */
        ListViewStore.prototype.resetFilters = function (reload) {
            if (reload === void 0) { reload = true; }
            this.updateState(Object.assign(Object.assign({}, this.internalState), { activeFilters: i5.deepClone(initialFilters), openFilter: i5.deepClone(initialFilter) }));
            this.updateSearchCriteria(reload);
        };
        /**
         * Update the search criteria
         *
         * @param {boolean} reload flag
         */
        ListViewStore.prototype.updateSearchCriteria = function (reload) {
            if (reload === void 0) { reload = true; }
            var filters = Object.assign({}, this.internalState.activeFilters);
            var filterKey = Object.keys(filters).shift();
            var filter = filters[filterKey];
            this.recordList.updateSearchCriteria(filter.criteria, reload);
            if (reload) {
                this.updateLocalStorage();
            }
        };
        ListViewStore.prototype.updateLocalStorage = function () {
            this.storageSave(this.internalState.module, 'active-filters', this.internalState.activeFilters);
            this.storageSave(this.internalState.module, 'sort-selection', this.recordList.sort);
        };
        ListViewStore.prototype.triggerDataUpdate = function () {
            this.dataUpdateState.next(true);
        };
        /**
         * Load / reload records using current pagination and criteria
         *
         * @param {boolean} useCache if to use cache
         * @returns {object} Observable<ListViewState>
         */
        ListViewStore.prototype.load = function (useCache) {
            if (useCache === void 0) { useCache = true; }
            this.storageSave(this.internalState.module, 'active-filters', this.internalState.activeFilters);
            this.storageSave(this.internalState.module, 'sort-selection', this.recordList.sort);
            return this.recordList.load(useCache);
        };
        /**
         * Internal API
         */
        /**
         * Update the state
         *
         * @param {object} state to set
         */
        ListViewStore.prototype.updateState = function (state) {
            this.store.next(this.internalState = state);
        };
        /**
         * Calculate if widgets are to display
         */
        ListViewStore.prototype.calculateShowWidgets = function () {
            var show = false;
            var meta = this.metadataStore.get() || {};
            var listViewMeta = meta.listView || {};
            var sidebarWidgetsConfig = listViewMeta.sidebarWidgets || [];
            if (sidebarWidgetsConfig && sidebarWidgetsConfig.length > 0) {
                show = true;
            }
            this.showSidebarWidgets = show;
            this.widgets = show;
        };
        /**
         * Store the data in local storage
         *
         * @param {string} module to store in
         * @param {string} storageKey to store in
         * @param {} data to store
         */
        ListViewStore.prototype.storageSave = function (module, storageKey, data) {
            var storage = this.localStorage.get(storageKey);
            if (!storage) {
                storage = {};
            }
            storage[module] = data;
            this.localStorage.set(storageKey, storage);
        };
        /**
         * Store the key in local storage
         *
         * @param {string} module to load from
         * @param {string} storageKey from load from
         * @param {Function} loader to store in
         */
        ListViewStore.prototype.storageLoad = function (module, storageKey, loader) {
            var storage = this.localStorage.get(storageKey);
            if (!storage || !storage[module]) {
                return;
            }
            loader(storage[module]);
        };
        ListViewStore.prototype.openColumnChooserDialog = function () {
            var _this = this;
            var modalRef = this.modalService.open(ColumnChooserComponent, {
                ariaLabelledBy: 'modal-basic-title',
                centered: true,
                size: 'lg',
                windowClass: 'column-chooser-modal'
            });
            var displayedColumns = this.columns.getValue().filter(function (col) {
                return !col.hasOwnProperty('default')
                    || (col.hasOwnProperty('default') && col.default === true);
            });
            var hiddenColumns = this.columns.getValue().filter(function (col) {
                return col.hasOwnProperty('default') && col.default === false;
            });
            modalRef.componentInstance.displayed = displayedColumns;
            modalRef.componentInstance.hidden = hiddenColumns;
            modalRef.result.then(function (result) {
                var allColumns = [];
                var selectedDisplayColumns = result.displayed;
                var selectedHideColumns = result.hidden;
                selectedDisplayColumns.forEach(function (column) {
                    column.default = true;
                });
                selectedHideColumns.forEach(function (column) {
                    column.default = false;
                });
                allColumns.push.apply(allColumns, __spreadArray(__spreadArray([], __read(selectedDisplayColumns)), __read(selectedHideColumns)));
                _this.columns.next(allColumns);
            });
        };
        /**
         * Initialize data update state.
         * It should be emitted on any change in values on the record list.
         * Reload/Pagination is not considered as a data update
         */
        ListViewStore.prototype.initDataUpdateState = function () {
            this.dataUpdateState = new rxjs.BehaviorSubject(true);
            this.dataUpdate$ = this.dataUpdateState.asObservable();
        };
        /**
         *  Initialize the dataSet update state.
         *  It should be emitted on any change in dataSet e.g. due to data filter, due to data delete,
         *  due to data edit or any event which causes change in the resulting dataSet.
         */
        ListViewStore.prototype.initDataSetUpdatedState = function () {
            this.dataSetUpdate$ = rxjs.combineLatest([this.criteria$, this.dataUpdate$]).pipe(operators.map(function () { return true; }));
        };
        return ListViewStore;
    }(ViewStore));
    ListViewStore.decorators = [
        { type: i0.Injectable }
    ];
    ListViewStore.ctorParameters = function () { return [
        { type: AppStateStore },
        { type: LanguageStore },
        { type: NavigationStore },
        { type: ModuleNavigation },
        { type: MetadataStore },
        { type: LocalStorageService },
        { type: MessageService },
        { type: RecordListStoreFactory },
        { type: i1$2.NgbModal },
        { type: FilterListStoreFactory },
        { type: ConfirmationModalService }
    ]; };

    var ActionMenuComponent = /** @class */ (function () {
        function ActionMenuComponent(listStore, actionHandler, screenSize, systemConfigs) {
            var _this = this;
            this.listStore = listStore;
            this.actionHandler = actionHandler;
            this.screenSize = screenSize;
            this.systemConfigs = systemConfigs;
            this.configState = new rxjs.BehaviorSubject({ buttons: [] });
            this.config$ = this.configState.asObservable();
            this.vm$ = rxjs.combineLatest([
                this.screenSize.screenSize$
            ]).pipe(operators.map(function (_a) {
                var _b = __read(_a, 1), screenSize = _b[0];
                if (screenSize) {
                    _this.screen = screenSize;
                }
                _this.configState.next(_this.getButtonGroupConfig());
                return { screenSize: screenSize };
            }));
            this.screen = exports.ScreenSize.Medium;
            this.defaultBreakpoint = 3;
        }
        ActionMenuComponent.prototype.ngOnInit = function () {
            this.configState.next(this.getButtonGroupConfig());
        };
        ActionMenuComponent.prototype.getButtonGroupConfig = function () {
            var _this = this;
            var actions = this.actions;
            var config = {
                buttonKlass: ['action-button'],
                dropdownLabel: this.listStore.appStrings.LBL_MORE || '',
                buttons: [],
                dropdownOptions: {
                    placement: ['bottom-right']
                },
                breakpoint: this.getBreakpoint()
            };
            actions.forEach(function (action) {
                var buttonConfig = _this.getButtonConfig(action);
                if (buttonConfig && buttonConfig.klass) {
                    config.buttons.push(buttonConfig);
                }
            });
            return config;
        };
        ActionMenuComponent.prototype.getBreakpoint = function () {
            var breakpointMap = this.systemConfigs && this.systemConfigs.getConfigValue('listview_actions_limits');
            if (this.screen && breakpointMap && breakpointMap[this.screen]) {
                this.breakpoint = breakpointMap[this.screen];
                return this.breakpoint;
            }
            if (this.breakpoint) {
                return this.breakpoint;
            }
            return this.defaultBreakpoint;
        };
        Object.defineProperty(ActionMenuComponent.prototype, "actions", {
            get: function () {
                if (!this.listStore.vm.appData.module || !this.listStore.vm.appData.module.menu) {
                    return [];
                }
                return this.listStore.vm.appData.module.menu.filter(function (action) { return !(action.name === 'List' || action.name === 'View'); });
            },
            enumerable: false,
            configurable: true
        });
        ActionMenuComponent.prototype.getButtonConfig = function (action) {
            var _this = this;
            if (!this.listStore.vm.appData.appState.module) {
                return {};
            }
            if (!this.listStore.vm.appData.language) {
                return {};
            }
            var module = this.listStore.vm.appData.appState.module;
            var language = this.listStore.vm.appData.language;
            var labelKey = '';
            if (action.actionLabelKey) {
                labelKey = action.actionLabelKey;
            }
            return {
                klass: 'action-button',
                label: this.actionHandler.getActionLabel(module, action, language, labelKey),
                onClick: function () {
                    _this.actionHandler.navigate(action).then();
                }
            };
        };
        return ActionMenuComponent;
    }());
    ActionMenuComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-action-menu',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<div class=\"list-view-actions float-right\" *ngIf=\"(vm$ | async) as vm\">\n    <scrm-button-group [config$]=\"config$\"></scrm-button-group>\n</div>\n"
                },] }
    ];
    ActionMenuComponent.ctorParameters = function () { return [
        { type: ListViewStore },
        { type: ModuleNavigation },
        { type: ScreenSizeObserverService },
        { type: SystemConfigStore }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var ActionMenuModule = /** @class */ (function () {
        function ActionMenuModule() {
        }
        return ActionMenuModule;
    }());
    ActionMenuModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [ActionMenuComponent],
                    exports: [ActionMenuComponent],
                    imports: [
                        common.CommonModule,
                        ModalModule,
                        ButtonModule,
                        i3.AngularSvgIconModule,
                        ButtonGroupModule
                    ]
                },] }
    ];

    var SettingsMenuComponent = /** @class */ (function () {
        function SettingsMenuComponent(listStore, modalService, screenSize, systemConfigStore) {
            var _this = this;
            this.listStore = listStore;
            this.modalService = modalService;
            this.screenSize = screenSize;
            this.systemConfigStore = systemConfigStore;
            this.configState = new rxjs.BehaviorSubject({ buttons: [] });
            this.config$ = this.configState.asObservable();
            this.vm$ = rxjs.combineLatest([
                this.listStore.widgets$,
                this.listStore.displayFilters$,
                this.listStore.criteria$,
                this.screenSize.screenSize$,
                this.listStore.showSidebarWidgets$,
                this.listStore.filterList.records$
            ]).pipe(operators.map(function (_a) {
                var _b = __read(_a, 6), widgets = _b[0], displayFilters = _b[1], criteria = _b[2], screenSize = _b[3], showSidebarWidgets = _b[4], savedFilters = _b[5];
                if (screenSize) {
                    _this.screen = screenSize;
                }
                _this.configState.next(_this.getButtonGroupConfig());
                return { widgets: widgets, displayFilters: displayFilters, criteria: criteria, screenSize: screenSize, showSidebarWidgets: showSidebarWidgets, savedFilters: savedFilters };
            }));
            this.screen = exports.ScreenSize.Medium;
            this.defaultBreakpoint = 5;
        }
        SettingsMenuComponent.prototype.ngOnInit = function () {
            this.configState.next(this.getButtonGroupConfig());
        };
        SettingsMenuComponent.prototype.getButtonGroupConfig = function () {
            var _this = this;
            var availableButtons = [
                // Commented temporarily as it is not implemented
                /*
                {button: this.getDisplayAsButton()},
                 */
                {
                    show: function () { return _this.listStore.filterList.getFilters() && _this.listStore.filterList.getFilters().length >= 1; },
                    button: this.getMyFiltersButton(),
                },
                { button: this.getFilterButton() },
                {
                    show: function () { return !Object.keys(_this.getFilters()).every(function (key) { return _this.getFilters()[key].operator === ''; }); },
                    button: this.getClearButton(),
                },
                { button: this.getColumnChooserButton() },
                {
                    show: function () { return _this.listStore.widgets; },
                    button: this.getChartsButton(),
                },
            ];
            var config = {
                buttonKlass: ['settings-button'],
                dropdownLabel: this.listStore.appStrings.LBL_OPTIONS || '',
                breakpoint: this.getBreakpoint(),
                dropdownOptions: {
                    placement: ['bottom-right'],
                    wrapperKlass: ['dropdown-button-secondary']
                },
                buttons: []
            };
            availableButtons.forEach(function (availableButton) {
                if (!availableButton.show) {
                    config.buttons.push(availableButton.button);
                    return;
                }
                if (availableButton.show()) {
                    config.buttons.push(availableButton.button);
                }
            });
            return config;
        };
        SettingsMenuComponent.prototype.getFilters = function () {
            return this.listStore.recordList.criteria.filters;
        };
        SettingsMenuComponent.prototype.getBreakpoint = function () {
            var breakpointMap = this.systemConfigStore.getConfigValue('listview_settings_limits');
            if (this.screen && breakpointMap && breakpointMap[this.screen]) {
                this.breakpoint = breakpointMap[this.screen];
                return this.breakpoint;
            }
            if (this.breakpoint) {
                return this.breakpoint;
            }
            return this.defaultBreakpoint;
        };
        SettingsMenuComponent.prototype.getFilterButton = function () {
            var _this = this;
            return {
                label: this.listStore.appStrings.LBL_FILTER || '',
                klass: {
                    'filter-settings-button': true,
                    active: this.listStore.showFilters
                },
                icon: 'filter',
                onClick: function () {
                    _this.listStore.showFilters = !_this.listStore.showFilters;
                }
            };
        };
        SettingsMenuComponent.prototype.getMyFiltersButton = function () {
            var _this = this;
            var filters = this.listStore.filterList.getFilters();
            var dropdownConfig = {
                label: this.listStore.appStrings.LBL_SAVED_FILTER_SHORTCUT || '',
                klass: ['dropdown-toggle'],
                wrapperKlass: ['filter-action-group'],
                items: []
            };
            var activeFilters = this.listStore.activeFilters;
            filters.forEach(function (filter) {
                var isActive = Object.keys(activeFilters).some(function (key) { return key === filter.key; });
                var button = {
                    label: filter.attributes.name,
                    onClick: function () {
                        _this.listStore.showFilters = false;
                        if (isActive) {
                            _this.listStore.resetFilters();
                        }
                        else {
                            _this.listStore.setOpenFilter(filter);
                            var selectedFilters = {};
                            selectedFilters[filter.key] = filter;
                            _this.listStore.setFilters(selectedFilters);
                        }
                    }
                };
                if (isActive) {
                    button.icon = 'filter';
                    button.iconKlass = 'small';
                    button.klass = ['active'];
                }
                dropdownConfig.items.push(button);
            });
            return dropdownConfig;
        };
        SettingsMenuComponent.prototype.getClearButton = function () {
            var _this = this;
            return {
                label: this.listStore.appStrings.LBL_CLEAR_BUTTON_LABEL || '',
                icon: 'filter',
                onClick: function () {
                    _this.listStore.showFilters = false;
                    _this.listStore.resetFilters();
                }
            };
        };
        SettingsMenuComponent.prototype.getChartsButton = function () {
            var _this = this;
            return {
                label: this.listStore.appStrings.LBL_INSIGHTS || '',
                klass: {
                    active: this.listStore.showSidebarWidgets
                },
                icon: 'pie',
                onClick: function () {
                    _this.listStore.showSidebarWidgets = !_this.listStore.showSidebarWidgets;
                }
            };
        };
        SettingsMenuComponent.prototype.getDisplayAsButton = function () {
            return {
                label: 'Display As',
                klass: {},
                items: []
            };
        };
        SettingsMenuComponent.prototype.getColumnChooserButton = function () {
            var _this = this;
            return {
                label: this.listStore.appStrings.LBL_COLUMNS || '',
                klass: {
                    'column-chooser-button': true,
                },
                icon: 'column_chooser',
                onClick: function () {
                    _this.listStore.openColumnChooserDialog();
                }
            };
        };
        return SettingsMenuComponent;
    }());
    SettingsMenuComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-settings-menu',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<div class=\"list-view-settings float-right\" *ngIf=\"(vm$ | async) as vm\">\n    <scrm-button-group *ngIf=\"config$\" [config$]=\"config$\"></scrm-button-group>\n</div>\n"
                },] }
    ];
    SettingsMenuComponent.ctorParameters = function () { return [
        { type: ListViewStore },
        { type: i1$2.NgbModal },
        { type: ScreenSizeObserverService },
        { type: SystemConfigStore }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var SettingsMenuModule = /** @class */ (function () {
        function SettingsMenuModule() {
        }
        return SettingsMenuModule;
    }());
    SettingsMenuModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [SettingsMenuComponent],
                    exports: [SettingsMenuComponent],
                    imports: [
                        common.CommonModule,
                        ColumnChooserModule,
                        ImageModule,
                        ButtonModule,
                        DropdownButtonModule,
                        i1$2.NgbModule,
                        ButtonGroupModule
                    ]
                },] }
    ];

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var StatusBarModule = /** @class */ (function () {
        function StatusBarModule() {
        }
        return StatusBarModule;
    }());
    StatusBarModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [StatusBarComponent],
                    exports: [StatusBarComponent],
                    imports: [
                        common.CommonModule,
                        ModuleTitleModule,
                        ActionMenuModule,
                        SettingsMenuModule,
                        i3.AngularSvgIconModule,
                    ]
                },] }
    ];

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var TableComponent = /** @class */ (function () {
        function TableComponent() {
        }
        TableComponent.prototype.showHeader = function () {
            return this.config.showHeader;
        };
        TableComponent.prototype.showFooter = function () {
            return this.config.showFooter;
        };
        return TableComponent;
    }());
    TableComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-table',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<div class=\"{{ (config && config.klass) || ''}}\">\n    <scrm-table-header *ngIf=\"showHeader()\"\n                   [selection]=\"config.selection\"\n                   [bulkActions]=\"config.bulkActions\"\n                   [pagination]=\"config.pagination\">\n    </scrm-table-header>\n\n    <scrm-table-body [config]=\"config\"></scrm-table-body>\n\n    <scrm-table-footer *ngIf=\"showFooter()\"\n                   [selection]=\"config.selection\"\n                   [bulkActions]=\"config.bulkActions\"\n                   [pagination]=\"config.pagination\">\n    </scrm-table-footer>\n</div>\n\n"
                },] }
    ];
    TableComponent.propDecorators = {
        config: [{ type: i0.Input }]
    };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var TableHeaderComponent = /** @class */ (function () {
        function TableHeaderComponent() {
        }
        return TableHeaderComponent;
    }());
    TableHeaderComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-table-header',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<!-- Start List View Table Header Section -->\n\n<div class=\"list-view-tableactions table-header\">\n    <div class=\"row\">\n        <scrm-bulk-action-menu *ngIf=\"selection && bulkActions\"\n                               [selectionSource]=\"selection\"\n                               [actionSource]=\"bulkActions\">\n        </scrm-bulk-action-menu>\n        <div class=\"col mx-0 pl-0 table-pagination-wrapper\">\n            <scrm-pagination *ngIf=\"pagination\"\n                             [state]=\"pagination\">\n            </scrm-pagination>\n        </div>\n    </div>\n</div>\n\n<!-- End List View Table Header Section -->\n"
                },] }
    ];
    TableHeaderComponent.propDecorators = {
        selection: [{ type: i0.Input }],
        bulkActions: [{ type: i0.Input }],
        pagination: [{ type: i0.Input }]
    };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var TableHeaderModule = /** @class */ (function () {
        function TableHeaderModule() {
        }
        return TableHeaderModule;
    }());
    TableHeaderModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [TableHeaderComponent],
                    exports: [TableHeaderComponent],
                    imports: [
                        common.CommonModule,
                        PaginationModule,
                        BulkActionMenuModule,
                        i3.AngularSvgIconModule
                    ]
                },] }
    ];

    var TableBodyComponent = /** @class */ (function () {
        function TableBodyComponent(fieldManager) {
            this.fieldManager = fieldManager;
            this.maxColumns = 4;
        }
        TableBodyComponent.prototype.ngOnInit = function () {
            var _this = this;
            var selection$ = this.config.selection$ || rxjs.of(null).pipe(operators.shareReplay(1));
            var loading$ = this.config.loading$ || rxjs.of(false).pipe(operators.shareReplay(1));
            this.vm$ = rxjs.combineLatest([
                this.config.columns,
                selection$,
                this.config.maxColumns$,
                this.config.dataSource.connect(null),
                loading$
            ]).pipe(operators.map(function (_a) {
                var _b = __read(_a, 5), columns = _b[0], selection = _b[1], maxColumns = _b[2], records = _b[3], loading = _b[4];
                var displayedColumns = [];
                if (selection) {
                    displayedColumns.push('checkbox');
                }
                _this.maxColumns = maxColumns;
                var columnsDefs = _this.buildDisplayColumns(columns);
                displayedColumns.push.apply(displayedColumns, __spreadArray([], __read(columnsDefs)));
                displayedColumns.push('line-actions');
                var selected = selection && selection.selected || {};
                var selectionStatus = selection && selection.status || i5.SelectionStatus.NONE;
                return {
                    columns: columns,
                    selection: selection,
                    selected: selected,
                    selectionStatus: selectionStatus,
                    displayedColumns: displayedColumns,
                    records: records || [],
                    loading: loading
                };
            }));
        };
        TableBodyComponent.prototype.toggleSelection = function (id) {
            this.config.toggleRecordSelection(id);
        };
        TableBodyComponent.prototype.allSelected = function (status) {
            return status === i5.SelectionStatus.ALL;
        };
        TableBodyComponent.prototype.buildDisplayColumns = function (metaFields) {
            var i = 0;
            var hasLinkField = false;
            var returnArray = [];
            var fields = metaFields.filter(function (field) {
                return !field.hasOwnProperty('default')
                    || (field.hasOwnProperty('default') && field.default === true);
            });
            while (i < this.maxColumns && i < fields.length) {
                returnArray.push(fields[i].name);
                hasLinkField = hasLinkField || fields[i].link;
                i++;
            }
            if (!hasLinkField && (this.maxColumns < fields.length)) {
                for (i = this.maxColumns; i < fields.length; i++) {
                    if (fields[i].link) {
                        returnArray.splice(-1, 1);
                        returnArray.push(fields[i].name);
                        break;
                    }
                }
            }
            return returnArray;
        };
        TableBodyComponent.prototype.getFieldSort = function (field) {
            var _this = this;
            return {
                getSortDirection: function () { return _this.config.sort$.pipe(operators.map(function (sort) {
                    var direction = i5.SortDirection.NONE;
                    if (sort.orderBy === field.name) {
                        direction = sort.sortOrder;
                    }
                    return direction;
                })); },
                changeSortDirection: function (direction) {
                    _this.config.updateSorting(field.name, direction);
                }
            };
        };
        TableBodyComponent.prototype.getField = function (column, record) {
            if (!column || !record) {
                return null;
            }
            return this.fieldManager.addField(record, column);
        };
        return TableBodyComponent;
    }());
    TableBodyComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-table-body',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<ng-container *ngIf=\"(vm$ | async) as vm\">\n    <div class=\"position-relative d-flex flex-column\">\n        <table cdk-table [dataSource]=\"config.dataSource\"\n               aria-describedby=\"table-body\"\n               class=\"list-view-table striped-table table\">\n\n            <ng-container cdkColumnDef=\"checkbox\" *ngIf=\"vm.selection\">\n\n                <th cdk-header-cell scope=\"col\" *cdkHeaderCellDef class=\"primary-table-header\"></th>\n\n                <td cdk-cell *cdkCellDef=\"let record\">\n                    <label class=\"checkbox-container\">\n                        <input type=\"checkbox\"\n                               [checked]=\"(record['id'] && vm.selected[record['id']]) || allSelected(vm.selectionStatus) \"\n                               (change)=\"toggleSelection(record['id'])\"\n                               [disabled]=\"allSelected(vm.selectionStatus)\"\n                               aria-hidden=\"true\">\n                        <span class=\"checkmark\"></span>\n                    </label>\n                </td>\n\n            </ng-container>\n\n            <ng-container *ngFor=\"let column of vm.columns\" [cdkColumnDef]=\"column.name\">\n\n                <th cdk-header-cell\n                    *cdkHeaderCellDef\n                    scope=\"col\"\n                    class=\"primary-table-header\">\n\n                    <scrm-label [labelKey]=\"column.label\" [module]=\"config.module || ''\"></scrm-label>\n                    <scrm-sort-button *ngIf=\"config.sort$ && column.sortable\"\n                                      [state]=\"getFieldSort(column)\">\n                    </scrm-sort-button>\n\n                </th>\n\n                <td cdk-cell *cdkCellDef=\"let record\">\n                    <scrm-field [mode]=\"'list'\"\n                                [type]=\"column.type\"\n                                [field]=\"getField(column, record)\"\n                                [record]=\"record\">\n                    </scrm-field>\n                </td>\n\n            </ng-container>\n\n            <ng-container cdkColumnDef=\"line-actions\">\n\n                <th cdk-header-cell scope=\"col\" *cdkHeaderCellDef class=\"primary-table-header\"></th>\n\n                <td cdk-cell *cdkCellDef=\"let record\">\n                    <scrm-line-action-menu *ngIf=\"record && config.lineActions\"\n                                           [config]=\"config.lineActions\"\n                                           [record]=\"record\">\n                    </scrm-line-action-menu>\n                </td>\n\n            </ng-container>\n\n            <tr cdk-header-row *cdkHeaderRowDef=\"vm.displayedColumns\"></tr>\n            <tr cdk-row *cdkRowDef=\"let row; columns: vm.displayedColumns;\"></tr>\n\n        </table>\n\n        <div *ngIf=\"!vm.loading && vm.records.length === 0\">\n            <p class=\"lead text-center pt-3\">\n                <scrm-label labelKey=\"MSG_LIST_VIEW_NO_RESULTS_BASIC\"></scrm-label>\n            </p>\n        </div>\n        <div *ngIf=\"vm.loading\" [class.m-5]=\"!vm.records || vm.records.length === 0\">\n            <scrm-loading-spinner [overlay]=\"true\"></scrm-loading-spinner>\n        </div>\n    </div>\n</ng-container>\n"
                },] }
    ];
    TableBodyComponent.ctorParameters = function () { return [
        { type: FieldManager }
    ]; };
    TableBodyComponent.propDecorators = {
        config: [{ type: i0.Input }]
    };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var TableBodyModule = /** @class */ (function () {
        function TableBodyModule() {
        }
        return TableBodyModule;
    }());
    TableBodyModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [TableBodyComponent],
                    exports: [TableBodyComponent],
                    imports: [
                        common.CommonModule,
                        i3.AngularSvgIconModule,
                        table.CdkTableModule,
                        FieldModule,
                        SortButtonModule,
                        LineActionModule,
                        LoadingSpinnerModule,
                        LabelModule
                    ]
                },] }
    ];

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var TableFooterComponent = /** @class */ (function () {
        function TableFooterComponent() {
        }
        return TableFooterComponent;
    }());
    TableFooterComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-table-footer',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<!-- Start List View Table Footer Section -->\n\n<div class=\"list-view-tableactions table-footer\">\n  <div class=\"row\">\n      <scrm-bulk-action-menu *ngIf=\"selection && bulkActions\"\n                             [selectionSource]=\"selection\"\n                             [actionSource]=\"bulkActions\">\n      </scrm-bulk-action-menu>\n      <div class=\"col mx-0 pl-0 table-pagination-wrapper\">\n          <scrm-pagination *ngIf=\"pagination\"\n                           [state]=\"pagination\">\n          </scrm-pagination>\n      </div>\n  </div>\n</div>\n\n<!-- End List View Table Footer Section -->\n"
                },] }
    ];
    TableFooterComponent.propDecorators = {
        selection: [{ type: i0.Input }],
        bulkActions: [{ type: i0.Input }],
        pagination: [{ type: i0.Input }]
    };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var TableFooterModule = /** @class */ (function () {
        function TableFooterModule() {
        }
        return TableFooterModule;
    }());
    TableFooterModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [TableFooterComponent],
                    exports: [TableFooterComponent],
                    imports: [
                        common.CommonModule,
                        PaginationModule,
                        BulkActionMenuModule,
                        i3.AngularSvgIconModule
                    ]
                },] }
    ];

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var TableModule = /** @class */ (function () {
        function TableModule() {
        }
        return TableModule;
    }());
    TableModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [TableComponent],
                    exports: [TableComponent],
                    imports: [
                        common.CommonModule,
                        TableHeaderModule,
                        TableBodyModule,
                        TableFooterModule,
                        i3.AngularSvgIconModule
                    ]
                },] }
    ];

    var LineActionActionHandler = /** @class */ (function (_super) {
        __extends(LineActionActionHandler, _super);
        function LineActionActionHandler() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        LineActionActionHandler.prototype.checkRecordAccess = function (data, defaultAcls) {
            if (defaultAcls === void 0) { defaultAcls = []; }
            var _a, _b, _c;
            var record = (_a = data.record) !== null && _a !== void 0 ? _a : {};
            var acls = (_b = record.acls) !== null && _b !== void 0 ? _b : [];
            if (!acls || !acls.length) {
                return false;
            }
            var action = (_c = data.action) !== null && _c !== void 0 ? _c : null;
            return this.checkAccess(action, acls, defaultAcls);
        };
        return LineActionActionHandler;
    }(i5.ActionHandler));

    var CreateRelatedLineAction = /** @class */ (function (_super) {
        __extends(CreateRelatedLineAction, _super);
        function CreateRelatedLineAction(moduleNameMapper, router) {
            var _this = _super.call(this) || this;
            _this.moduleNameMapper = moduleNameMapper;
            _this.router = router;
            _this.key = 'create';
            _this.modes = ['list'];
            return _this;
        }
        CreateRelatedLineAction.prototype.run = function (data, action) {
            if (action === void 0) { action = null; }
            var configs = action.params['create'] || {};
            var params = {};
            /* eslint-disable camelcase,@typescript-eslint/camelcase*/
            params.return_module = configs.legacyModuleName;
            params.return_action = configs.returnAction;
            params.return_id = data.record.id;
            /* eslint-enable camelcase,@typescript-eslint/camelcase */
            params[configs.mapping.moduleName] = configs.legacyModuleName;
            params[configs.mapping.name] = data.record.attributes.name;
            params[configs.mapping.id] = data.record.id;
            var route = '/' + configs.module + '/' + configs.action;
            this.router.navigate([route], {
                queryParams: params
            }).then();
        };
        CreateRelatedLineAction.prototype.shouldDisplay = function (data) {
            return true;
        };
        return CreateRelatedLineAction;
    }(LineActionActionHandler));
    CreateRelatedLineAction.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function CreateRelatedLineAction_Factory() { return new CreateRelatedLineAction(i0__namespace.ɵɵinject(ModuleNameMapper), i0__namespace.ɵɵinject(i2__namespace.Router)); }, token: CreateRelatedLineAction, providedIn: "root" });
    CreateRelatedLineAction.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    CreateRelatedLineAction.ctorParameters = function () { return [
        { type: ModuleNameMapper },
        { type: i2.Router }
    ]; };

    var AsyncProcessLineAction = /** @class */ (function (_super) {
        __extends(AsyncProcessLineAction, _super);
        function AsyncProcessLineAction() {
            var _this = _super.call(this) || this;
            _this.key = 'async-process';
            _this.modes = i5.ALL_VIEW_MODES;
            return _this;
        }
        AsyncProcessLineAction.prototype.run = function (data) {
        };
        AsyncProcessLineAction.prototype.shouldDisplay = function (data) {
            var _a, _b;
            var defaultAcls = (_b = (_a = data === null || data === void 0 ? void 0 : data.action) === null || _a === void 0 ? void 0 : _a.acl) !== null && _b !== void 0 ? _b : [];
            if (!defaultAcls.length) {
                return true;
            }
            return this.checkRecordAccess(data, defaultAcls);
        };
        return AsyncProcessLineAction;
    }(LineActionActionHandler));
    AsyncProcessLineAction.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function AsyncProcessLineAction_Factory() { return new AsyncProcessLineAction(); }, token: AsyncProcessLineAction, providedIn: "root" });
    AsyncProcessLineAction.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    AsyncProcessLineAction.ctorParameters = function () { return []; };

    var LineActionActionManager = /** @class */ (function (_super) {
        __extends(LineActionActionManager, _super);
        function LineActionActionManager(createRelated, async) {
            var _this = _super.call(this) || this;
            _this.createRelated = createRelated;
            _this.async = async;
            createRelated.modes.forEach(function (mode) { return _this.actions[mode][createRelated.key] = createRelated; });
            async.modes.forEach(function (mode) { return _this.actions[mode][async.key] = async; });
            return _this;
        }
        return LineActionActionManager;
    }(BaseActionManager));
    LineActionActionManager.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function LineActionActionManager_Factory() { return new LineActionActionManager(i0__namespace.ɵɵinject(CreateRelatedLineAction), i0__namespace.ɵɵinject(AsyncProcessLineAction)); }, token: LineActionActionManager, providedIn: "root" });
    LineActionActionManager.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root',
                },] }
    ];
    LineActionActionManager.ctorParameters = function () { return [
        { type: CreateRelatedLineAction },
        { type: AsyncProcessLineAction }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var BaseActionsAdapter = /** @class */ (function () {
        function BaseActionsAdapter(actionManager, asyncActionService, message, confirmation, language, selectModalService) {
            this.actionManager = actionManager;
            this.asyncActionService = asyncActionService;
            this.message = message;
            this.confirmation = confirmation;
            this.language = language;
            this.selectModalService = selectModalService;
            this.defaultActions = {
                detail: [],
                list: [],
                edit: [],
                create: [],
                massupdate: []
            };
        }
        /**
         * Run the action using given context
         * @param action
         * @param context
         */
        BaseActionsAdapter.prototype.runAction = function (action, context) {
            var _this = this;
            if (context === void 0) { context = null; }
            var params = (action && action.params) || {};
            var displayConfirmation = params.displayConfirmation || false;
            var confirmationLabel = params.confirmationLabel || '';
            var selectModal = action.params && action.params.selectModal;
            var selectModule = selectModal && selectModal.module;
            if (displayConfirmation) {
                this.confirmation.showModal(confirmationLabel, function () {
                    if (!selectModule) {
                        _this.callAction(action, context);
                        return;
                    }
                    _this.showSelectModal(selectModal.module, action, context);
                });
                return;
            }
            if (!selectModule) {
                this.callAction(action, context);
                return;
            }
            this.showSelectModal(selectModal.module, action, context);
        };
        /**
         * Run async buk action
         *
         * @returns void
         * @param {string} selectModule: module for which records are listed in Select Modal/Popup
         * @param {string} asyncAction: bulk action name
         * @param {ActionContext} context
         */
        BaseActionsAdapter.prototype.showSelectModal = function (selectModule, asyncAction, context) {
            var _this = this;
            if (context === void 0) { context = null; }
            this.selectModalService.showSelectModal(selectModule, function (modalRecord) {
                if (modalRecord) {
                    var fields = modalRecord.fields, formGroup = modalRecord.formGroup, baseRecord = __rest(modalRecord, ["fields", "formGroup"]);
                    asyncAction.params.modalRecord = baseRecord;
                }
                _this.callAction(asyncAction, context);
            });
        };
        /**
         * Get action name
         * @param action
         */
        BaseActionsAdapter.prototype.getActionName = function (action) {
            return "" + action.key;
        };
        /**
         * Parse mode actions
         * @param declaredActions
         * @param mode
         * @param context
         */
        BaseActionsAdapter.prototype.parseModeActions = function (declaredActions, mode, context) {
            var _this = this;
            if (context === void 0) { context = null; }
            if (!declaredActions) {
                return [];
            }
            var availableActions = {
                list: [],
                detail: [],
                edit: [],
                create: [],
                massupdate: [],
            };
            if (declaredActions && declaredActions.length) {
                declaredActions.forEach(function (action) {
                    if (!action.modes || !action.modes.length) {
                        return;
                    }
                    action.modes.forEach(function (actionMode) {
                        if (!availableActions[actionMode] && !action.asyncProcess) {
                            return;
                        }
                        availableActions[actionMode].push(action);
                    });
                });
            }
            availableActions.detail = availableActions.detail.concat(this.defaultActions.detail);
            availableActions.list = availableActions.list.concat(this.defaultActions.list);
            availableActions.edit = availableActions.edit.concat(this.defaultActions.edit);
            availableActions.create = availableActions.create.concat(this.defaultActions.create);
            availableActions.massupdate = availableActions.massupdate.concat(this.defaultActions.massupdate);
            var actions = [];
            availableActions[mode].forEach(function (action) {
                var actionHandler = _this.actionManager.getHandler(action, mode);
                if (actionHandler) {
                    var actionHandler_1 = _this.actionManager.getHandler(action, mode);
                    var data = _this.buildActionData(action, context);
                    if (!_this.shouldDisplay(actionHandler_1, data)) {
                        return;
                    }
                    action.status = actionHandler_1.getStatus(data) || '';
                }
                var module = (context && context.module) || '';
                var label = _this.language.getFieldLabel(action.labelKey, module);
                actions.push(Object.assign(Object.assign({}, action), { label: label }));
            });
            return actions;
        };
        BaseActionsAdapter.prototype.shouldDisplay = function (actionHandler, data) {
            return actionHandler && actionHandler.shouldDisplay(data);
        };
        /**
         * Call actions
         * @param action
         * @param context
         */
        BaseActionsAdapter.prototype.callAction = function (action, context) {
            if (context === void 0) { context = null; }
            if (action.asyncProcess) {
                this.runAsyncAction(action, context);
                return;
            }
            this.runFrontEndAction(action, context);
        };
        /**
         * Run async actions
         * @param action
         * @param context
         */
        BaseActionsAdapter.prototype.runAsyncAction = function (action, context) {
            var _this = this;
            if (context === void 0) { context = null; }
            var actionName = this.getActionName(action);
            var moduleName = this.getModuleName(context);
            this.message.removeMessages();
            var asyncData = this.buildActionInput(action, actionName, moduleName, context);
            this.asyncActionService.run(actionName, asyncData).pipe(operators.take(1)).subscribe(function (process) {
                if (_this.shouldReload(process)) {
                    _this.reload(action, process, context);
                }
            });
        };
        /**
         * Should reload page
         * @param process
         */
        BaseActionsAdapter.prototype.shouldReload = function (process) {
            return !!(process.data && process.data.reload);
        };
        /**
         * Run front end action
         * @param action
         * @param context
         */
        BaseActionsAdapter.prototype.runFrontEndAction = function (action, context) {
            if (context === void 0) { context = null; }
            var data = this.buildActionData(action, context);
            this.actionManager.run(action, this.getMode(), data);
        };
        return BaseActionsAdapter;
    }());

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var SelectModalService = /** @class */ (function () {
        function SelectModalService(languageStore, message, modalService) {
            this.languageStore = languageStore;
            this.message = message;
            this.modalService = modalService;
        }
        /**
         * Get Selected Record
         *
         * @param {string} selectModule: The Modal module
         * @param onSelectCallback
         * @returns {void}
         */
        SelectModalService.prototype.showSelectModal = function (selectModule, onSelectCallback) {
            var _this = this;
            if (onSelectCallback === void 0) { onSelectCallback = null; }
            var modal = this.modalService.open(RecordListModalComponent, { size: 'xl', scrollable: true });
            modal.componentInstance.module = selectModule;
            modal.result.then(function (result) {
                if (!result || !result.selection || !result.selection.selected) {
                    return;
                }
                var record = _this.getSelectedRecord(result);
                if (!record.id) {
                    var message = _this.languageStore.getFieldLabel('ERROR_NO_RECORD');
                    _this.message.addDangerMessage(message);
                    return;
                }
                if (onSelectCallback !== null) {
                    onSelectCallback(record);
                }
            });
        };
        /**
         * Get Selected Record
         *
         * @param {object} data RecordListModalResult
         * @returns {object} Record
         */
        SelectModalService.prototype.getSelectedRecord = function (data) {
            var id = '';
            Object.keys(data.selection.selected).some(function (selected) {
                id = selected;
                return true;
            });
            var record = null;
            data.records.some(function (rec) {
                if (rec && rec.id === id) {
                    record = rec;
                    return true;
                }
            });
            return record;
        };
        return SelectModalService;
    }());
    SelectModalService.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function SelectModalService_Factory() { return new SelectModalService(i0__namespace.ɵɵinject(LanguageStore), i0__namespace.ɵɵinject(MessageService), i0__namespace.ɵɵinject(i1__namespace$3.NgbModal)); }, token: SelectModalService, providedIn: "root" });
    SelectModalService.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    SelectModalService.ctorParameters = function () { return [
        { type: LanguageStore },
        { type: MessageService },
        { type: i1$2.NgbModal }
    ]; };

    var BaseRecordActionsAdapter = /** @class */ (function (_super) {
        __extends(BaseRecordActionsAdapter, _super);
        function BaseRecordActionsAdapter(actionManager, asyncActionService, message, confirmation, language, selectModalService) {
            var _this = _super.call(this, actionManager, asyncActionService, message, confirmation, language, selectModalService) || this;
            _this.actionManager = actionManager;
            _this.asyncActionService = asyncActionService;
            _this.message = message;
            _this.confirmation = confirmation;
            _this.language = language;
            _this.selectModalService = selectModalService;
            return _this;
        }
        /**
         * Get action name
         * @param action
         */
        BaseRecordActionsAdapter.prototype.getActionName = function (action) {
            return "record-" + action.key;
        };
        /**
         * Build backend process input
         *
         * @param action
         * @param actionName
         * @param moduleName
         * @param context
         */
        BaseRecordActionsAdapter.prototype.buildActionInput = function (action, actionName, moduleName, context) {
            if (context === void 0) { context = null; }
            return {
                action: actionName,
                module: moduleName,
                id: (context && context.record && context.record.id) || '',
                params: (action && action.params) || [],
            };
        };
        return BaseRecordActionsAdapter;
    }(BaseActionsAdapter));
    BaseRecordActionsAdapter.decorators = [
        { type: i0.Injectable }
    ];
    BaseRecordActionsAdapter.ctorParameters = function () { return [
        { type: undefined },
        { type: AsyncActionService },
        { type: MessageService },
        { type: ConfirmationModalService },
        { type: LanguageStore },
        { type: SelectModalService }
    ]; };

    var BaseLineActionsAdapter = /** @class */ (function (_super) {
        __extends(BaseLineActionsAdapter, _super);
        function BaseLineActionsAdapter(actionManager, asyncActionService, message, confirmation, language, selectModalService) {
            var _this = _super.call(this, actionManager, asyncActionService, message, confirmation, language, selectModalService) || this;
            _this.actionManager = actionManager;
            _this.asyncActionService = asyncActionService;
            _this.message = message;
            _this.confirmation = confirmation;
            _this.language = language;
            _this.selectModalService = selectModalService;
            return _this;
        }
        BaseLineActionsAdapter.prototype.buildActionData = function (action, context) {
            return {
                record: (context && context.record) || null,
                action: action
            };
        };
        return BaseLineActionsAdapter;
    }(BaseRecordActionsAdapter));
    BaseLineActionsAdapter.decorators = [
        { type: i0.Injectable }
    ];
    BaseLineActionsAdapter.ctorParameters = function () { return [
        { type: LineActionActionManager },
        { type: AsyncActionService },
        { type: MessageService },
        { type: ConfirmationModalService },
        { type: LanguageStore },
        { type: SelectModalService }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var UserActionMenuUiComponent = /** @class */ (function () {
        function UserActionMenuUiComponent(http) {
            this.http = http;
            this.model = null;
        }
        UserActionMenuUiComponent.prototype.ngOnInit = function () {
        };
        return UserActionMenuUiComponent;
    }());
    UserActionMenuUiComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-user-action-menu-ui',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<p>\n    user-action-menu works!\n</p>\n<pre>{{ model | json }}</pre>\n"
                },] }
    ];
    UserActionMenuUiComponent.ctorParameters = function () { return [
        { type: i1$3.HttpClient }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var UserActionMenuUiModule = /** @class */ (function () {
        function UserActionMenuUiModule() {
        }
        return UserActionMenuUiModule;
    }());
    UserActionMenuUiModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [UserActionMenuUiComponent],
                    exports: [UserActionMenuUiComponent],
                    imports: [
                        common.CommonModule,
                        i3.AngularSvgIconModule
                    ]
                },] }
    ];

    var SavedFilterActionHandler = /** @class */ (function (_super) {
        __extends(SavedFilterActionHandler, _super);
        function SavedFilterActionHandler() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return SavedFilterActionHandler;
    }(i5.ActionHandler));

    var SavedFilterSaveAction = /** @class */ (function (_super) {
        __extends(SavedFilterSaveAction, _super);
        function SavedFilterSaveAction(message) {
            var _this = _super.call(this) || this;
            _this.message = message;
            _this.key = 'save';
            _this.modes = ['edit'];
            return _this;
        }
        SavedFilterSaveAction.prototype.run = function (data) {
            var _this = this;
            data.store.validate().pipe(operators.take(1)).subscribe(function (valid) {
                if (valid) {
                    data.store.save().pipe(operators.take(1)).subscribe(function (savedFilter) {
                        data.listFilterStore.config.addSavedFilter(data.store.recordStore.extractBaseRecord(savedFilter));
                        data.listFilterStore.applyFilter();
                        _this.message.addSuccessMessageByKey('LBL_SAVED_FILTER_SAVED');
                    });
                    return;
                }
                _this.message.addWarningMessageByKey('LBL_VALIDATION_ERRORS');
            });
        };
        SavedFilterSaveAction.prototype.shouldDisplay = function () {
            return true;
        };
        return SavedFilterSaveAction;
    }(SavedFilterActionHandler));
    SavedFilterSaveAction.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function SavedFilterSaveAction_Factory() { return new SavedFilterSaveAction(i0__namespace.ɵɵinject(MessageService)); }, token: SavedFilterSaveAction, providedIn: "root" });
    SavedFilterSaveAction.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    SavedFilterSaveAction.ctorParameters = function () { return [
        { type: MessageService }
    ]; };

    var SavedFilterDeleteAction = /** @class */ (function (_super) {
        __extends(SavedFilterDeleteAction, _super);
        function SavedFilterDeleteAction(message, asyncActionService) {
            var _this = _super.call(this) || this;
            _this.message = message;
            _this.asyncActionService = asyncActionService;
            _this.key = 'delete';
            _this.modes = ['edit', 'detail'];
            return _this;
        }
        SavedFilterDeleteAction.prototype.run = function (data) {
            var actionName = "record-" + this.key;
            var baseRecord = (data.store.getBaseRecord()) || {};
            if (!baseRecord.id) {
                this.message.addWarningMessageByKey('LBL_FILTER_ID_NOT_DEFINED');
                return;
            }
            this.message.removeMessages();
            var asyncData = {
                action: actionName,
                module: baseRecord.module,
                id: baseRecord.id,
            };
            this.asyncActionService.run(actionName, asyncData, 'noop').pipe(operators.take(1)).subscribe(function () {
                data.listFilterStore.config.removeSavedFilter(baseRecord);
            });
        };
        SavedFilterDeleteAction.prototype.shouldDisplay = function (data) {
            var store = data && data.store;
            var filter = (store && store.recordStore.getBaseRecord()) || {};
            return !!filter.id;
        };
        return SavedFilterDeleteAction;
    }(SavedFilterActionHandler));
    SavedFilterDeleteAction.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function SavedFilterDeleteAction_Factory() { return new SavedFilterDeleteAction(i0__namespace.ɵɵinject(MessageService), i0__namespace.ɵɵinject(AsyncActionService)); }, token: SavedFilterDeleteAction, providedIn: "root" });
    SavedFilterDeleteAction.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    SavedFilterDeleteAction.ctorParameters = function () { return [
        { type: MessageService },
        { type: AsyncActionService }
    ]; };

    var SavedFilterActionManager = /** @class */ (function (_super) {
        __extends(SavedFilterActionManager, _super);
        function SavedFilterActionManager(save, deleteAction) {
            var _this = _super.call(this) || this;
            save.modes.forEach(function (mode) { return _this.actions[mode][save.key] = save; });
            deleteAction.modes.forEach(function (mode) { return _this.actions[mode][deleteAction.key] = deleteAction; });
            return _this;
        }
        return SavedFilterActionManager;
    }(BaseActionManager));
    SavedFilterActionManager.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function SavedFilterActionManager_Factory() { return new SavedFilterActionManager(i0__namespace.ɵɵinject(SavedFilterSaveAction), i0__namespace.ɵɵinject(SavedFilterDeleteAction)); }, token: SavedFilterActionManager, providedIn: "root" });
    SavedFilterActionManager.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root',
                },] }
    ];
    SavedFilterActionManager.ctorParameters = function () { return [
        { type: SavedFilterSaveAction },
        { type: SavedFilterDeleteAction }
    ]; };

    var initialState$5 = {
        id: '',
        type: '',
        module: '',
        attributes: {}
    };
    var SavedFilterRecordStore = /** @class */ (function (_super) {
        __extends(SavedFilterRecordStore, _super);
        function SavedFilterRecordStore(definitions$, recordSaveGQL, recordFetchGQL, message, recordManager, recordMappers, fieldManager, language) {
            var _this = _super.call(this, definitions$, recordSaveGQL, recordFetchGQL, message, recordManager, recordMappers) || this;
            _this.definitions$ = definitions$;
            _this.recordSaveGQL = recordSaveGQL;
            _this.recordFetchGQL = recordFetchGQL;
            _this.message = message;
            _this.recordManager = recordManager;
            _this.recordMappers = recordMappers;
            _this.fieldManager = fieldManager;
            _this.language = language;
            _this.internalState = i5.deepClone(initialState$5);
            _this.stagingState = i5.deepClone(initialState$5);
            _this.store = new rxjs.BehaviorSubject(_this.internalState);
            _this.staging = new rxjs.BehaviorSubject(_this.stagingState);
            _this.searchFields = {};
            _this.listColumns = [];
            _this.state$ = _this.store.asObservable().pipe(operators.tap(function (record) {
                _this.updateStaging(record);
            }));
            _this.staging$ = _this.staging.asObservable();
            return _this;
        }
        /**
         * Get search fields metadata
         * @returns SearchMetaFieldMap
         */
        SavedFilterRecordStore.prototype.getSearchFields = function () {
            return this.searchFields;
        };
        /**
         * Set search fields metadata
         * @param {object} searchFields SearchMetaFieldMap
         */
        SavedFilterRecordStore.prototype.setSearchFields = function (searchFields) {
            this.searchFields = searchFields;
        };
        /**
         * Get list fields metadata
         * @returns SearchMetaFieldMap
         */
        SavedFilterRecordStore.prototype.getListColumns = function () {
            return this.listColumns;
        };
        /**
         * Set list fields metadata
         * @param {object} listColumns SearchMetaFieldMap
         */
        SavedFilterRecordStore.prototype.setListColumns = function (listColumns) {
            this.listColumns = listColumns;
        };
        /**
         * Get record
         *
         * @returns {object} Record
         */
        SavedFilterRecordStore.prototype.getBaseRecord = function () {
            if (!this.stagingState) {
                return null;
            }
            this.mapStagingFields();
            return i5.deepClone({
                id: this.stagingState.id,
                type: this.stagingState.type,
                module: this.stagingState.module,
                key: this.stagingState.key,
                searchModule: this.stagingState.searchModule,
                criteria: this.stagingState.criteria,
                attributes: this.stagingState.attributes,
            });
        };
        /**
         * Extract base record
         *
         * @returns {object} Record
         */
        SavedFilterRecordStore.prototype.extractBaseRecord = function (record) {
            if (!record) {
                return null;
            }
            return i5.deepClone({
                id: record.id,
                type: record.type,
                module: record.module,
                key: record.key,
                searchModule: record.searchModule,
                criteria: record.criteria,
                attributes: record.attributes,
            });
        };
        /**
         * Init record fields
         *
         * @param {object} record Record
         */
        SavedFilterRecordStore.prototype.initRecord = function (record) {
            record.attributes = record.attributes || {};
            record.attributes.search_module = record.searchModule;
            record.attributes.contents = record.attributes.contents || { filters: {} };
            record.criteria = this.getCriteria(record);
            this.initCriteriaFields(record, this.getSearchFields());
            if (record.module && this.definitions && this.definitions.length > 0) {
                record.fields = this.recordManager.initFields(record, this.definitions);
            }
            this.initOrderByOptions(record);
        };
        /**
         * Init Order by options using list view columns set as default
         * @param record
         */
        SavedFilterRecordStore.prototype.initOrderByOptions = function (record) {
            var _this = this;
            if (!record.fields || !record.fields.orderBy) {
                return;
            }
            record.fields.orderBy.metadata = record.fields.orderBy.metadata || {};
            var options = [];
            this.getListColumns().forEach(function (column) {
                if (!column.default || column.default !== true) {
                    return;
                }
                var labelKey = column.label || column.fieldDefinition.vname || '';
                var label = _this.language.getFieldLabel(labelKey, record.searchModule);
                options.push({
                    value: column.fieldDefinition.name || column.name,
                    label: label
                });
            });
            record.fields.orderBy.metadata.options$ = rxjs.of(options).pipe(operators.shareReplay());
        };
        /**
         * Get criteria from filter
         * @param filter
         */
        SavedFilterRecordStore.prototype.getCriteria = function (filter) {
            if (!filter || !filter.criteria) {
                return { filters: {} };
            }
            if (!filter.criteria.filters) {
                return Object.assign(Object.assign({}, filter.criteria), { filters: {} });
            }
            return i5.deepClone(filter.criteria);
        };
        /**
         * Initialize criteria fields
         *
         * @param {object} record to use
         * @param {object} searchFields to use
         */
        SavedFilterRecordStore.prototype.initCriteriaFields = function (record, searchFields) {
            var _this = this;
            record.criteriaFields = record.criteriaFields || {};
            if (!record.criteriaFormGroup) {
                record.criteriaFormGroup = new forms.FormGroup({});
            }
            if (!searchFields) {
                return;
            }
            Object.keys(searchFields).forEach(function (key) {
                _this.buildField(record, searchFields[key]);
            });
        };
        /**
         * Build filter field according to Field interface
         *
         * @param {object} record SavedFilter
         * @param {object} fieldMeta to use
         */
        SavedFilterRecordStore.prototype.buildField = function (record, fieldMeta) {
            var fieldName = fieldMeta.name;
            var type = fieldMeta.type;
            var definition = {
                name: fieldMeta.name,
                label: fieldMeta.label,
                type: type,
                fieldDefinition: {}
            };
            if (fieldMeta.fieldDefinition) {
                definition.fieldDefinition = fieldMeta.fieldDefinition;
            }
            if (type === 'bool' || type === 'boolean') {
                definition.fieldDefinition.options = 'dom_int_bool';
            }
            this.fieldManager.addFilterField(record, definition, this.language);
        };
        return SavedFilterRecordStore;
    }(RecordStore));

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var SavedFilterRecordStoreFactory = /** @class */ (function () {
        function SavedFilterRecordStoreFactory(recordFetchGQL, recordSaveGQL, message, recordManager, recordMappers, baseMapper, fieldManager, language) {
            this.recordFetchGQL = recordFetchGQL;
            this.recordSaveGQL = recordSaveGQL;
            this.message = message;
            this.recordManager = recordManager;
            this.recordMappers = recordMappers;
            this.baseMapper = baseMapper;
            this.fieldManager = fieldManager;
            this.language = language;
            recordMappers.register('default', baseMapper.getKey(), baseMapper);
        }
        SavedFilterRecordStoreFactory.prototype.create = function (definitions$) {
            return new SavedFilterRecordStore(definitions$, this.recordSaveGQL, this.recordFetchGQL, this.message, this.recordManager, this.recordMappers, this.fieldManager, this.language);
        };
        return SavedFilterRecordStoreFactory;
    }());
    SavedFilterRecordStoreFactory.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function SavedFilterRecordStoreFactory_Factory() { return new SavedFilterRecordStoreFactory(i0__namespace.ɵɵinject(RecordFetchGQL), i0__namespace.ɵɵinject(RecordSaveGQL), i0__namespace.ɵɵinject(MessageService), i0__namespace.ɵɵinject(RecordManager), i0__namespace.ɵɵinject(i5__namespace.RecordMapperRegistry), i0__namespace.ɵɵinject(BaseSaveRecordMapper), i0__namespace.ɵɵinject(FieldManager), i0__namespace.ɵɵinject(LanguageStore)); }, token: SavedFilterRecordStoreFactory, providedIn: "root" });
    SavedFilterRecordStoreFactory.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root',
                },] }
    ];
    SavedFilterRecordStoreFactory.ctorParameters = function () { return [
        { type: RecordFetchGQL },
        { type: RecordSaveGQL },
        { type: MessageService },
        { type: RecordManager },
        { type: i5.RecordMapperRegistry },
        { type: BaseSaveRecordMapper },
        { type: FieldManager },
        { type: LanguageStore }
    ]; };

    var initialState$4 = {
        module: '',
        searchModule: '',
        recordID: '',
        loading: false,
        mode: 'detail',
    };
    var SavedFilterStore = /** @class */ (function () {
        function SavedFilterStore(appStateStore, meta, message, fieldManager, language, savedFilterStoreFactory) {
            var _this = this;
            this.appStateStore = appStateStore;
            this.meta = meta;
            this.message = message;
            this.fieldManager = fieldManager;
            this.language = language;
            this.savedFilterStoreFactory = savedFilterStoreFactory;
            /** Internal Properties */
            this.cache$ = null;
            this.internalState = i5.deepClone(initialState$4);
            this.store = new rxjs.BehaviorSubject(this.internalState);
            this.state$ = this.store.asObservable();
            this.subs = [];
            this.metadataLoadingState = new rxjs.BehaviorSubject(false);
            this.metadataLoading$ = this.metadataLoadingState.asObservable();
            this.meta$ = this.meta.getMetadata('saved-search', ['recordView']).pipe(operators.tap(function () { return _this.metadataLoadingState.next(false); }), operators.map(function (definitions) { return definitions.recordView; }));
            this.recordStore = savedFilterStoreFactory.create(this.getViewFields$());
            this.record$ = this.recordStore.state$.pipe(operators.distinctUntilChanged(), operators.map(function (record) { return record; }));
            this.stagingRecord$ = this.recordStore.staging$.pipe(operators.distinctUntilChanged(), operators.map(function (record) { return record; }));
            this.loading$ = this.state$.pipe(operators.map(function (state) { return state.loading; }));
            this.mode$ = this.state$.pipe(operators.map(function (state) { return state.mode; }));
            this.vm$ = rxjs.combineLatest([this.stagingRecord$, this.mode$]).pipe(operators.map(function (_a) {
                var _b = __read(_a, 2), record = _b[0], mode = _b[1];
                _this.vm = { record: record, mode: mode };
                return _this.vm;
            }));
        }
        SavedFilterStore.prototype.getModuleName = function () {
            return this.internalState.module;
        };
        SavedFilterStore.prototype.getRecordId = function () {
            return this.internalState.recordID;
        };
        SavedFilterStore.prototype.getViewContext = function () {
            return {
                module: this.getModuleName(),
                id: this.getRecordId(),
            };
        };
        /**
         * Clean destroy
         */
        SavedFilterStore.prototype.destroy = function () {
            this.clear();
        };
        /**
         * Initial record load if not cached and update state.
         * Returns observable to be used in resolver if needed
         *
         * @param {string} recordID to use
         * @param {string} mode to use
         * @returns {object} Observable<any>
         */
        SavedFilterStore.prototype.init = function (recordID, mode) {
            if (mode === void 0) { mode = 'detail'; }
            this.internalState.module = 'saved-search';
            this.internalState.recordID = recordID;
            this.setMode(mode);
            this.metadataLoadingState.next(true);
            var dataMap = {
                $meta: this.meta$,
                record: this.load()
            };
            var $data = rxjs.forkJoin(dataMap);
            return $data.pipe(operators.map(function (_a) {
                var meta = _a.meta, record = _a.record;
                return record;
            }));
        };
        /**
         * Init record
         *
         * @param {string} searchModule name
         * @param {object} filter to use
         * @param {object} searchFields to use
         * @param {object} listColumns ColumnDefinition[]
         * @param {string} mode to use
         * @returns {object} Observable<any>
         */
        SavedFilterStore.prototype.initRecord = function (searchModule, filter, searchFields, listColumns, mode) {
            var _this = this;
            if (mode === void 0) { mode = 'detail'; }
            this.updateState(Object.assign(Object.assign({}, this.internalState), { recordID: filter.id, module: 'saved-search', searchModule: searchModule, mode: mode }));
            this.metadataLoadingState.next(true);
            this.meta$.pipe(operators.take(1), operators.tap(function () {
                _this.metadataLoadingState.next(false);
                _this.initStaging(searchModule, filter, searchFields, listColumns);
            })).subscribe();
        };
        SavedFilterStore.prototype.initStaging = function (searchModule, filter, searchFields, listColumns) {
            var filterRecord = i5.deepClone(this.recordStore.extractBaseRecord(filter));
            filterRecord.searchModule = searchModule;
            this.recordStore.setSearchFields(searchFields);
            this.recordStore.setListColumns(listColumns);
            this.recordStore.setStaging(filterRecord);
        };
        /**
         * Clear observable cache
         */
        SavedFilterStore.prototype.clear = function () {
            this.cache$ = null;
            this.updateState(i5.deepClone(initialState$4));
            this.metadataLoadingState.unsubscribe();
            this.metadataLoadingState = null;
            this.recordStore.destroy();
            this.recordStore = null;
        };
        /**
         * Clear observable cache
         */
        SavedFilterStore.prototype.clearAuthBased = function () {
            this.clear();
        };
        /**
         * Get staging record
         *
         * @returns {string} ViewMode
         */
        SavedFilterStore.prototype.getBaseRecord = function () {
            return this.recordStore.getBaseRecord();
        };
        /**
         * Get current view mode
         *
         * @returns {string} ViewMode
         */
        SavedFilterStore.prototype.getMode = function () {
            if (!this.internalState) {
                return null;
            }
            return this.internalState.mode;
        };
        /**
         * Set new mode
         *
         * @param {string} mode ViewMode
         */
        SavedFilterStore.prototype.setMode = function (mode) {
            this.updateState(Object.assign(Object.assign({}, this.internalState), { mode: mode }));
        };
        /**
         * Save record
         */
        SavedFilterStore.prototype.save = function () {
            var _this = this;
            this.appStateStore.updateLoading(this.internalState.module + "-record-save", true);
            return this.recordStore.save().pipe(operators.catchError(function () {
                _this.message.addDangerMessageByKey('LBL_ERROR_SAVING');
                return rxjs.of({});
            }), operators.finalize(function () {
                _this.appStateStore.updateLoading(_this.internalState.module + "-record-save", false);
            }));
        };
        /**
         * Validate search filter fields
         *
         * @returns {object} Observable<boolean>
         */
        SavedFilterStore.prototype.validate = function () {
            return rxjs.forkJoin({
                fields: this.recordStore.validate(),
                criteria: this.validateCriteria()
            }).pipe(operators.map(function (_a) {
                var fields = _a.fields, criteria = _a.criteria;
                return fields && criteria;
            }));
        };
        /**
         * Validate search current input
         *
         * @returns {object} Observable<boolean>
         */
        SavedFilterStore.prototype.validateCriteria = function () {
            var currentFilter = this.recordStore.getStaging();
            var formGroup = currentFilter.criteriaFormGroup;
            formGroup.markAllAsTouched();
            return formGroup.statusChanges.pipe(operators.startWith(formGroup.status), operators.filter(function (status) { return status !== 'PENDING'; }), operators.take(1), operators.map(function (status) { return status === 'VALID'; }));
        };
        /**
         * Load / reload record using current pagination and criteria
         *
         * @param {boolean} useCache if to use cache
         * @returns {object} Observable<RecordViewState>
         */
        SavedFilterStore.prototype.load = function (useCache) {
            var _this = this;
            if (useCache === void 0) { useCache = true; }
            this.appStateStore.updateLoading(this.internalState.module + "-record-fetch", true);
            return this.recordStore.retrieveRecord(this.internalState.module, this.internalState.recordID, useCache).pipe(operators.tap(function (data) {
                _this.appStateStore.updateLoading(_this.internalState.module + "-record-fetch", false);
                _this.updateState(Object.assign(Object.assign({}, _this.internalState), { recordID: data.id, module: data.module }));
            }));
        };
        /**
         * Get view fields observable
         *
         * @returns {object} Observable<string[]>
         */
        SavedFilterStore.prototype.getViewFieldsKeys$ = function () {
            return this.meta$.pipe(operators.map(function (recordMetadata) {
                var fields = [];
                recordMetadata.panels.forEach(function (panel) {
                    panel.rows.forEach(function (row) {
                        row.cols.forEach(function (col) {
                            fields.push(col.name);
                        });
                    });
                });
                return fields;
            }));
        };
        /**
         * Get view fields observable
         *
         * @returns {object} Observable<ViewFieldDefinition[]>
         */
        SavedFilterStore.prototype.getViewFields$ = function () {
            return this.meta$.pipe(operators.map(function (recordMetadata) {
                var fields = [];
                recordMetadata.panels.forEach(function (panel) {
                    panel.rows.forEach(function (row) {
                        row.cols.forEach(function (col) {
                            fields.push(col);
                        });
                    });
                });
                return fields;
            }));
        };
        /**
         * Update the state
         *
         * @param {object} state to set
         */
        SavedFilterStore.prototype.updateState = function (state) {
            this.store.next(this.internalState = state);
        };
        /**
         * Get record view metadata
         *
         * @returns {object} metadata RecordViewMetadata
         */
        SavedFilterStore.prototype.getMetadata = function () {
            var meta = this.meta.get() || {};
            return meta.recordView || {};
        };
        return SavedFilterStore;
    }());
    SavedFilterStore.decorators = [
        { type: i0.Injectable }
    ];
    SavedFilterStore.ctorParameters = function () { return [
        { type: AppStateStore },
        { type: MetadataStore },
        { type: MessageService },
        { type: FieldManager },
        { type: LanguageStore },
        { type: SavedFilterRecordStoreFactory }
    ]; };

    var SavedFilterSaveGQL = /** @class */ (function (_super) {
        __extends(SavedFilterSaveGQL, _super);
        function SavedFilterSaveGQL(apollo) {
            var _this = _super.call(this, apollo) || this;
            _this.apollo = apollo;
            return _this;
        }
        SavedFilterSaveGQL.prototype.save = function (record) {
            return _super.prototype.save.call(this, record);
        };
        SavedFilterSaveGQL.prototype.mapToRecord = function (response) {
            if (!response.data || !response.data.saveRecord || !response.data.saveRecord.record) {
                return null;
            }
            var savedFilter = {
                // eslint-disable-next-line no-underscore-dangle
                id: response.data.saveRecord.record._id,
                type: response.data.saveRecord.record.type || '',
                module: response.data.saveRecord.record.module || '',
                attributes: response.data.saveRecord.record.attributes || null,
            };
            savedFilter.key = savedFilter.id || (savedFilter.attributes && savedFilter.attributes.id) || '';
            var contents = (savedFilter.attributes && savedFilter.attributes.contents) || null;
            if (contents) {
                savedFilter.criteria = contents;
            }
            return savedFilter;
        };
        return SavedFilterSaveGQL;
    }(RecordSaveGQL));
    SavedFilterSaveGQL.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function SavedFilterSaveGQL_Factory() { return new SavedFilterSaveGQL(i0__namespace.ɵɵinject(i1__namespace.Apollo)); }, token: SavedFilterSaveGQL, providedIn: "root" });
    SavedFilterSaveGQL.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    SavedFilterSaveGQL.ctorParameters = function () { return [
        { type: i1.Apollo }
    ]; };

    var SavedSearchRecordMapper = /** @class */ (function () {
        function SavedSearchRecordMapper() {
        }
        SavedSearchRecordMapper.prototype.getKey = function () {
            return 'criteria';
        };
        SavedSearchRecordMapper.prototype.map = function (record) {
            var savedFilter = record;
            if (savedFilter.criteria) {
                var contents = savedFilter.attributes.contents || {};
                contents.filters = i5.deepClone(savedFilter.criteria.filters || {});
                if (record.fields.name) {
                    contents.name = record.fields.name.value;
                    savedFilter.criteria.name = contents.name;
                }
                if (record.fields.orderBy) {
                    contents.orderBy = record.fields.orderBy.value;
                    savedFilter.criteria.orderBy = contents.orderBy;
                }
                if (record.fields.sortOrder) {
                    contents.sortOrder = record.fields.sortOrder.value;
                    savedFilter.criteria.sortOrder = contents.sortOrder;
                }
                if (record.attributes.search_module) {
                    contents.searchModule = record.attributes.search_module;
                    savedFilter.criteria.searchModule = contents.searchModule;
                }
                savedFilter.attributes.contents = contents;
            }
            var key = savedFilter.key || '';
            if (key === 'default') {
                key = '';
            }
            savedFilter.id = key;
            savedFilter.attributes.id = key;
        };
        return SavedSearchRecordMapper;
    }());
    SavedSearchRecordMapper.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function SavedSearchRecordMapper_Factory() { return new SavedSearchRecordMapper(); }, token: SavedSearchRecordMapper, providedIn: "root" });
    SavedSearchRecordMapper.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var SaveFilterStoreFactory = /** @class */ (function () {
        function SaveFilterStoreFactory(recordFetchGQL, recordSaveGQL, appStateStore, languageStore, metadataStore, message, recordManager, fieldManager, recordMappers, baseMapper, savedSearchMapper) {
            this.recordFetchGQL = recordFetchGQL;
            this.recordSaveGQL = recordSaveGQL;
            this.appStateStore = appStateStore;
            this.languageStore = languageStore;
            this.metadataStore = metadataStore;
            this.message = message;
            this.recordManager = recordManager;
            this.fieldManager = fieldManager;
            this.recordMappers = recordMappers;
            this.baseMapper = baseMapper;
            this.savedSearchMapper = savedSearchMapper;
            this.savedFilterStoreFactory = new SavedFilterRecordStoreFactory(recordFetchGQL, recordSaveGQL, message, recordManager, recordMappers, baseMapper, fieldManager, languageStore);
            this.recordMappers.register('saved-search', this.savedSearchMapper.getKey(), this.savedSearchMapper);
        }
        SaveFilterStoreFactory.prototype.create = function () {
            return new SavedFilterStore(this.appStateStore, this.metadataStore, this.message, this.fieldManager, this.languageStore, this.savedFilterStoreFactory);
        };
        return SaveFilterStoreFactory;
    }());
    SaveFilterStoreFactory.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function SaveFilterStoreFactory_Factory() { return new SaveFilterStoreFactory(i0__namespace.ɵɵinject(RecordFetchGQL), i0__namespace.ɵɵinject(SavedFilterSaveGQL), i0__namespace.ɵɵinject(AppStateStore), i0__namespace.ɵɵinject(LanguageStore), i0__namespace.ɵɵinject(MetadataStore), i0__namespace.ɵɵinject(MessageService), i0__namespace.ɵɵinject(RecordManager), i0__namespace.ɵɵinject(FieldManager), i0__namespace.ɵɵinject(i5__namespace.RecordMapperRegistry), i0__namespace.ɵɵinject(BaseSaveRecordMapper), i0__namespace.ɵɵinject(SavedSearchRecordMapper)); }, token: SaveFilterStoreFactory, providedIn: "root" });
    SaveFilterStoreFactory.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root',
                },] }
    ];
    SaveFilterStoreFactory.ctorParameters = function () { return [
        { type: RecordFetchGQL },
        { type: SavedFilterSaveGQL },
        { type: AppStateStore },
        { type: LanguageStore },
        { type: MetadataStore },
        { type: MessageService },
        { type: RecordManager },
        { type: FieldManager },
        { type: i5.RecordMapperRegistry },
        { type: BaseSaveRecordMapper },
        { type: SavedSearchRecordMapper }
    ]; };

    var ListFilterStore = /** @class */ (function () {
        function ListFilterStore(message, savedFilterStoreFactory) {
            this.message = message;
            this.savedFilterStoreFactory = savedFilterStoreFactory;
            this.panelMode = 'closable';
            this.mode = 'filter';
            this.gridButtons = null;
            this.fields = [];
            this.special = [];
            this.savedFilters = [];
            this.subs = [];
            this.filterStore = savedFilterStoreFactory.create();
        }
        ListFilterStore.prototype.init = function (config) {
            var _this = this;
            this.config = config;
            this.initSearchFields();
            this.initConfigUpdatesSubscription();
            this.vm$ = rxjs.combineLatest([this.filterStore.stagingRecord$]).pipe(operators.tap(function (_a) {
                var _b = __read(_a, 1), savedFilter = _b[0];
                _this.reset();
                _this.splitCriteriaFields(savedFilter);
                _this.initDisplayFields();
                _this.initGridButtons();
                _this.initHeaderButtons();
                _this.initMyFiltersButton(_this.savedFilters);
            }));
            if (this.config.panelMode) {
                this.panelMode = this.config.panelMode;
            }
            this.collapse = new rxjs.BehaviorSubject(false);
            this.isCollapsed$ = this.collapse.asObservable();
            if (!i5.isVoid(this.config.isCollapsed)) {
                this.collapse.next(this.config.isCollapsed);
            }
            this.reset();
            this.initGridButtons();
            this.initHeaderButtons();
        };
        ListFilterStore.prototype.clear = function () {
            this.subs.forEach(function (sub) { return sub.unsubscribe(); });
            this.reset();
            this.filterStore.clear();
            this.filterStore = null;
            this.collapse.unsubscribe();
        };
        ListFilterStore.prototype.clearAuthBased = function () {
            this.clear();
        };
        /**
         * Reset criteria
         */
        ListFilterStore.prototype.reset = function () {
            this.fields = [];
            this.special = [];
        };
        /**
         * Apply current filter values
         */
        ListFilterStore.prototype.applyFilter = function () {
            var _this = this;
            this.filterStore.validateCriteria().pipe(operators.take(1)).subscribe(function (valid) {
                if (valid) {
                    if (_this.config.panelMode === 'collapsible' && _this.config.collapseOnSearch) {
                        _this.collapse.next(true);
                    }
                    _this.config.onSearch();
                    _this.config.updateFilter(_this.filterStore.getBaseRecord());
                    return;
                }
                _this.message.addWarningMessageByKey('LBL_VALIDATION_ERRORS');
            });
        };
        /**
         * Clear the current filter
         */
        ListFilterStore.prototype.clearFilter = function () {
            this.config.resetFilter(false);
        };
        /**
         * Subscribe to config updates.
         * Each time the filter or metadata changes we need to:
         * - Reset the view state
         * - Re-initialize the filter subscription
         */
        ListFilterStore.prototype.initConfigUpdatesSubscription = function () {
            var _this = this;
            this.subs.push(rxjs.combineLatest([this.config.filter$, this.config.searchFields$]).pipe(operators.tap(function (_a) {
                var _b = __read(_a, 2), filter = _b[0], searchFields = _b[1];
                _this.reset();
                _this.filterStore.initRecord(_this.config.module, filter, searchFields, _this.config.listFields, 'edit');
            })).subscribe());
            this.subs.push(rxjs.combineLatest([this.config.savedFilters$]).pipe(operators.tap(function (_a) {
                var _b = __read(_a, 1), filters = _b[0];
                _this.savedFilters = filters;
                _this.initMyFiltersButton(filters);
            })).subscribe());
        };
        /**
         * Split fields per slots
         *
         * @param {object} savedFilter to use
         */
        ListFilterStore.prototype.splitCriteriaFields = function (savedFilter) {
            var _this = this;
            if (!savedFilter || !savedFilter.criteriaFields) {
                return;
            }
            Object.keys(savedFilter.criteriaFields).forEach(function (key) {
                var field = savedFilter.criteriaFields[key];
                var name = field.name || key;
                if (name.includes('_only')) {
                    _this.special.push(field);
                }
                else {
                    _this.fields.push(field);
                }
            });
        };
        ListFilterStore.prototype.initSearchFields = function () {
            var _this = this;
            this.subs.push(this.config.searchFields$.subscribe(function (searchFields) {
                _this.searchFields = searchFields;
            }));
        };
        ListFilterStore.prototype.initDisplayFields = function () {
            var _this = this;
            if (!this.searchFields || i5.emptyObject(this.searchFields) || !this.fields) {
                this.displayFields = [];
            }
            var fields = [];
            this.fields.forEach(function (field) {
                var name = field.name;
                if (!_this.searchFields[name]) {
                    return;
                }
                fields.push(field);
            });
            this.displayFields = fields;
        };
        /**
         * Initialize grid buttons
         */
        ListFilterStore.prototype.initGridButtons = function () {
            this.gridButtons = [
                {
                    labelKey: 'LBL_CLEAR_BUTTON_LABEL',
                    klass: ['clear-filters-button', 'btn', 'btn-outline-danger', 'btn-sm'],
                    onClick: this.clearFilter.bind(this)
                },
                {
                    labelKey: 'LBL_SEARCH_BUTTON_LABEL',
                    klass: ['filter-button', 'btn', 'btn-danger', 'btn-sm'],
                    onClick: this.applyFilter.bind(this)
                }
            ];
        };
        /**
         * Initialize header buttons
         */
        ListFilterStore.prototype.initHeaderButtons = function () {
            var _this = this;
            this.closeButton = {
                onClick: function () {
                    _this.config.onClose();
                }
            };
        };
        ListFilterStore.prototype.initMyFiltersButton = function (filters) {
            var _this = this;
            if (!filters || filters.length < 1) {
                this.myFilterButton = null;
                return;
            }
            var button = {
                wrapperKlass: ['filter-select'],
                labelKey: 'LBL_SAVED_FILTER_SHORTCUT',
                klass: ['btn', 'btn-outline-light', 'btn-sm'],
                items: [],
            };
            var currentKey = this.filterStore.getRecordId();
            filters.forEach(function (filter) {
                var item = {
                    label: filter.attributes.name,
                    onClick: function () {
                        _this.config.setOpenFilter(filter);
                    }
                };
                if (filter.key === currentKey) {
                    button.label = filter.attributes.name;
                    button.labelKey = '';
                    item.icon = 'filter';
                    item.iconKlass = 'small';
                    item.klass = 'active';
                }
                button.items.push(item);
            });
            this.myFilterButton = button;
        };
        return ListFilterStore;
    }());
    ListFilterStore.decorators = [
        { type: i0.Injectable }
    ];
    ListFilterStore.ctorParameters = function () { return [
        { type: MessageService },
        { type: SaveFilterStoreFactory }
    ]; };

    var SavedFilterActionsAdapter = /** @class */ (function (_super) {
        __extends(SavedFilterActionsAdapter, _super);
        function SavedFilterActionsAdapter(store, listFilterStore, language, actionManager, asyncActionService, message, confirmation, selectModalService) {
            var _this = _super.call(this, actionManager, asyncActionService, message, confirmation, language, selectModalService) || this;
            _this.store = store;
            _this.listFilterStore = listFilterStore;
            _this.language = language;
            _this.actionManager = actionManager;
            _this.asyncActionService = asyncActionService;
            _this.message = message;
            _this.confirmation = confirmation;
            _this.selectModalService = selectModalService;
            return _this;
        }
        SavedFilterActionsAdapter.prototype.getActions = function (context) {
            var _this = this;
            return rxjs.combineLatest([
                this.store.meta$,
                this.store.mode$,
                this.store.stagingRecord$,
                this.language.vm$,
            ]).pipe(operators.map(function (_a) {
                var _b = __read(_a, 2), meta = _b[0], mode = _b[1];
                if (!mode || !meta) {
                    return [];
                }
                return _this.parseModeActions(meta.actions, mode);
            }));
        };
        SavedFilterActionsAdapter.prototype.buildActionData = function (action, context) {
            return {
                store: this.store,
                listFilterStore: this.listFilterStore,
                action: action
            };
        };
        SavedFilterActionsAdapter.prototype.getMode = function () {
            return this.store.getMode();
        };
        SavedFilterActionsAdapter.prototype.getModuleName = function (context) {
            return this.store.getModuleName();
        };
        SavedFilterActionsAdapter.prototype.reload = function (action, process, context) {
            this.store.load(false).pipe(operators.take(1)).subscribe();
        };
        return SavedFilterActionsAdapter;
    }(BaseRecordActionsAdapter));
    SavedFilterActionsAdapter.decorators = [
        { type: i0.Injectable }
    ];
    SavedFilterActionsAdapter.ctorParameters = function () { return [
        { type: SavedFilterStore },
        { type: ListFilterStore },
        { type: LanguageStore },
        { type: SavedFilterActionManager },
        { type: AsyncActionService },
        { type: MessageService },
        { type: ConfirmationModalService },
        { type: SelectModalService }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var SavedFilterActionAdapterFactory = /** @class */ (function () {
        function SavedFilterActionAdapterFactory(language, actionManager, asyncActionService, message, confimation, selectModalService) {
            this.language = language;
            this.actionManager = actionManager;
            this.asyncActionService = asyncActionService;
            this.message = message;
            this.confimation = confimation;
            this.selectModalService = selectModalService;
        }
        SavedFilterActionAdapterFactory.prototype.create = function (store, listFilterStore) {
            return new SavedFilterActionsAdapter(store, listFilterStore, this.language, this.actionManager, this.asyncActionService, this.message, this.confimation, this.selectModalService);
        };
        return SavedFilterActionAdapterFactory;
    }());
    SavedFilterActionAdapterFactory.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function SavedFilterActionAdapterFactory_Factory() { return new SavedFilterActionAdapterFactory(i0__namespace.ɵɵinject(LanguageStore), i0__namespace.ɵɵinject(SavedFilterActionManager), i0__namespace.ɵɵinject(AsyncActionService), i0__namespace.ɵɵinject(MessageService), i0__namespace.ɵɵinject(ConfirmationModalService), i0__namespace.ɵɵinject(SelectModalService)); }, token: SavedFilterActionAdapterFactory, providedIn: "root" });
    SavedFilterActionAdapterFactory.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root',
                },] }
    ];
    SavedFilterActionAdapterFactory.ctorParameters = function () { return [
        { type: LanguageStore },
        { type: SavedFilterActionManager },
        { type: AsyncActionService },
        { type: MessageService },
        { type: ConfirmationModalService },
        { type: SelectModalService }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var ListFilterStoreFactory = /** @class */ (function () {
        function ListFilterStoreFactory(message, savedFilterStoreFactory) {
            this.message = message;
            this.savedFilterStoreFactory = savedFilterStoreFactory;
        }
        ListFilterStoreFactory.prototype.create = function () {
            return new ListFilterStore(this.message, this.savedFilterStoreFactory);
        };
        return ListFilterStoreFactory;
    }());
    ListFilterStoreFactory.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function ListFilterStoreFactory_Factory() { return new ListFilterStoreFactory(i0__namespace.ɵɵinject(MessageService), i0__namespace.ɵɵinject(SaveFilterStoreFactory)); }, token: ListFilterStoreFactory, providedIn: "root" });
    ListFilterStoreFactory.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root',
                },] }
    ];
    ListFilterStoreFactory.ctorParameters = function () { return [
        { type: MessageService },
        { type: SaveFilterStoreFactory }
    ]; };

    var ListFilterComponent = /** @class */ (function () {
        function ListFilterComponent(storeFactory, actionAdapterFactory) {
            this.storeFactory = storeFactory;
            this.actionAdapterFactory = actionAdapterFactory;
            this.store = storeFactory.create();
            this.filterActionsAdapter = actionAdapterFactory.create(this.store.filterStore, this.store);
        }
        ListFilterComponent.prototype.ngOnInit = function () {
            this.store.init(this.config);
            this.vm$ = this.store.vm$.pipe(operators.map(function (_a) {
                var _b = __read(_a, 1), savedFilter = _b[0];
                var record = Object.assign({}, savedFilter);
                record.fields = savedFilter.criteriaFields;
                return record;
            }));
        };
        ListFilterComponent.prototype.ngOnDestroy = function () {
            this.store.clear();
            this.store = null;
        };
        ListFilterComponent.prototype.getGridConfig = function () {
            return {
                record$: this.store.filterStore.stagingRecord$,
                mode$: this.store.filterStore.mode$,
                fields$: this.store.filterStore.getViewFieldsKeys$(),
                actions: this.filterActionsAdapter,
                appendActions: true,
                klass: 'mt-2 p-2 saved-search-container rounded',
                buttonClass: 'btn btn-outline-danger btn-sm',
                labelDisplay: 'inline',
                maxColumns$: rxjs.of(4).pipe(operators.shareReplay(1)),
                sizeMap$: rxjs.of({
                    handset: 1,
                    tablet: 2,
                    web: 3,
                    wide: 4
                }).pipe(operators.shareReplay(1)),
            };
        };
        return ListFilterComponent;
    }());
    ListFilterComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-list-filter',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<scrm-panel [titleKey]=\"'LBL_BASIC_FILTER'\"\n            [close]=\"store.closeButton\"\n            [isCollapsed$]=\"store.isCollapsed$\"\n            [mode]=\"store.panelMode\"\n            klass=\"filter-panel {{ (config && config.klass) || ''}}\"\n            *ngIf=\"(vm$ | async) as vm\">\n\n    <div *ngIf=\"store.myFilterButton\" panel-header-button>\n        <scrm-dropdown-button [config]=\"store.myFilterButton\"></scrm-dropdown-button>\n    </div>\n\n    <div class=\"p-3 filter-body\" panel-body>\n\n        <scrm-field-grid *ngIf=\"store.displayFields && store.displayFields.length\"\n                         [actions]=\"true\"\n                         [appendActions]=\"false\"\n                         [fieldMode]=\"store.mode\"\n                         [fields]=\"store.displayFields\"\n                         [record]=\"vm\"\n                         [special]=\"store.special.length > 0\"\n        >\n\n            <div *ngIf=\"store.special.length > 0\" class=\"float-right mt-4\" field-grid-special>\n\n                <div *ngFor=\"let item of store.special \" class=\"d-inline-block form-check mb-2 mr-sm-2\">\n\n                    <input class=\"form-check-input\" type=\"checkbox\" [value]=\"item.value\">\n\n                    <label class=\"form-check-label\">\n                        <scrm-label [labelKey]=\"item.labelKey\"></scrm-label>\n                    </label>\n\n                </div>\n            </div>\n\n            <div *ngIf=\"store.gridButtons\" class=\"mt-4 align-self-end\" field-grid-actions>\n                <scrm-button *ngFor=\"let button of store.gridButtons\" [config]=\"button\"></scrm-button>\n            </div>\n        </scrm-field-grid>\n\n        <ng-container *ngIf=\"config && config.savedFilterEdit\">\n            <scrm-record-grid [config]=\"getGridConfig()\"></scrm-record-grid>\n        </ng-container>\n\n    </div>\n\n</scrm-panel>\n"
                },] }
    ];
    ListFilterComponent.ctorParameters = function () { return [
        { type: ListFilterStoreFactory },
        { type: SavedFilterActionAdapterFactory }
    ]; };
    ListFilterComponent.propDecorators = {
        config: [{ type: i0.Input }]
    };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var ListFilterModule = /** @class */ (function () {
        function ListFilterModule() {
        }
        return ListFilterModule;
    }());
    ListFilterModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [ListFilterComponent],
                    exports: [
                        ListFilterComponent
                    ],
                    imports: [
                        common.CommonModule,
                        ButtonModule,
                        PanelModule,
                        FieldGridModule,
                        DropdownButtonModule,
                        LabelModule,
                        RecordGridModule,
                        ButtonModule
                    ]
                },] }
    ];

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var RecordListModalModule = /** @class */ (function () {
        function RecordListModalModule() {
        }
        return RecordListModalModule;
    }());
    RecordListModalModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [RecordListModalComponent],
                    imports: [
                        common.CommonModule,
                        ModalModule,
                        TableModule,
                        LabelModule,
                        LoadingSpinnerModule,
                        ListFilterModule,
                    ]
                },] }
    ];

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var RecordPanelComponent = /** @class */ (function () {
        function RecordPanelComponent() {
            this.panelMode = 'closable';
        }
        RecordPanelComponent.prototype.ngOnInit = function () {
            this.vm$ = this.config.store.vm$;
            this.initCloseButton();
            if (this.config.panelMode) {
                this.panelMode = this.config.panelMode;
            }
            this.collapse = new rxjs.BehaviorSubject(false);
            this.isCollapsed$ = this.collapse.asObservable();
            if (!i5.isVoid(this.config.isCollapsed)) {
                this.collapse.next(this.config.isCollapsed);
            }
        };
        RecordPanelComponent.prototype.ngOnDestroy = function () {
        };
        RecordPanelComponent.prototype.getGridConfig = function () {
            return {
                record$: this.config.store.stagingRecord$,
                mode$: this.config.store.mode$,
                fields$: this.config.store.getViewFieldsKeys$(),
                actions: this.config.actions,
                klass: 'mt-2 rounded shadow-sm',
                buttonClass: 'btn btn-outline-danger btn-sm',
                maxColumns$: rxjs.of(4).pipe(operators.shareReplay(1)),
                sizeMap$: rxjs.of({
                    handset: 1,
                    tablet: 2,
                    web: 3,
                    wide: 4
                }).pipe(operators.shareReplay(1)),
            };
        };
        /**
         * Init close button
         */
        RecordPanelComponent.prototype.initCloseButton = function () {
            var _this = this;
            this.closeButton = {
                onClick: function () {
                    _this.config.onClose();
                }
            };
        };
        return RecordPanelComponent;
    }());
    RecordPanelComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-record-panel',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<scrm-panel *ngIf=\"(vm$ | async) as vm\"\n            [close]=\"closeButton\"\n            [isCollapsed$]=\"isCollapsed$\"\n            [mode]=\"panelMode\"\n            [titleKey]=\"config.title || ''\"\n            klass=\"record-panel {{ (config && config.klass) || ''}}\">\n\n    <div class=\"pl-2 pr-2\" panel-body>\n\n        <ng-container *ngIf=\"config\">\n            <scrm-record-grid [config]=\"getGridConfig()\"></scrm-record-grid>\n        </ng-container>\n\n    </div>\n\n</scrm-panel>\n"
                },] }
    ];
    RecordPanelComponent.ctorParameters = function () { return []; };
    RecordPanelComponent.propDecorators = {
        config: [{ type: i0.Input }]
    };

    var RecordPanelActionHandler = /** @class */ (function (_super) {
        __extends(RecordPanelActionHandler, _super);
        function RecordPanelActionHandler() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return RecordPanelActionHandler;
    }(i5.ActionHandler));

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var RecordPanelModule = /** @class */ (function () {
        function RecordPanelModule() {
        }
        return RecordPanelModule;
    }());
    RecordPanelModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [RecordPanelComponent],
                    exports: [
                        RecordPanelComponent
                    ],
                    imports: [
                        common.CommonModule,
                        ButtonModule,
                        PanelModule,
                        FieldGridModule,
                        DropdownButtonModule,
                        LabelModule,
                        ButtonModule,
                        RecordGridModule
                    ]
                },] }
    ];

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var initialState$3 = {
        module: '',
        recordId: '',
        loading: {
            data: false,
            metadata: false
        },
        mode: 'detail',
    };
    var BaseRecordContainerStore = /** @class */ (function () {
        function BaseRecordContainerStore(appStateStore, meta, message, fieldManager, language, storeFactory) {
            this.appStateStore = appStateStore;
            this.meta = meta;
            this.message = message;
            this.fieldManager = fieldManager;
            this.language = language;
            this.storeFactory = storeFactory;
            /** Internal Properties */
            this.internalState = i5.deepClone(initialState$3);
            this.metadataState = i5.deepClone({});
            this.store = new rxjs.BehaviorSubject(this.internalState);
            this.state$ = this.store.asObservable();
            this.metadataStore = new rxjs.BehaviorSubject({});
            this.metadataState$ = this.metadataStore.asObservable();
            this.subs = [];
            this.meta$ = this.metadataState$;
            this.recordStore = storeFactory.create(this.getViewFields$());
            this.record$ = this.recordStore.state$.pipe(operators.distinctUntilChanged());
            this.stagingRecord$ = this.recordStore.staging$.pipe(operators.distinctUntilChanged());
            this.loading$ = this.state$.pipe(operators.map(function (state) { return state.loading.data || state.loading.metadata; }));
            this.mode$ = this.state$.pipe(operators.map(function (state) { return state.mode; }));
            this.vm$ = this.state$;
        }
        /**
         * Get current module name
         * @returns {string} module
         */
        BaseRecordContainerStore.prototype.getModuleName = function () {
            return this.internalState.module;
        };
        /**
         * Get current record id
         * @returns {string} id
         */
        BaseRecordContainerStore.prototype.getRecordId = function () {
            return this.internalState.recordId;
        };
        /**
         * Get View Context
         * @returns {object} ViewContext
         */
        BaseRecordContainerStore.prototype.getViewContext = function () {
            return {
                module: this.getModuleName(),
                id: this.getRecordId(),
            };
        };
        /**
         * Initial record load if not cached and update state.
         * Returns observable to be used in resolver if needed
         *
         * @param {string} module to use
         * @param {string} recordId to use
         * @param {string} mode to use
         * @returns {object} Observable<any>
         */
        BaseRecordContainerStore.prototype.init = function (module, recordId, mode) {
            if (mode === void 0) { mode = 'detail'; }
            this.baseInit(module, recordId, mode);
            this.setMetadataLoading(true);
            var dataMap = {
                $meta: this.loadMetadata(),
                record: this.load()
            };
            var $data = rxjs.forkJoin(dataMap);
            return $data.pipe(operators.map(function (_a) {
                var meta = _a.meta, record = _a.record;
                return record;
            }));
        };
        /**
         * Init record
         *
         * @param {object} record to use
         * @param {string} mode to use
         * @param {boolean} loadMetadata to use
         * @returns {object} Observable<any>
         */
        BaseRecordContainerStore.prototype.initRecord = function (record, mode, loadMetadata) {
            var _this = this;
            if (mode === void 0) { mode = 'detail'; }
            if (loadMetadata === void 0) { loadMetadata = true; }
            this.baseInit(record.module, record.id, mode);
            if (loadMetadata) {
                this.loadMetadata().pipe(operators.take(1), operators.tap(function () {
                    _this.setRecord(record);
                })).subscribe();
            }
        };
        /**
         * Init staging
         * @param {object} record
         */
        BaseRecordContainerStore.prototype.initStaging = function (record) {
            var baseRecord = i5.deepClone(this.recordStore.extractBaseRecord(record));
            this.recordStore.setStaging(baseRecord);
        };
        /**
         * Set Record
         * @param {object} record
         */
        BaseRecordContainerStore.prototype.setRecord = function (record) {
            var baseRecord = i5.deepClone(this.recordStore.extractBaseRecord(record));
            this.recordStore.setRecord(baseRecord);
        };
        /**
         * Set Metadata
         * @param {object} meta
         */
        BaseRecordContainerStore.prototype.setMetadata = function (meta) {
            this.updateMetadataState(meta);
            this.setMetadataLoading(false);
        };
        /**
         * Clean destroy
         */
        BaseRecordContainerStore.prototype.destroy = function () {
            this.clear();
        };
        /**
         * Clear observable cache
         */
        BaseRecordContainerStore.prototype.clear = function () {
            this.updateState(i5.deepClone(initialState$3));
            this.recordStore.destroy();
            this.recordStore = null;
        };
        /**
         * Clear observable cache
         */
        BaseRecordContainerStore.prototype.clearAuthBased = function () {
            this.clear();
        };
        /**
         * Get staging record
         *
         * @returns {string} ViewMode
         */
        BaseRecordContainerStore.prototype.getBaseRecord = function () {
            return this.recordStore.getBaseRecord();
        };
        /**
         * Get current view mode
         *
         * @returns {string} ViewMode
         */
        BaseRecordContainerStore.prototype.getMode = function () {
            if (!this.internalState) {
                return null;
            }
            return this.internalState.mode;
        };
        /**
         * Set new mode
         *
         * @param {string} mode ViewMode
         */
        BaseRecordContainerStore.prototype.setMode = function (mode) {
            this.updateState(Object.assign(Object.assign({}, this.internalState), { mode: mode }));
        };
        /**
         * Set loading flag
         *
         * @param {boolean} loading flag
         */
        BaseRecordContainerStore.prototype.setDataLoading = function (loading) {
            this.updateState(Object.assign(Object.assign({}, this.internalState), { loading: Object.assign(Object.assign({}, this.internalState.loading), { data: loading }) }));
        };
        /**
         * Set loading flag
         *
         * @param {boolean} loading flag
         */
        BaseRecordContainerStore.prototype.setMetadataLoading = function (loading) {
            this.updateState(Object.assign(Object.assign({}, this.internalState), { loading: Object.assign(Object.assign({}, this.internalState.loading), { metadata: loading }) }));
        };
        /**
         * Save record
         */
        BaseRecordContainerStore.prototype.save = function () {
            var _this = this;
            this.setDataLoading(true);
            return this.recordStore.save().pipe(operators.catchError(function () {
                _this.message.addDangerMessageByKey('LBL_ERROR_SAVING');
                return rxjs.of({});
            }), operators.finalize(function () {
                _this.setDataLoading(false);
            }));
        };
        /**
         * Validate search filter fields
         *
         * @returns {object} Observable<boolean>
         */
        BaseRecordContainerStore.prototype.validate = function () {
            return this.recordStore.validate();
        };
        /**
         * Load / reload record using current pagination and criteria
         *
         * @param {boolean} useCache if to use cache
         * @returns {object} Observable<RecordViewState>
         */
        BaseRecordContainerStore.prototype.load = function (useCache) {
            var _this = this;
            if (useCache === void 0) { useCache = true; }
            this.setDataLoading(true);
            return this.recordStore.retrieveRecord(this.internalState.module, this.internalState.recordId, useCache).pipe(operators.tap(function (data) {
                _this.updateState(Object.assign(Object.assign({}, _this.internalState), { recordId: data.id, module: data.module }));
            }), operators.finalize(function () {
                _this.setDataLoading(false);
            }));
        };
        /**
         * Load / reload record using current pagination and criteria
         *
         * @param {boolean} useCache if to use cache
         * @returns {object} Observable<RecordViewState>
         */
        BaseRecordContainerStore.prototype.loadMetadata = function (useCache) {
            var _this = this;
            if (useCache === void 0) { useCache = true; }
            this.setMetadataLoading(true);
            return this.meta.getMetadata(this.internalState.module).pipe(operators.map(function (metadata) { return metadata.recordView; }), operators.tap(function (meta) {
                _this.updateMetadataState(meta);
            }), operators.finalize(function () {
                _this.setMetadataLoading(false);
            }));
        };
        /**
         * Update the state
         *
         * @param {object} state to set
         */
        BaseRecordContainerStore.prototype.updateState = function (state) {
            this.store.next(this.internalState = state);
        };
        /**
         * Update the metadata state
         *
         * @param {object} state to set
         */
        BaseRecordContainerStore.prototype.updateMetadataState = function (state) {
            this.metadataStore.next(this.metadataState = state);
        };
        /**
         * Get record view metadata
         *
         * @returns {object} metadata M
         */
        BaseRecordContainerStore.prototype.getMetadata = function () {
            return i5.deepClone(this.metadataState);
        };
        /**
         * Base store initialization
         * @param module
         * @param recordId
         * @param mode
         */
        BaseRecordContainerStore.prototype.baseInit = function (module, recordId, mode) {
            if (mode === void 0) { mode = 'detail'; }
            this.updateState(Object.assign(Object.assign({}, this.internalState), { module: module, recordId: recordId, mode: mode }));
        };
        return BaseRecordContainerStore;
    }());

    var RecordPanelStore = /** @class */ (function (_super) {
        __extends(RecordPanelStore, _super);
        function RecordPanelStore() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        /**
         * Get view fields observable
         *
         * @returns {object} Observable<ViewFieldDefinition[]>
         */
        RecordPanelStore.prototype.getViewFields$ = function () {
            return this.meta$.pipe(operators.map(function (meta) {
                return meta.fields;
            }));
        };
        /**
         * Get view fields keys observable
         *
         * @returns {object} Observable<string[]>
         */
        RecordPanelStore.prototype.getViewFieldsKeys$ = function () {
            return this.meta$.pipe(operators.map(function (meta) {
                if (!meta.fields || !meta.fields.length) {
                    return [];
                }
                var keys = [];
                meta.fields.forEach(function (field) {
                    keys.push(field.name);
                });
                return keys;
            }));
        };
        /**
         * Init record
         *
         * @param {object} record to use
         * @param {string} mode to use
         * @param {boolean} loadMetadata to use
         * @returns {object} Observable<any>
         */
        RecordPanelStore.prototype.initRecord = function (record, mode, loadMetadata) {
            if (mode === void 0) { mode = 'detail'; }
            if (loadMetadata === void 0) { loadMetadata = true; }
            _super.prototype.initRecord.call(this, record, mode, loadMetadata);
            this.setRecord(record);
        };
        return RecordPanelStore;
    }(BaseRecordContainerStore));
    RecordPanelStore.decorators = [
        { type: i0.Injectable }
    ];

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var RecordPanelStoreFactory = /** @class */ (function () {
        function RecordPanelStoreFactory(recordFetchGQL, recordSaveGQL, appStateStore, languageStore, metadataStore, message, recordManager, fieldManager, recordStoreFactory) {
            this.recordFetchGQL = recordFetchGQL;
            this.recordSaveGQL = recordSaveGQL;
            this.appStateStore = appStateStore;
            this.languageStore = languageStore;
            this.metadataStore = metadataStore;
            this.message = message;
            this.recordManager = recordManager;
            this.fieldManager = fieldManager;
            this.recordStoreFactory = recordStoreFactory;
        }
        RecordPanelStoreFactory.prototype.create = function () {
            return new RecordPanelStore(this.appStateStore, this.metadataStore, this.message, this.fieldManager, this.languageStore, this.recordStoreFactory);
        };
        return RecordPanelStoreFactory;
    }());
    RecordPanelStoreFactory.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function RecordPanelStoreFactory_Factory() { return new RecordPanelStoreFactory(i0__namespace.ɵɵinject(RecordFetchGQL), i0__namespace.ɵɵinject(RecordSaveGQL), i0__namespace.ɵɵinject(AppStateStore), i0__namespace.ɵɵinject(LanguageStore), i0__namespace.ɵɵinject(MetadataStore), i0__namespace.ɵɵinject(MessageService), i0__namespace.ɵɵinject(RecordManager), i0__namespace.ɵɵinject(FieldManager), i0__namespace.ɵɵinject(RecordStoreFactory)); }, token: RecordPanelStoreFactory, providedIn: "root" });
    RecordPanelStoreFactory.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root',
                },] }
    ];
    RecordPanelStoreFactory.ctorParameters = function () { return [
        { type: RecordFetchGQL },
        { type: RecordSaveGQL },
        { type: AppStateStore },
        { type: LanguageStore },
        { type: MetadataStore },
        { type: MessageService },
        { type: RecordManager },
        { type: FieldManager },
        { type: RecordStoreFactory }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var RecordStoreList = /** @class */ (function () {
        function RecordStoreList(listStoreFactory, recordStoreFactory) {
            var _this = this;
            this.listStoreFactory = listStoreFactory;
            this.recordStoreFactory = recordStoreFactory;
            this.subs = [];
            this.stores = [];
            this.storeSubject = new rxjs.BehaviorSubject([]);
            this.state$ = this.storeSubject.asObservable();
            this.recordList = listStoreFactory.create();
            this.stores$ = this.state$;
            this.storesMap$ = this.stores$.pipe(operators.map(function (stores) {
                return _this.getStoreMap(stores);
            }));
        }
        RecordStoreList.prototype.clear = function () {
            this.subs.forEach(function (sub) { return sub.unsubscribe(); });
        };
        RecordStoreList.prototype.clearAuthBased = function () {
        };
        RecordStoreList.prototype.getMetadata = function () {
            return null;
        };
        /**
         * Initial list records load if not cached and update state.
         * Returns observable to be used in resolver if needed
         *
         * @param {string} module to use
         * @param {boolean} load
         */
        RecordStoreList.prototype.init = function (module, load) {
            var _this = this;
            if (load === void 0) { load = true; }
            var load$ = this.recordList.init(module, load, 'list_max_entries_per_subpanel');
            this.subs.push(this.recordList.records$.subscribe(function (records) {
                _this.initStores(records);
            }));
            if (!load$) {
                return;
            }
            load$.pipe(operators.tap(function (recordList) {
                _this.initStores(recordList.records);
            })).pipe(operators.take(1)).subscribe();
        };
        /**
         * Load / reload records using current pagination and criteria
         *
         * @param {boolean} useCache if to use cache
         * @returns {object} Observable<RecordList>
         */
        RecordStoreList.prototype.load = function (useCache) {
            var _this = this;
            if (useCache === void 0) { useCache = true; }
            return this.recordList.load(useCache).pipe(operators.tap(function (recordList) {
                _this.initStores(recordList.records);
            }));
        };
        /**
         * Init record stores using records
         * @param records
         */
        RecordStoreList.prototype.initStores = function (records) {
            var _this = this;
            if (!records) {
                return;
            }
            var newStores = {};
            var storesArray = [];
            var storesMap = this.getStoreMap(this.stores);
            records.forEach(function (record) {
                if (!record || !record.id) {
                    return;
                }
                var id = record.id;
                if (storesMap[id]) {
                    var store = storesMap[id];
                    store.setRecord(record);
                    newStores[id] = store;
                    storesArray.push(store);
                    return;
                }
                newStores[id] = _this.recordStoreFactory.create();
                if (_this.getMetadata()) {
                    newStores[id].setMetadata(_this.getMetadata());
                }
                newStores[id].initRecord(record, 'detail', false);
                storesArray.push(newStores[id]);
            });
            var existingIds = Object.keys(storesMap);
            existingIds.forEach(function (id) {
                if (newStores[id]) {
                    return;
                }
                storesMap[id].destroy();
            });
            this.updateState(storesArray);
        };
        RecordStoreList.prototype.updateState = function (stores) {
            this.storeSubject.next(this.stores = stores);
        };
        RecordStoreList.prototype.getStoreMap = function (stores) {
            var map = {};
            if (!stores || !stores.length) {
                return map;
            }
            stores.forEach(function (store) {
                map[store.getBaseRecord().id] = store;
            });
            return map;
        };
        return RecordStoreList;
    }());
    RecordStoreList.decorators = [
        { type: i0.Injectable }
    ];
    RecordStoreList.ctorParameters = function () { return [
        { type: RecordListStoreFactory },
        { type: undefined }
    ]; };

    var RecordThreadItemStore = /** @class */ (function (_super) {
        __extends(RecordThreadItemStore, _super);
        function RecordThreadItemStore() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        /**
         * Get view fields observable
         *
         * @returns {object} Observable<ViewFieldDefinition[]>
         */
        RecordThreadItemStore.prototype.getViewFields$ = function () {
            return this.meta$.pipe(operators.map(function (meta) {
                var fields = [];
                meta.headerLayout && meta.headerLayout.rows && meta.headerLayout.rows.forEach(function (row) {
                    row.cols.forEach(function (col) {
                        if (col.field) {
                            fields.push(col.field);
                        }
                    });
                });
                meta.bodyLayout && meta.bodyLayout.rows && meta.bodyLayout.rows.forEach(function (row) {
                    row.cols.forEach(function (col) {
                        if (col.field) {
                            fields.push(col.field);
                        }
                    });
                });
                return fields;
            }));
        };
        /**
         * Init record
         *
         * @param {object} record to use
         * @param {string} mode to use
         * @param {boolean} loadMetadata to use
         * @returns {object} Observable<any>
         */
        RecordThreadItemStore.prototype.initRecord = function (record, mode, loadMetadata) {
            if (mode === void 0) { mode = 'detail'; }
            if (loadMetadata === void 0) { loadMetadata = true; }
            _super.prototype.initRecord.call(this, record, mode, loadMetadata);
            this.setRecord(record);
        };
        return RecordThreadItemStore;
    }(BaseRecordContainerStore));
    RecordThreadItemStore.decorators = [
        { type: i0.Injectable }
    ];

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var RecordThreadItemStoreFactory = /** @class */ (function () {
        function RecordThreadItemStoreFactory(appStateStore, meta, message, fieldManager, language, storeFactory) {
            this.appStateStore = appStateStore;
            this.meta = meta;
            this.message = message;
            this.fieldManager = fieldManager;
            this.language = language;
            this.storeFactory = storeFactory;
        }
        RecordThreadItemStoreFactory.prototype.create = function () {
            return new RecordThreadItemStore(this.appStateStore, this.meta, this.message, this.fieldManager, this.language, this.storeFactory);
        };
        return RecordThreadItemStoreFactory;
    }());
    RecordThreadItemStoreFactory.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function RecordThreadItemStoreFactory_Factory() { return new RecordThreadItemStoreFactory(i0__namespace.ɵɵinject(AppStateStore), i0__namespace.ɵɵinject(MetadataStore), i0__namespace.ɵɵinject(MessageService), i0__namespace.ɵɵinject(FieldManager), i0__namespace.ɵɵinject(LanguageStore), i0__namespace.ɵɵinject(RecordStoreFactory)); }, token: RecordThreadItemStoreFactory, providedIn: "root" });
    RecordThreadItemStoreFactory.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root',
                },] }
    ];
    RecordThreadItemStoreFactory.ctorParameters = function () { return [
        { type: AppStateStore },
        { type: MetadataStore },
        { type: MessageService },
        { type: FieldManager },
        { type: LanguageStore },
        { type: RecordStoreFactory }
    ]; };

    var RecordThreadStore = /** @class */ (function (_super) {
        __extends(RecordThreadStore, _super);
        function RecordThreadStore(listStoreFactory, recordStoreFactory) {
            var _this = _super.call(this, listStoreFactory, recordStoreFactory) || this;
            _this.listStoreFactory = listStoreFactory;
            _this.recordStoreFactory = recordStoreFactory;
            _this.$loading = _this.recordList.loading$;
            return _this;
        }
        RecordThreadStore.prototype.init = function (module, load) {
            if (load === void 0) { load = true; }
            _super.prototype.init.call(this, module, load);
        };
        RecordThreadStore.prototype.setFilters = function (filters) {
            var criteria = this.recordList.criteria;
            criteria = Object.assign(Object.assign({}, criteria), filters);
            if (filters && filters.orderBy) {
                var sortOrder = i5.SortDirection.DESC;
                if (filters.sortOrder && String(filters.sortOrder).toUpperCase() === 'ASC') {
                    sortOrder = i5.SortDirection.ASC;
                }
                this.recordList.updateSorting(filters.orderBy, sortOrder, false);
            }
            this.recordList.updateSearchCriteria(criteria, false);
            return this.load(false).pipe(operators.map(function (value) { return value.records; }));
        };
        RecordThreadStore.prototype.getMetadata = function () {
            return this.metadata;
        };
        RecordThreadStore.prototype.setMetadata = function (meta) {
            return this.metadata = meta;
        };
        RecordThreadStore.prototype.allLoaded = function () {
            var pagination = this.recordList.getPagination();
            if (!pagination) {
                return false;
            }
            return pagination.pageSize >= pagination.total;
        };
        RecordThreadStore.prototype.loadMore = function (jump) {
            if (jump === void 0) { jump = 10; }
            var pagination = this.recordList.getPagination();
            var currentPageSize = pagination.pageSize || 0;
            var newPageSize = currentPageSize + jump;
            this.recordList.setPageSize(newPageSize);
            this.recordList.updatePagination(0);
        };
        RecordThreadStore.prototype.reload = function () {
            this.recordList.updatePagination(0);
        };
        return RecordThreadStore;
    }(RecordStoreList));
    RecordThreadStore.decorators = [
        { type: i0.Injectable }
    ];
    RecordThreadStore.ctorParameters = function () { return [
        { type: RecordListStoreFactory },
        { type: RecordThreadItemStoreFactory }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var RecordThreadStoreFactory = /** @class */ (function () {
        function RecordThreadStoreFactory(recordListFactory, recordStoreFactory) {
            this.recordListFactory = recordListFactory;
            this.recordStoreFactory = recordStoreFactory;
        }
        RecordThreadStoreFactory.prototype.create = function () {
            return new RecordThreadStore(this.recordListFactory, this.recordStoreFactory);
        };
        return RecordThreadStoreFactory;
    }());
    RecordThreadStoreFactory.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function RecordThreadStoreFactory_Factory() { return new RecordThreadStoreFactory(i0__namespace.ɵɵinject(RecordListStoreFactory), i0__namespace.ɵɵinject(RecordThreadItemStoreFactory)); }, token: RecordThreadStoreFactory, providedIn: "root" });
    RecordThreadStoreFactory.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root',
                },] }
    ];
    RecordThreadStoreFactory.ctorParameters = function () { return [
        { type: RecordListStoreFactory },
        { type: RecordThreadItemStoreFactory }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var RecordThreadComponent = /** @class */ (function () {
        function RecordThreadComponent(storeFactory, itemFactory, recordManager, message) {
            this.storeFactory = storeFactory;
            this.itemFactory = itemFactory;
            this.recordManager = recordManager;
            this.message = message;
            this.loading = false;
            this.maxHeight = 400;
            this.direction = 'asc';
            this.shouldResetScroll = false;
            this.subs = [];
        }
        RecordThreadComponent.prototype.ngOnInit = function () {
            var _this = this;
            this.maxHeight = this.config.maxListHeight || this.maxHeight;
            if (!this.config.store) {
                this.store = this.storeFactory.create();
            }
            if (!this.config.module) {
                return;
            }
            this.direction = this.config.direction || this.direction;
            this.store.setMetadata(this.config.itemConfig.metadata);
            this.store.init(this.config.module, false);
            this.initCreate();
            this.initDataSubscription();
            if (this.config.filters$) {
                this.subs.push(this.config.filters$.subscribe(function (filters) {
                    _this.store.setFilters(filters).pipe(operators.take(1)).subscribe();
                }));
            }
            else {
                this.store.load(false);
            }
            this.initLoading();
        };
        RecordThreadComponent.prototype.ngAfterViewInit = function () {
            this.shouldResetScroll = true;
            this.resetScroll();
        };
        RecordThreadComponent.prototype.ngOnDestroy = function () {
            this.store.clear();
            this.store = null;
            this.subs.forEach(function (sub) { return sub.unsubscribe(); });
        };
        RecordThreadComponent.prototype.buildItem = function (item, itemRef) {
            var _this = this;
            return Object.assign(Object.assign({}, this.config.itemConfig), { store: item, klass: 'record-thread-list-item', expanded: function () {
                    _this.scrollToItem(itemRef);
                }, collapsed: function () {
                    _this.scrollToItem(itemRef);
                } });
        };
        RecordThreadComponent.prototype.getLoadMoreButton = function () {
            var _this = this;
            return {
                klass: 'load-more-button btn btn-link btn-sm',
                labelKey: 'LBL_LOAD_MORE',
                onClick: function () {
                    _this.store.loadMore();
                }
            };
        };
        RecordThreadComponent.prototype.buildCreateItem = function () {
            return Object.assign(Object.assign({}, this.config.createConfig), { store: this.createStore, rowClass: { 'pt-1': true }, klass: 'record-thread-create-item' });
        };
        RecordThreadComponent.prototype.getCreateButton = function () {
            var _this = this;
            return {
                klass: 'create-thread-item-button btn btn-danger btn-sm',
                labelKey: 'LBL_SUBMIT_BUTTON_LABEL',
                onClick: function () {
                    _this.createStore.validate().pipe(operators.take(1)).subscribe(function (valid) {
                        if (valid) {
                            _this.createStore.save().pipe(operators.take(1)).subscribe(function () {
                                _this.store.reload();
                                _this.initRecord();
                                _this.shouldResetScroll = true;
                                _this.message.addSuccessMessageByKey('LBL_ACTION_SUCCESS');
                            });
                            return;
                        }
                        _this.message.addWarningMessageByKey('LBL_VALIDATION_ERRORS');
                    });
                }
            };
        };
        RecordThreadComponent.prototype.allLoaded = function () {
            return !!(this.store && this.store.allLoaded());
        };
        RecordThreadComponent.prototype.initRecord = function () {
            var emptyRecord = this.recordManager.buildEmptyRecord(this.config.module);
            this.addPresetFields(emptyRecord);
            var mode = 'edit';
            if (this.config.createConfig && this.config.createConfig.initialMode) {
                mode = this.config.createConfig.initialMode;
            }
            this.createStore.initRecord(emptyRecord, mode, false);
        };
        RecordThreadComponent.prototype.scrollToEnd = function () {
            if (!this.listContainer || !this.listContainer.nativeElement) {
                return;
            }
            this.scrollTo(this.listContainer.nativeElement.scrollHeight);
        };
        RecordThreadComponent.prototype.scrollToTop = function () {
            this.scrollTo(0);
        };
        RecordThreadComponent.prototype.scrollTo = function (position) {
            try {
                this.listContainer.nativeElement.scrollTop = position;
            }
            catch (err) {
            }
        };
        RecordThreadComponent.prototype.scrollToItem = function (item) {
            if (!item || !this.listContainer || !this.listContainer.nativeElement) {
                return;
            }
            var elementTop = item.offsetTop;
            var parentTop = this.listContainer.nativeElement.offsetTop;
            var relativeTop = elementTop - parentTop;
            this.scrollTo(relativeTop);
        };
        RecordThreadComponent.prototype.resetScroll = function () {
            if (this.shouldResetScroll === false) {
                return;
            }
            if (this.direction === 'asc') {
                this.scrollToEnd();
            }
            else {
                this.scrollToTop();
            }
            this.shouldResetScroll = false;
        };
        RecordThreadComponent.prototype.scheduleScrollReset = function () {
            var _this = this;
            setTimeout(function () {
                _this.resetScroll();
            }, 500);
        };
        RecordThreadComponent.prototype.initCreate = function () {
            if (!this.config.create) {
                return;
            }
            this.createStore = this.itemFactory.create();
            this.createStore.setMetadata(this.config.createConfig.metadata);
            this.initRecord();
            this.initPresetFieldsMapping();
        };
        RecordThreadComponent.prototype.initPresetFieldsMapping = function () {
            var _this = this;
            if (!this.config.presetFields$) {
                return;
            }
            this.subs.push(this.config.presetFields$.subscribe(function (presetFieldValues) {
                if (!presetFieldValues || !Object.keys(presetFieldValues).length) {
                    return;
                }
                _this.presetFieldValues = presetFieldValues;
                var record = _this.createStore.recordStore.getBaseRecord();
                _this.addPresetFields(record);
                _this.createStore.recordStore.setRecord(record);
            }));
        };
        RecordThreadComponent.prototype.addPresetFields = function (record) {
            if (!this.presetFieldValues) {
                return;
            }
            record.attributes = Object.assign(Object.assign({}, this.presetFieldValues), (record.attributes || {}));
        };
        RecordThreadComponent.prototype.initDataSubscription = function () {
            var _this = this;
            this.subs.push(this.store.stores$.subscribe(function (records) {
                if (!_this.records || !_this.records.length) {
                    _this.shouldResetScroll = true;
                }
                if (_this.direction === 'asc') {
                    _this.records = records.reverse();
                    _this.scheduleScrollReset();
                    return;
                }
                _this.records = records;
                _this.scheduleScrollReset();
            }));
        };
        RecordThreadComponent.prototype.initLoading = function () {
            var _this = this;
            var loading = [
                this.store.$loading
            ];
            if (this.createStore && this.createStore.loading$) {
                loading.push(this.createStore.loading$);
            }
            var $loading = rxjs.combineLatest(loading);
            this.subs.push($loading.subscribe(function (loadings) {
                if (!loadings || !loadings.length) {
                    _this.loading = false;
                    return;
                }
                var loading = false;
                loadings.forEach(function (value) {
                    loading = loading || value;
                });
                _this.loading = loading;
            }));
        };
        return RecordThreadComponent;
    }());
    RecordThreadComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-record-thread',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n\n<div class=\"record-thread {{(config && config.klass) || ''}}\">\n    <div *ngIf=\"!loading && !records && !records.length\"\n         class=\"d-flex record-thread-no-data justify-content-center h3\">\n        <scrm-label labelKey=\"LBL_NO_DATA\"></scrm-label>\n    </div>\n\n    <div *ngIf=\"loading\" class=\"d-flex record-thread-loading justify-content-center\">\n        <scrm-loading-spinner [overlay]=\"true\"></scrm-loading-spinner>\n    </div>\n\n\n    <div #list\n         *ngIf=\"records && records.length\"\n         [ngStyle]=\"{'max-height.px': maxHeight, 'overflow-y': 'auto'}\"\n         class=\"record-thread-list\">\n\n        <div *ngIf=\"direction === 'asc' && !allLoaded()\"\n             class=\"record-thread-load-more d-flex justify-content-center flex-grow-1\">\n            <scrm-button [config]=\"getLoadMoreButton()\"></scrm-button>\n        </div>\n\n\n        <div #item *ngFor=\"let record of records\">\n            <scrm-record-thread-item [config]=\"buildItem(record, item)\"></scrm-record-thread-item>\n        </div>\n\n\n        <div *ngIf=\"direction === 'desc' && !allLoaded()\"\n             class=\"record-thread-load-more d-flex justify-content-center flex-grow-1\">\n            <scrm-button [config]=\"getLoadMoreButton()\"></scrm-button>\n        </div>\n\n    </div>\n\n    <ng-container *ngIf=\"config.create && createStore\">\n\n        <div *ngIf=\"!loading\"\n             class=\"d-flex flex-column record-thread-create-container\">\n\n            <div class=\"flex-grow-1\">\n                <scrm-record-thread-item [config]=\"buildCreateItem()\"></scrm-record-thread-item>\n            </div>\n\n            <div class=\"flex-grow-1 d-flex justify-content-start pt-1 record-thread-create-buttons\">\n                <scrm-button [config]=\"getCreateButton()\"></scrm-button>\n            </div>\n\n        </div>\n\n    </ng-container>\n\n\n</div>\n"
                },] }
    ];
    RecordThreadComponent.ctorParameters = function () { return [
        { type: RecordThreadStoreFactory },
        { type: RecordThreadItemStoreFactory },
        { type: RecordManager },
        { type: MessageService }
    ]; };
    RecordThreadComponent.propDecorators = {
        config: [{ type: i0.Input }],
        listContainer: [{ type: i0.ViewChild, args: ['list',] }]
    };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var RecordThreadItemComponent = /** @class */ (function () {
        function RecordThreadItemComponent() {
            this.collapsed = false;
            this.collapsible = false;
            this.collapseLimit = 300;
            this.dynamicClass = '';
            this.subs = [];
        }
        RecordThreadItemComponent.prototype.ngOnInit = function () {
            this.initDynamicClass();
        };
        RecordThreadItemComponent.prototype.ngOnDestroy = function () {
            this.subs.forEach(function (sub) { return sub.unsubscribe(); });
        };
        RecordThreadItemComponent.prototype.ngAfterViewInit = function () {
            if (!this.config || !this.config.collapsible) {
                return;
            }
            var collapseLimit = this.config.collapseLimit || this.collapseLimit;
            var height = this.bodyEl.nativeElement.offsetHeight;
            if (height > collapseLimit) {
                this.collapsible = true;
                this.collapsed = true;
            }
        };
        /**
         *
         * Build layout data source according to received configuration
         * @param {object} layout: FieldFlexboxRow[]
         * @returns {object} RecordFlexboxConfig
         */
        RecordThreadItemComponent.prototype.buildConfig = function (layout) {
            return {
                record$: this.config.store.stagingRecord$,
                mode$: this.config.store.mode$,
                layout$: rxjs.of(layout).pipe(operators.shareReplay(1)),
                inputClass: Object.assign(Object.assign({}, (this.config.inputClass || {})), { 'form-control form-control-sm': true }),
                buttonClass: this.config.buttonClass || '',
                labelClass: this.config.labelClass || {},
                rowClass: this.config.rowClass || {},
                colClass: this.config.colClass || {},
            };
        };
        RecordThreadItemComponent.prototype.getCollapseButton = function () {
            var _this = this;
            return {
                klass: 'collapse-button btn btn-link btn-sm',
                labelKey: this.collapsed ? 'LBL_SHOW_MORE' : 'LBL_SHOW_LESS',
                onClick: function () {
                    _this.collapsed = !_this.collapsed;
                    if (_this.collapsed) {
                        _this.config && _this.config.collapsed();
                    }
                    else {
                        _this.config && _this.config.expanded();
                    }
                }
            };
        };
        RecordThreadItemComponent.prototype.initDynamicClass = function () {
            var _this = this;
            if (!this.config || !this.config.dynamicClass || !this.config.dynamicClass.length) {
                return;
            }
            this.subs.push(this.config.store.stagingRecord$.subscribe(function (record) {
                var klasses = [];
                if (!record || !record.fields || !Object.keys(record.fields).length) {
                    return;
                }
                _this.config.dynamicClass.forEach(function (fieldKey) {
                    if (!fieldKey) {
                        return;
                    }
                    if (!record.fields[fieldKey] && !record.attributes[fieldKey]) {
                        return;
                    }
                    var prefix = fieldKey + '-';
                    var values = [];
                    if (!record.fields[fieldKey]) {
                        if (Array.isArray(record.attributes[fieldKey])) {
                            values = values.concat(record.attributes[fieldKey]);
                        }
                        else if (typeof record.attributes[fieldKey] !== 'object') {
                            values.push(record.attributes[fieldKey]);
                        }
                    }
                    else {
                        if (record.fields[fieldKey].value) {
                            values.push(record.fields[fieldKey].value);
                        }
                        if (record.fields[fieldKey].valueList && record.fields[fieldKey].valueList.length) {
                            values = values.concat(record.fields[fieldKey].valueList);
                        }
                    }
                    if (!values || !values.length) {
                        return;
                    }
                    var klass = prefix + values.join(' ' + prefix);
                    klasses.push(klass);
                });
                _this.dynamicClass = klasses.join(' ');
            }));
        };
        return RecordThreadItemComponent;
    }());
    RecordThreadItemComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-record-thread-item',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n\n<div *ngIf=\"config\"\n     class=\"d-flex flex-column record-thread-item {{(config && config.klass) || ''}} {{dynamicClass}}\">\n    <div class=\"record-thread-item-header flex-grow-1\">\n\n        <ng-container *ngIf=\"config.metadata && config.metadata.headerLayout\">\n\n            <scrm-record-flexbox [config]=\"buildConfig(config.metadata.headerLayout)\"></scrm-record-flexbox>\n        </ng-container>\n\n    </div>\n    <div #body\n         [class.collapsed]=\"collapsible && collapsed\"\n         [class.expanded]=\"collapsible && !collapsed\"\n         class=\"record-thread-item-body flex-grow-1\">\n\n        <ng-container *ngIf=\"config.metadata && config.metadata.bodyLayout\">\n            <scrm-record-flexbox [config]=\"buildConfig(config.metadata.bodyLayout)\"></scrm-record-flexbox>\n        </ng-container>\n\n        <div *ngIf=\"collapsible && collapsed\" class=\"fadeout\"></div>\n\n    </div>\n\n    <div *ngIf=\"collapsible\" class=\"record-thread-item-collapse d-flex justify-content-center flex-grow-1\">\n        <scrm-button [config]=\"getCollapseButton()\"></scrm-button>\n    </div>\n</div>\n"
                },] }
    ];
    RecordThreadItemComponent.propDecorators = {
        config: [{ type: i0.Input }],
        bodyEl: [{ type: i0.ViewChild, args: ['body',] }]
    };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var RecordThreadItemModule = /** @class */ (function () {
        function RecordThreadItemModule() {
        }
        return RecordThreadItemModule;
    }());
    RecordThreadItemModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [RecordThreadItemComponent],
                    exports: [
                        RecordThreadItemComponent
                    ],
                    imports: [
                        common.CommonModule,
                        ButtonModule,
                        PanelModule,
                        FieldGridModule,
                        DropdownButtonModule,
                        LabelModule,
                        RecordGridModule,
                        FieldLayoutModule,
                        RecordFlexboxModule,
                    ]
                },] }
    ];

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var RecordThreadModule = /** @class */ (function () {
        function RecordThreadModule() {
        }
        return RecordThreadModule;
    }());
    RecordThreadModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [RecordThreadComponent],
                    exports: [
                        RecordThreadComponent
                    ],
                    imports: [
                        common.CommonModule,
                        ButtonModule,
                        PanelModule,
                        FieldGridModule,
                        DropdownButtonModule,
                        LabelModule,
                        RecordGridModule,
                        ButtonModule,
                        RecordThreadItemModule,
                        LoadingSpinnerModule
                    ]
                },] }
    ];

    var ɵ0$1 = {};
    var initialState$2 = {
        module: '',
        query: {},
        statistic: {
            id: '',
            data: ɵ0$1
        },
        loading: false
    };
    var SeriesStatisticsStore = /** @class */ (function (_super) {
        __extends(SeriesStatisticsStore, _super);
        function SeriesStatisticsStore(fetchGQL) {
            var _this = _super.call(this, fetchGQL) || this;
            _this.fetchGQL = fetchGQL;
            _this.cache$ = null;
            _this.internalState = i5.deepClone(initialState$2);
            _this.store = new rxjs.BehaviorSubject(_this.internalState);
            _this.state$ = _this.store.asObservable();
            _this.statistic$ = _this.state$.pipe(operators.map(function (state) { return state.statistic; }), operators.distinctUntilChanged());
            return _this;
        }
        /**
         * Update the state
         *
         * @param {object} state to set
         */
        SeriesStatisticsStore.prototype.updateState = function (state) {
            _super.prototype.updateState.call(this, state);
        };
        return SeriesStatisticsStore;
    }(StatisticsStore));
    SeriesStatisticsStore.decorators = [
        { type: i0.Injectable }
    ];
    SeriesStatisticsStore.ctorParameters = function () { return [
        { type: StatisticsFetchGQL }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var SeriesTraverser = /** @class */ (function () {
        function SeriesTraverser() {
        }
        SeriesTraverser.prototype.traverse = function (result, visitor, options) {
            if (result.singleSeries) {
                result.singleSeries.forEach(function (item) {
                    visitor.visit(item, options);
                });
            }
            if (result.multiSeries) {
                result.multiSeries.forEach(function (series) {
                    series.series.forEach(function (item) {
                        visitor.visit(item, options);
                    });
                });
            }
        };
        return SeriesTraverser;
    }());
    SeriesTraverser.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function SeriesTraverser_Factory() { return new SeriesTraverser(); }, token: SeriesTraverser, providedIn: "root" });
    SeriesTraverser.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var CurrencyUnitConverter = /** @class */ (function () {
        function CurrencyUnitConverter(currencyService, preferences) {
            this.currencyService = currencyService;
            this.preferences = preferences;
        }
        CurrencyUnitConverter.prototype.toUserFormat = function (value, options) {
            if (options === void 0) { options = null; }
            var numberValue = parseFloat(value);
            if (!isFinite(numberValue)) {
                return value;
            }
            var userCurrency = this.currencyService.getUserCurrency();
            return this.currencyService.baseToCurrency(userCurrency.id, numberValue).toString();
        };
        CurrencyUnitConverter.prototype.toInternalFormat = function (value) {
            var numberValue = parseFloat(value);
            if (!isFinite(numberValue)) {
                return value;
            }
            var userCurrency = this.currencyService.getUserCurrency();
            return this.currencyService.currencyToBase(userCurrency.id, numberValue).toString();
        };
        return CurrencyUnitConverter;
    }());
    CurrencyUnitConverter.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function CurrencyUnitConverter_Factory() { return new CurrencyUnitConverter(i0__namespace.ɵɵinject(CurrencyService), i0__namespace.ɵɵinject(UserPreferenceStore)); }, token: CurrencyUnitConverter, providedIn: "root" });
    CurrencyUnitConverter.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    CurrencyUnitConverter.ctorParameters = function () { return [
        { type: CurrencyService },
        { type: UserPreferenceStore }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var DataTypeUnitConverter = /** @class */ (function () {
        function DataTypeUnitConverter(currencyUnitConverter) {
            this.currencyUnitConverter = currencyUnitConverter;
            this.map = {};
            this.addUnitConverter('currency', currencyUnitConverter);
        }
        DataTypeUnitConverter.prototype.addUnitConverter = function (unitType, unitConverter) {
            this.map[unitType] = unitConverter;
        };
        DataTypeUnitConverter.prototype.toUserFormat = function (dataType, value, options) {
            if (!dataType) {
                return value;
            }
            var formatter = this.map[dataType];
            if (!formatter) {
                return value;
            }
            return formatter.toUserFormat(value, options);
        };
        DataTypeUnitConverter.prototype.toInternalFormat = function (dataType, value) {
            if (!dataType) {
                return value;
            }
            var formatter = this.map[dataType];
            if (!formatter) {
                return value;
            }
            return formatter.toInternalFormat(value);
        };
        return DataTypeUnitConverter;
    }());
    DataTypeUnitConverter.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function DataTypeUnitConverter_Factory() { return new DataTypeUnitConverter(i0__namespace.ɵɵinject(CurrencyUnitConverter)); }, token: DataTypeUnitConverter, providedIn: "root" });
    DataTypeUnitConverter.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    DataTypeUnitConverter.ctorParameters = function () { return [
        { type: CurrencyUnitConverter }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var DataTypeSeriesMapper = /** @class */ (function () {
        function DataTypeSeriesMapper(converter) {
            this.converter = converter;
        }
        DataTypeSeriesMapper.prototype.visit = function (item, options) {
            var _a, _b;
            var dataType = (_a = options === null || options === void 0 ? void 0 : options.dataType) !== null && _a !== void 0 ? _a : null;
            var direction = (_b = options === null || options === void 0 ? void 0 : options.direction) !== null && _b !== void 0 ? _b : 'user-unit';
            if (!dataType) {
                return;
            }
            var numberValue = parseFloat(item.value.toString());
            if (!isFinite(numberValue)) {
                return;
            }
            if (direction === 'user-unit') {
                item.value = this.converter.toUserFormat(dataType, numberValue.toString());
                return;
            }
            item.value = this.converter.toInternalFormat(dataType, numberValue.toString());
        };
        return DataTypeSeriesMapper;
    }());
    DataTypeSeriesMapper.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function DataTypeSeriesMapper_Factory() { return new DataTypeSeriesMapper(i0__namespace.ɵɵinject(DataTypeUnitConverter)); }, token: DataTypeSeriesMapper, providedIn: "root" });
    DataTypeSeriesMapper.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    DataTypeSeriesMapper.ctorParameters = function () { return [
        { type: DataTypeUnitConverter }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var SeriesMapper = /** @class */ (function () {
        function SeriesMapper(traverser, dataTypeMapper) {
            this.traverser = traverser;
            this.dataTypeMapper = dataTypeMapper;
            this.registry = {};
            this.addMapper('data-type-unit-converter', dataTypeMapper);
        }
        SeriesMapper.prototype.addMapper = function (unitType, mapper) {
            this.registry[unitType] = mapper;
        };
        SeriesMapper.prototype.map = function (result, mapperType, options) {
            var _a;
            var mapper = (_a = this === null || this === void 0 ? void 0 : this.registry[mapperType]) !== null && _a !== void 0 ? _a : null;
            if (!mapper) {
                return;
            }
            this.traverser.traverse(result, mapper, options);
        };
        return SeriesMapper;
    }());
    SeriesMapper.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function SeriesMapper_Factory() { return new SeriesMapper(i0__namespace.ɵɵinject(SeriesTraverser), i0__namespace.ɵɵinject(DataTypeSeriesMapper)); }, token: SeriesMapper, providedIn: "root" });
    SeriesMapper.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    SeriesMapper.ctorParameters = function () { return [
        { type: SeriesTraverser },
        { type: DataTypeSeriesMapper }
    ]; };

    var ɵ0 = {};
    var initialState$1 = {
        module: '',
        query: {},
        statistic: {
            id: '',
            data: ɵ0
        },
        loading: false
    };
    var ChartDataStore = /** @class */ (function (_super) {
        __extends(ChartDataStore, _super);
        function ChartDataStore(fetchGQL, formatter, seriesMapper) {
            var _this = _super.call(this, fetchGQL) || this;
            _this.fetchGQL = fetchGQL;
            _this.formatter = formatter;
            _this.seriesMapper = seriesMapper;
            _this.internalState = i5.deepClone(initialState$1);
            _this.store = new rxjs.BehaviorSubject(_this.internalState);
            _this.defaultOptions = {};
            _this.state$ = _this.store.asObservable();
            _this.statistic$ = _this.state$.pipe(operators.map(function (state) { return state.statistic; }), operators.distinctUntilChanged());
            _this.loading$ = _this.state$.pipe(operators.map(function (state) { return state.loading; }), operators.distinctUntilChanged());
            return _this;
        }
        ChartDataStore.prototype.setDefaultOptions = function (chartOptions) {
            this.defaultOptions = chartOptions;
        };
        ChartDataStore.prototype.getDataSource = function () {
            return this.internalState.dataSource;
        };
        ChartDataStore.prototype.addNewState = function (statistic) {
            if (!statistic.metadata || !statistic.metadata.dataType) {
                return;
            }
            this.injectDefaultValues(statistic);
            var dataSource = this.buildCharDataSource(statistic);
            this.updateState(Object.assign(Object.assign({}, this.internalState), { statistic: statistic, dataSource: dataSource, loading: false }));
        };
        ChartDataStore.prototype.injectDefaultValues = function (statistic) {
            var _this = this;
            if (!statistic.metadata.chartOptions) {
                statistic.metadata.chartOptions = i5.deepClone(this.defaultOptions);
                return;
            }
            Object.keys(this.defaultOptions).forEach(function (optionKey) {
                if (!(optionKey in statistic.metadata.chartOptions)) {
                    statistic.metadata.chartOptions[optionKey] = _this.defaultOptions[optionKey];
                }
            });
        };
        ChartDataStore.prototype.buildCharDataSource = function (statistic) {
            var _this = this;
            var dataType = statistic.metadata.dataType || '';
            var formatOptions = null;
            var digits = (statistic.metadata && statistic.metadata.digits) || null;
            if (digits !== null) {
                formatOptions = {
                    digits: digits
                };
            }
            return {
                options: statistic.metadata.chartOptions || {},
                getResults: function () { return rxjs.of(_this.buildSeriesResult(statistic)).pipe(operators.shareReplay(1)); },
                tickFormatting: function (value) { return _this.formatter.toUserFormat(dataType, value, formatOptions); },
                tooltipFormatting: function (value) { return _this.formatter.toUserFormat(dataType, value, formatOptions); }
            };
        };
        ChartDataStore.prototype.buildSeriesResult = function (statistic) {
            var dataType = statistic.metadata.dataType || '';
            var result = {};
            var singleSeries = statistic.data.singleSeries || null;
            if (singleSeries) {
                result.singleSeries = singleSeries;
            }
            var multiSeries = statistic.data.multiSeries || null;
            if (multiSeries) {
                result.multiSeries = multiSeries;
            }
            this.seriesMapper.map(result, 'data-type-unit-converter', { dataType: dataType });
            return result;
        };
        /**
         * Update the state
         *
         * @param {object} state to set
         */
        ChartDataStore.prototype.updateState = function (state) {
            _super.prototype.updateState.call(this, state);
        };
        return ChartDataStore;
    }(SeriesStatisticsStore));
    ChartDataStore.decorators = [
        { type: i0.Injectable }
    ];
    ChartDataStore.ctorParameters = function () { return [
        { type: StatisticsFetchGQL },
        { type: DataTypeFormatter },
        { type: SeriesMapper }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var ChartDataStoreFactory = /** @class */ (function () {
        function ChartDataStoreFactory(fetchGQL, formatter, seriesMapper) {
            this.fetchGQL = fetchGQL;
            this.formatter = formatter;
            this.seriesMapper = seriesMapper;
        }
        ChartDataStoreFactory.prototype.create = function () {
            return new ChartDataStore(this.fetchGQL, this.formatter, this.seriesMapper);
        };
        return ChartDataStoreFactory;
    }());
    ChartDataStoreFactory.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function ChartDataStoreFactory_Factory() { return new ChartDataStoreFactory(i0__namespace.ɵɵinject(StatisticsFetchGQL), i0__namespace.ɵɵinject(DataTypeFormatter), i0__namespace.ɵɵinject(SeriesMapper)); }, token: ChartDataStoreFactory, providedIn: "root" });
    ChartDataStoreFactory.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root',
                },] }
    ];
    ChartDataStoreFactory.ctorParameters = function () { return [
        { type: StatisticsFetchGQL },
        { type: DataTypeFormatter },
        { type: SeriesMapper }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var BaseWidgetComponent = /** @class */ (function () {
        function BaseWidgetComponent() {
        }
        return BaseWidgetComponent;
    }());
    BaseWidgetComponent.decorators = [
        { type: i0.Component, args: [{ template: '' },] }
    ];
    BaseWidgetComponent.propDecorators = {
        config: [{ type: i0.Input, args: ['config',] }],
        context: [{ type: i0.Input, args: ['context',] }],
        context$: [{ type: i0.Input, args: ['context$',] }]
    };

    var ChartSidebarWidgetComponent = /** @class */ (function (_super) {
        __extends(ChartSidebarWidgetComponent, _super);
        function ChartSidebarWidgetComponent(language, factory) {
            var _this = _super.call(this) || this;
            _this.language = language;
            _this.factory = factory;
            _this.charts = {};
            _this.titleLabelKey = 'LBL_INSIGHTS';
            _this.title = '';
            _this.messageLabelKey = 'LBL_CHART_NOT_FOUND';
            _this.selectedChart = '';
            _this.chartType = '';
            _this.loading = true;
            _this.subs = [];
            return _this;
        }
        ChartSidebarWidgetComponent.prototype.ngOnInit = function () {
            var _this = this;
            this.appStrings$ = this.language.appStrings$;
            if (this.validateConfig() === false) {
                return;
            }
            if (this.context$) {
                this.subs.push(this.context$.subscribe(function (context) {
                    _this.context = context;
                    Object.keys(_this.charts).forEach(function (key) {
                        var chart = _this.charts[key];
                        chart.store.context = context;
                    });
                }));
            }
            var options = this.config.options;
            var charts = options.charts;
            if (options.defaultChart) {
                this.selectedChart = options.defaultChart || '';
            }
            this.setupCharts(charts);
            this.setHeaderTitle(options);
            this.reloadSelectedChart();
            this.setupLoading();
            this.setupVM();
            this.setupReload();
        };
        ChartSidebarWidgetComponent.prototype.ngOnDestroy = function () {
            this.subs.forEach(function (sub) { return sub.unsubscribe(); });
        };
        Object.defineProperty(ChartSidebarWidgetComponent.prototype, "configuredCharts", {
            get: function () {
                return this.chartOptions.charts || [];
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ChartSidebarWidgetComponent.prototype, "chartOptions", {
            get: function () {
                return this.config.options || {};
            },
            enumerable: false,
            configurable: true
        });
        ChartSidebarWidgetComponent.prototype.isConfigured = function () {
            return !!(this.config.options.charts && this.config.options.charts.length);
        };
        ChartSidebarWidgetComponent.prototype.getLabelKey = function (stat) {
            var labelKey = stat.statistic.metadata && stat.statistic.metadata.labelKey;
            if (labelKey) {
                return labelKey;
            }
            return this.charts[stat.query.key].labelKey;
        };
        ChartSidebarWidgetComponent.prototype.getKey = function (chart) {
            return chart.chartKey || chart.statisticsType || '';
        };
        ChartSidebarWidgetComponent.prototype.validateConfig = function () {
            if (!this.context || !this.context.module) {
                this.messageLabelKey = 'LBL_BAD_CONFIG_BAD_CONTEXT';
                return false;
            }
            if (!this.config) {
                this.messageLabelKey = 'LBL_BAD_CONFIG_NO_CONFIG';
                return false;
            }
            var options = this.config.options;
            if (!options || !options.charts || !options.charts.length) {
                this.messageLabelKey = 'LBL_BAD_CONFIG_NO_STATISTICS_KEY';
                return false;
            }
            return true;
        };
        ChartSidebarWidgetComponent.prototype.setupCharts = function (charts) {
            var _this = this;
            this.selectedChart = '';
            charts.forEach(function (chart) {
                var key = _this.getKey(chart);
                if (!key) {
                    return;
                }
                if (!_this.selectedChart) {
                    _this.selectedChart = key || '';
                    _this.chartType = chart.chartType;
                }
                _this.buildChartInfo(key, chart);
                _this.initChartStore(key, chart);
            });
        };
        ChartSidebarWidgetComponent.prototype.buildChartInfo = function (key, chart) {
            this.charts[key] = {
                key: key,
                labelKey: chart.labelKey || '',
                chartType: chart.chartType,
                statisticsType: chart.statisticsType,
                store: this.factory.create(),
                reload: true
            };
        };
        ChartSidebarWidgetComponent.prototype.initChartStore = function (key, chart) {
            this.charts[key].store.init(this.context.module, {
                key: chart.statisticsType,
                context: Object.assign({}, this.context)
            }, false);
            this.charts[key].store.setDefaultOptions(chart.chartOptions);
        };
        ChartSidebarWidgetComponent.prototype.setHeaderTitle = function (options) {
            if (this.config.labelKey) {
                this.titleLabelKey = this.config.labelKey;
            }
            if (options.headerTitle) {
                if (!this.charts || !this.charts[this.selectedChart] || !this.charts[this.selectedChart].labelKey) {
                    return;
                }
                this.titleLabelKey = this.charts[this.selectedChart].labelKey;
            }
            this.title = this.language.getFieldLabel(this.titleLabelKey);
        };
        ChartSidebarWidgetComponent.prototype.onChartSelect = function () {
            this.dataSource = null;
            this.chartType = this.charts[this.selectedChart].chartType;
            this.reloadSelectedChart(false);
        };
        ChartSidebarWidgetComponent.prototype.setupVM = function () {
            var _this = this;
            var statistics$ = [];
            Object.keys(this.charts).forEach(function (key) { return statistics$.push(_this.charts[key].store.state$); });
            this.vm$ = rxjs.combineLatest([rxjs.combineLatest(statistics$), this.language.appStrings$]).pipe(operators.map(function (_d) {
                var _e = __read(_d, 2), statistics = _e[0], appStrings = _e[1];
                var statsMap = _this.mapChartData(statistics);
                return {
                    statistics: statsMap,
                    appStrings: appStrings
                };
            }));
        };
        ChartSidebarWidgetComponent.prototype.mapChartData = function (statistics) {
            var _this = this;
            var statsMap = {};
            statistics.forEach(function (statistic) {
                if (!statistic.query.key) {
                    return;
                }
                statsMap[statistic.query.key] = statistic;
                _this.charts[statistic.query.key].labelKey = _this.getLabelKey(statistic);
            });
            return statsMap;
        };
        ChartSidebarWidgetComponent.prototype.setupReload = function () {
            var _this = this;
            if (!this.config.reload$) {
                return;
            }
            this.subs.push(this.config.reload$.subscribe(function () {
                if (_this.loading === true) {
                    return;
                }
                _this.loading = true;
                Object.keys(_this.charts).forEach(function (chartKey) {
                    _this.charts[chartKey].reload = true;
                });
                _this.reloadSelectedChart();
            }));
        };
        ChartSidebarWidgetComponent.prototype.setupLoading = function () {
            var _this = this;
            var loadings$ = [];
            Object.keys(this.charts).forEach(function (key) { return loadings$.push(_this.charts[key].store.loading$); });
            this.loading$ = rxjs.combineLatest(loadings$).pipe(operators.map(function (loadings) {
                if (!loadings || loadings.length < 1) {
                    _this.loading = false;
                    return false;
                }
                var loading = false;
                loadings.forEach(function (value) {
                    loading = loading || value;
                });
                _this.loading = loading;
                return loading;
            }));
            this.subs.push(this.loading$.subscribe());
        };
        ChartSidebarWidgetComponent.prototype.reloadSelectedChart = function (useCache) {
            var _this = this;
            if (useCache === void 0) { useCache = false; }
            if (!this.charts || !this.charts[this.selectedChart] || !this.charts[this.selectedChart].store) {
                return;
            }
            useCache = useCache && !this.charts[this.selectedChart].reload;
            this.charts[this.selectedChart].store.load(useCache).pipe(operators.take(1), operators.tap(function () {
                var _a, _b, _c;
                _this.dataSource = (_c = (_b = (_a = _this.charts[_this.selectedChart]) === null || _a === void 0 ? void 0 : _a.store) === null || _b === void 0 ? void 0 : _b.getDataSource()) !== null && _c !== void 0 ? _c : null;
                _this.charts[_this.selectedChart].reload = false;
            })).subscribe();
        };
        return ChartSidebarWidgetComponent;
    }(BaseWidgetComponent));
    ChartSidebarWidgetComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'chart-sidebar-widget',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<scrm-widget-panel [title]=\"this.title\" *ngIf=\"(vm$ | async) as vm\">\n    <div widget-body>\n        <div class=\"widget-background chart-sidebar-widget\">\n            <div class=\"mb-2 ml-1 mr-1\">\n                <div class=\"container-fluid\">\n                    <div class=\"row\" *ngIf=\"isConfigured && chartOptions.toggle\">\n                        <div class=\"col pr-2 pl-2\">\n                            <form class=\"login-form mb-0 mt-2 w-100\">\n\n                                <select (ngModelChange)=\"onChartSelect()\" [(ngModel)]=\"selectedChart\" class=\"m-0 w-100\"\n                                        name=\"chart\">\n                                    <option *ngFor=\"let chart of configuredCharts; index as i\"\n                                            [value]=\"getKey(chart)\">\n                                        {{language.getFieldLabel(chart.labelKey)}}\n                                    </option>\n                                </select>\n                            </form>\n                        </div>\n                    </div>\n\n                    <div class=\"row mt-3 chart-widget\">\n                        <div class=\"col pl-0 pr-0 pb-1 pt-1 d-flex justify-content-center\">\n                            <div class=\"flex-grow-1\">\n                                <ng-container *ngIf=\"selectedChart && !loading\">\n                                    <scrm-chart *ngIf=\"dataSource && chartType\"\n                                                [dataSource]=\"dataSource\"\n                                                [type]=\"chartType\">\n                                    </scrm-chart>\n                                </ng-container>\n                                <div *ngIf=\"loading\" [class.m-5]=\"!dataSource\" class=\"chart-loading\">\n                                    <scrm-loading-spinner [overlay]=\"true\"></scrm-loading-spinner>\n                                </div>\n                                <p *ngIf=\"!loading && (!isConfigured() || !dataSource)\"\n                                   class=\"lead text-center pt-3\">\n                                    {{language.getFieldLabel(this.messageLabelKey)}}\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</scrm-widget-panel>\n"
                },] }
    ];
    ChartSidebarWidgetComponent.ctorParameters = function () { return [
        { type: LanguageStore },
        { type: ChartDataStoreFactory }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var ChartSidebarWidgetModule = /** @class */ (function () {
        function ChartSidebarWidgetModule() {
        }
        return ChartSidebarWidgetModule;
    }());
    ChartSidebarWidgetModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [ChartSidebarWidgetComponent],
                    exports: [ChartSidebarWidgetComponent],
                    imports: [
                        common.CommonModule,
                        WidgetPanelModule,
                        forms.FormsModule,
                        ChartModule,
                        LoadingSpinnerModule
                    ]
                },] }
    ];

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var HistoryTimelineStore = /** @class */ (function () {
        function HistoryTimelineStore(listStoreFactory) {
            this.listStoreFactory = listStoreFactory;
            this.recordList = listStoreFactory.create();
        }
        HistoryTimelineStore.prototype.clear = function () {
            this.recordList.clear();
            this.recordList = null;
        };
        HistoryTimelineStore.prototype.clearAuthBased = function () {
            this.recordList.clearAuthBased();
        };
        /**
         * Initial list records load if not cached and update state.
         *
         * @param {ViewContext} context of parent
         * @description initialize the Record List Store
         * returns {void}
         */
        HistoryTimelineStore.prototype.init = function (context) {
            this.recordList.init('history', false, 'list_max_entries_per_subpanel');
            this.initViewContext(context);
        };
        /**
         * Load / reload records using current pagination and criteria
         *
         * @param {boolean} useCache if to use cache
         * @returns {object} Observable<RecordList>
         */
        HistoryTimelineStore.prototype.load = function (useCache) {
            if (useCache === void 0) { useCache = true; }
            return this.recordList.load(useCache);
        };
        /**
         * Init search criteria
         *
         * @param {number} offset of the recordset
         * @param {number} limit of the recordset
         * @description initialize the search module/criteria(offset/limit) for the record set
         */
        HistoryTimelineStore.prototype.initSearchCriteria = function (offset, limit) {
            this.recordList.criteria = {
                preset: {
                    type: 'history-timeline',
                    params: {
                        parentModule: this.viewContext.module,
                        parentId: this.viewContext.id,
                        offset: offset,
                        limit: limit
                    }
                }
            };
        };
        HistoryTimelineStore.prototype.initViewContext = function (viewContext) {
            this.viewContext = viewContext;
        };
        return HistoryTimelineStore;
    }());
    HistoryTimelineStore.decorators = [
        { type: i0.Injectable }
    ];
    HistoryTimelineStore.ctorParameters = function () { return [
        { type: RecordListStoreFactory }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var HistoryTimelineStoreFactory = /** @class */ (function () {
        function HistoryTimelineStoreFactory(listStoreFactory) {
            this.listStoreFactory = listStoreFactory;
        }
        HistoryTimelineStoreFactory.prototype.create = function () {
            return new HistoryTimelineStore(this.listStoreFactory);
        };
        return HistoryTimelineStoreFactory;
    }());
    HistoryTimelineStoreFactory.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function HistoryTimelineStoreFactory_Factory() { return new HistoryTimelineStoreFactory(i0__namespace.ɵɵinject(RecordListStoreFactory)); }, token: HistoryTimelineStoreFactory, providedIn: "root" });
    HistoryTimelineStoreFactory.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root',
                },] }
    ];
    HistoryTimelineStoreFactory.ctorParameters = function () { return [
        { type: RecordListStoreFactory }
    ]; };

    var HistoryTimelineAdapter = /** @class */ (function () {
        function HistoryTimelineAdapter(historyTimelineStoreFactory) {
            this.historyTimelineStoreFactory = historyTimelineStoreFactory;
            this.loading = false;
            this.cache = [];
            this.dataStream = new rxjs.BehaviorSubject(this.cache);
            this.dataStream$ = this.dataStream.asObservable();
            this.defaultPageSize = 10;
        }
        /**
         * @returns {void}
         * @param {ViewContext} context - parent module context
         * @description adapter init function to initialize timeline store
         */
        HistoryTimelineAdapter.prototype.init = function (context) {
            this.store = this.historyTimelineStoreFactory.create();
            this.store.init(context);
        };
        /**
         * @returns {Observable<HistoryTimelineEntry[]>} return observable array of timeline entries
         * @description retrieve next set of records starting from the current offset
         * represented by the field this.cache.length
         * @param {boolean} reload timeline
         */
        HistoryTimelineAdapter.prototype.fetchTimelineEntries = function (reload) {
            var _this = this;
            if (this.loading === true) {
                return;
            }
            if (reload === true) {
                this.cache.length = 0;
            }
            this.store.initSearchCriteria(this.cache.length, this.defaultPageSize);
            this.loading = true;
            this.store.load(false).pipe(operators.take(1)).subscribe(function (value) {
                _this.loading = false;
                var records = value.records;
                if (!i5.emptyObject(records)) {
                    Object.keys(records).forEach(function (key) {
                        _this.cache.push(_this.buildTimelineEntry(records[key]));
                    });
                }
                _this.dataStream.next(__spreadArray([], __read(_this.cache)));
            });
            return this.dataStream$;
        };
        /**
         * @returns {string} color code
         * @param {string} activity the valid activity types
         * @description {returns the mapped background color code defined for an activity}
         */
        HistoryTimelineAdapter.prototype.getActivityGridColor = function (activity) {
            var colorMap = {
                calls: 'yellow',
                tasks: 'green',
                meetings: 'blue',
                notes: 'orange',
                audit: 'purple',
                history: 'purple'
            };
            return colorMap[activity] || 'yellow';
        };
        /**
         * @returns {HistoryTimelineEntry} Timeline Entry
         * @param {Record} record object
         * @description {returns the mapped record to timeline entry}
         */
        HistoryTimelineAdapter.prototype.buildTimelineEntry = function (record) {
            var timelineModule = record.module;
            var moduleIcon = record.attributes.module_name;
            if (timelineModule === 'audit') {
                moduleIcon = 'History';
            }
            var gridColor = this.getActivityGridColor(record.module);
            var timelineEntry = {
                module: timelineModule,
                icon: moduleIcon,
                color: gridColor,
                title: {
                    type: 'varchar',
                    value: record.attributes.name
                },
                user: {
                    type: 'varchar',
                    value: record.attributes.assigned_user_name.user_name,
                },
                date: {
                    type: 'datetime',
                    value: record.attributes.date_end,
                },
                record: record
            };
            if (timelineModule === 'audit') {
                timelineEntry.description = {
                    type: 'html',
                    value: record.attributes.description
                };
            }
            return timelineEntry;
        };
        return HistoryTimelineAdapter;
    }());
    HistoryTimelineAdapter.decorators = [
        { type: i0.Injectable }
    ];
    HistoryTimelineAdapter.ctorParameters = function () { return [
        { type: HistoryTimelineStoreFactory }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var HistoryTimelineAdapterFactory = /** @class */ (function () {
        function HistoryTimelineAdapterFactory(historyTimelineStoreFactory) {
            this.historyTimelineStoreFactory = historyTimelineStoreFactory;
        }
        HistoryTimelineAdapterFactory.prototype.create = function () {
            return new HistoryTimelineAdapter(this.historyTimelineStoreFactory);
        };
        return HistoryTimelineAdapterFactory;
    }());
    HistoryTimelineAdapterFactory.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function HistoryTimelineAdapterFactory_Factory() { return new HistoryTimelineAdapterFactory(i0__namespace.ɵɵinject(HistoryTimelineStoreFactory)); }, token: HistoryTimelineAdapterFactory, providedIn: "root" });
    HistoryTimelineAdapterFactory.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root',
                },] }
    ];
    HistoryTimelineAdapterFactory.ctorParameters = function () { return [
        { type: HistoryTimelineStoreFactory }
    ]; };

    var HistorySidebarWidgetComponent = /** @class */ (function (_super) {
        __extends(HistorySidebarWidgetComponent, _super);
        function HistorySidebarWidgetComponent(historyTimelineAdapterFactory, languageStore) {
            var _this = _super.call(this) || this;
            _this.historyTimelineAdapterFactory = historyTimelineAdapterFactory;
            _this.languageStore = languageStore;
            _this.subscription = new rxjs.Subscription();
            return _this;
        }
        HistorySidebarWidgetComponent.prototype.ngOnInit = function () {
            this.adapter = this.historyTimelineAdapterFactory.create();
            this.adapter.init(this.context);
        };
        HistorySidebarWidgetComponent.prototype.ngAfterViewInit = function () {
            var _this = this;
            // watch out for the data list updates on the related subpanels activities and history
            // reload request will be ignored;
            // if they are notified multiple times within the dueTime/delay 500 ms
            var reloadMap = [];
            reloadMap.push(this.config.reload$);
            reloadMap.push(this.config.subpanelReload$);
            var subpanelsToWatch = ['history', 'activities'];
            var reload$ = rxjs.combineLatest(reloadMap).pipe(operators.map(function (_a) {
                var _b = __read(_a, 2), reload = _b[0], subpanelReload = _b[1];
                if (reload) {
                    return reload;
                }
                if (!subpanelReload) {
                    return false;
                }
                return subpanelsToWatch.some(function (subpanelKey) { return !!subpanelReload[subpanelKey]; });
            }));
            var debouncedReload = reload$.pipe(operators.debounce(function () { return rxjs.timer(1000); }));
            this.subscription.add(debouncedReload.subscribe(function (reload) {
                if (reload) {
                    _this.adapter.fetchTimelineEntries(true);
                }
            }));
        };
        HistorySidebarWidgetComponent.prototype.ngOnDestroy = function () {
            this.subscription.unsubscribe();
        };
        /**
         * @returns {string} Timeline Entry
         * @description {fetch language label for the timeline widget header}
         */
        HistorySidebarWidgetComponent.prototype.getHeaderLabel = function () {
            return this.languageStore.getFieldLabel('LBL_QUICK_HISTORY');
        };
        /**
         * @returns {void} Timeline Entry
         * @description {checks if end of the scroll is reached to make a backend call for next set of timeline entries}
         */
        HistorySidebarWidgetComponent.prototype.onScroll = function () {
            if (!this.adapter) {
                return;
            }
            var scrollOffset = this.virtualScroll.measureScrollOffset('bottom');
            if (lodashEs.floor(scrollOffset) === 0) {
                this.adapter.fetchTimelineEntries(false);
            }
        };
        return HistorySidebarWidgetComponent;
    }(BaseWidgetComponent));
    HistorySidebarWidgetComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-history-timeline-widget',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<scrm-widget-panel [title]=\"getHeaderLabel()\">\n    <div widget-body *ngIf=\"(adapter?.dataStream$| async) as vm\">\n\n        <div class=\"widget-background history-timeline p-2 pt-2\">\n\n            <div *ngIf=\"adapter?.loading\" class=\"d-flex record-thread-loading justify-content-center\">\n                <scrm-loading-spinner [overlay]=\"true\"></scrm-loading-spinner>\n            </div>\n\n            <cdk-virtual-scroll-viewport itemSize=\"100\"\n                                         class=\"history-timeline-viewport\"\n                                         [ngClass]=\"[vm.length <= 0 ? 'history-timeline-viewport-no-data' : 'history-timeline-viewport']\"\n                                         (scroll)=\"onScroll()\">\n\n                <scrm-chart-message-area *ngIf=\"!adapter?.loading && vm.length <= 0\"\n                                         labelKey=\"LBL_NO_DATA\"></scrm-chart-message-area>\n\n                <div *ngFor=\"let entry of vm;\">\n                    <div *ngIf=\"vm.length > 0\"\n                         class=\"d-flex flex-row m-2 history-timeline-entry entry-{{entry.color}}\">\n                        <div class=\"\">\n                            <div class=\"circle\">\n                                <div\n                                    class=\"d-flex justify-content-center align-items-center h-100 history-timeline-image\">\n                                    <scrm-image [image]=\"entry.icon\"></scrm-image>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"\">\n                            <div class=\"d-flex justify-content-center h-100\">\n                                <div class=\"connector mt-3\">\n                                </div>\n                            </div>\n\n                        </div>\n                        <div class=\"flex-grow-1\">\n\n                            <div class=\"card\">\n                                <div class=\"card-body p-1 pr-2 pl-2\">\n                                    <p class=\"card-title text-break history-timeline-entry-title\">\n                                        <scrm-field [type]=\"entry.title.type\"\n                                                    mode=\"list\"\n                                                    [field]=\"entry.title\"\n                                                    [record]=\"entry.record\">\n                                        </scrm-field>\n                                    </p>\n                                    <div *ngIf=\"entry.description\"\n                                         class=\"card-text history-timeline-entry-description\">\n                                        <small class=\"text-break\">\n                                            <scrm-field [type]=\"entry.description.type\"\n                                                        mode=\"detail\"\n                                                        [field]=\"entry.description\"\n                                                        [record]=\"entry.record\">\n                                            </scrm-field>\n                                        </small>\n                                    </div>\n                                    <div class=\"card-text history-timeline-entry-user text-uppercase\">\n                                        <small class=\"text-break\">\n                                            <scrm-field [type]=\"entry.user.type\"\n                                                        mode=\"list\"\n                                                        [field]=\"entry.user\"\n                                                        [record]=\"entry.record\">\n                                            </scrm-field>\n                                        </small>\n                                    </div>\n                                    <div class=\"card-text text-break history-timeline-entry-date\">\n                                        <small class=\"font-italic\">\n                                            <scrm-field [type]=\"entry.date.type\"\n                                                        mode=\"list\"\n                                                        [field]=\"entry.date\"\n                                                        [record]=\"entry.record\"></scrm-field>\n                                        </small>\n                                    </div>\n                                </div>\n                            </div>\n\n                        </div>\n                    </div>\n\n                </div>\n            </cdk-virtual-scroll-viewport>\n        </div>\n    </div>\n</scrm-widget-panel>\n",
                    providers: [HistoryTimelineAdapter]
                },] }
    ];
    HistorySidebarWidgetComponent.ctorParameters = function () { return [
        { type: HistoryTimelineAdapterFactory },
        { type: LanguageStore }
    ]; };
    HistorySidebarWidgetComponent.propDecorators = {
        virtualScroll: [{ type: i0.ViewChild, args: [scrolling.CdkVirtualScrollViewport,] }]
    };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var HistorySidebarWidgetModule = /** @class */ (function () {
        function HistorySidebarWidgetModule() {
        }
        return HistorySidebarWidgetModule;
    }());
    HistorySidebarWidgetModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [HistorySidebarWidgetComponent],
                    exports: [
                        HistorySidebarWidgetComponent
                    ],
                    imports: [
                        common.CommonModule,
                        scrolling.ScrollingModule,
                        ImageModule,
                        FieldModule,
                        WidgetPanelModule,
                        LoadingSpinnerModule,
                        LabelModule,
                        ChartMessageAreaModule
                    ]
                },] }
    ];

    var RecordThreadSidebarWidgetComponent = /** @class */ (function (_super) {
        __extends(RecordThreadSidebarWidgetComponent, _super);
        function RecordThreadSidebarWidgetComponent(language) {
            var _this = _super.call(this) || this;
            _this.language = language;
            _this.subs = [];
            return _this;
        }
        RecordThreadSidebarWidgetComponent.prototype.ngOnInit = function () {
            var _this = this;
            var options = this.config.options || {};
            this.options = options.recordThread || null;
            if (!this.options) {
                return;
            }
            this.initFilters$();
            this.initPresetFields$();
            if (this.context$ && this.context$.subscribe()) {
                this.subs.push(this.context$.subscribe(function (context) {
                    _this.context = context;
                }));
            }
            this.recordThreadConfig = this.getConfig();
        };
        RecordThreadSidebarWidgetComponent.prototype.ngOnDestroy = function () {
            this.subs.forEach(function (sub) { return sub.unsubscribe(); });
        };
        RecordThreadSidebarWidgetComponent.prototype.getHeaderLabel = function () {
            return this.getLabel(this.config.labelKey) || '';
        };
        RecordThreadSidebarWidgetComponent.prototype.getLabel = function (key) {
            var context = this.context || {};
            var module = context.module || '';
            return this.language.getFieldLabel(key, module);
        };
        RecordThreadSidebarWidgetComponent.prototype.getConfig = function () {
            var config = {
                filters$: this.filters$,
                presetFields$: this.presetFields$,
                module: this.options.module,
                klass: this.options.class || '',
                maxListHeight: this.options.maxListHeight || 350,
                direction: this.options.direction || 'asc',
                create: !!this.options.create,
                itemConfig: {
                    collapsible: this.options.item.collapsible || false,
                    collapseLimit: this.options.item.collapseLimit || null,
                    klass: this.options.item.itemClass || '',
                    dynamicClass: this.options.item.dynamicClass || [],
                    metadata: {}
                },
                createConfig: {
                    collapsible: false,
                    metadata: {}
                },
            };
            this.setupItemMetadata(config.itemConfig.metadata, this.options.item.layout);
            this.setupItemMetadata(config.createConfig.metadata, this.options.create.layout);
            return config;
        };
        RecordThreadSidebarWidgetComponent.prototype.setupItemMetadata = function (metadata, config) {
            if (config && config.header) {
                metadata.headerLayout = i5.deepClone(config.header);
            }
            if (config && config.body) {
                metadata.bodyLayout = i5.deepClone(config.body);
            }
        };
        RecordThreadSidebarWidgetComponent.prototype.initFilters$ = function () {
            var _this = this;
            if (!this.options || !this.options.filters || !this.context$) {
                return;
            }
            var parentFilters = this.options.filters.parentFilters || {};
            var context$ = rxjs.of({}).pipe(operators.shareReplay());
            if (Object.keys(parentFilters).length > 0) {
                context$ = this.context$.pipe(operators.filter(function (context) {
                    var record = (context && context.record) || {};
                    return !!(record.attributes && Object.keys(record.attributes).length);
                }));
            }
            this.filters$ = context$.pipe(operators.map(function (context) {
                var filters = { filters: {} };
                _this.initParentFilters(context, filters);
                var staticFilters = _this.options.filters.static || {};
                filters.filters = Object.assign(Object.assign({}, filters.filters), staticFilters);
                if (_this.options.filters.orderBy) {
                    filters.orderBy = _this.options.filters.orderBy;
                }
                if (_this.options.filters.sortOrder) {
                    filters.sortOrder = _this.options.filters.sortOrder;
                }
                return filters;
            }), operators.distinctUntilChanged());
        };
        RecordThreadSidebarWidgetComponent.prototype.initPresetFields$ = function () {
            var _this = this;
            if (!this.options || !this.options.create || !this.options.create.presetFields || !this.context$) {
                return;
            }
            this.presetFields$ = this.context$.pipe(operators.map(function (context) {
                var parentValues = _this.initParentValues(context);
                var staticValues = _this.options.create.presetFields.static || {};
                return Object.assign(Object.assign({}, parentValues), staticValues);
            }), operators.distinctUntilChanged());
        };
        RecordThreadSidebarWidgetComponent.prototype.initParentFilters = function (context, filters) {
            var parentFilters = this.options.filters.parentFilters || {};
            if (!context || !context.record || !parentFilters) {
                return;
            }
            Object.keys(parentFilters).forEach(function (parentField) {
                var field = parentFilters[parentField];
                var value = context.record.attributes[parentField] || '';
                if (!value) {
                    return;
                }
                filters.filters[field] = {
                    field: parentFilters,
                    operator: '=',
                    values: [value],
                };
            });
        };
        RecordThreadSidebarWidgetComponent.prototype.initParentValues = function (context) {
            var parentValues = this.options.create.presetFields.parentValues || {};
            if (!context || !context.record || !parentValues) {
                return;
            }
            var attributes = {};
            Object.keys(parentValues).forEach(function (parentField) {
                var field = parentValues[parentField];
                var value = context.record.attributes[parentField] || '';
                if (!value) {
                    return;
                }
                attributes[field] = value;
            });
            return attributes;
        };
        return RecordThreadSidebarWidgetComponent;
    }(BaseWidgetComponent));
    RecordThreadSidebarWidgetComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-record-thread-sidebar-widget',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<scrm-widget-panel [title]=\"getHeaderLabel()\">\n    <div class=\"record-thread-sidebar-widget\" widget-body>\n\n        <ng-container *ngIf=\"!options\">\n            <div class=\"p-3 widget-message\">\n                <scrm-label labelKey=\"LBL_BAD_CONFIG\"></scrm-label>\n            </div>\n        </ng-container>\n\n        <ng-container *ngIf=\"options\">\n            <scrm-record-thread [config]=\"recordThreadConfig\"></scrm-record-thread>\n        </ng-container>\n\n    </div>\n</scrm-widget-panel>\n"
                },] }
    ];
    RecordThreadSidebarWidgetComponent.ctorParameters = function () { return [
        { type: LanguageStore }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var RecordThreadSidebarWidgetModule = /** @class */ (function () {
        function RecordThreadSidebarWidgetModule() {
        }
        return RecordThreadSidebarWidgetModule;
    }());
    RecordThreadSidebarWidgetModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [RecordThreadSidebarWidgetComponent],
                    exports: [
                        RecordThreadSidebarWidgetComponent
                    ],
                    imports: [
                        common.CommonModule,
                        FieldModule,
                        WidgetPanelModule,
                        LabelModule,
                        RecordThreadModule,
                        RecordThreadItemModule
                    ]
                },] }
    ];

    var StatisticsSidebarWidgetComponent = /** @class */ (function (_super) {
        __extends(StatisticsSidebarWidgetComponent, _super);
        function StatisticsSidebarWidgetComponent(language) {
            var _this = _super.call(this) || this;
            _this.language = language;
            _this.subs = [];
            return _this;
        }
        StatisticsSidebarWidgetComponent.prototype.ngOnInit = function () {
            var _this = this;
            var options = this.config.options || {};
            this.options = options.sidebarStatistic || null;
            if (this.context$) {
                this.subs.push(this.context$.subscribe(function (context) {
                    _this.context = context;
                }));
            }
        };
        StatisticsSidebarWidgetComponent.prototype.ngOnDestroy = function () {
            this.subs.forEach(function (sub) { return sub.unsubscribe(); });
        };
        StatisticsSidebarWidgetComponent.prototype.getHeaderLabel = function () {
            return this.getLabel(this.config.labelKey) || '';
        };
        StatisticsSidebarWidgetComponent.prototype.getLabel = function (key) {
            var context = this.context || {};
            var module = context.module || '';
            return this.language.getFieldLabel(key, module);
        };
        StatisticsSidebarWidgetComponent.prototype.getGridConfig = function () {
            return {
                rowClass: 'statistics-sidebar-widget-row',
                columnClass: 'statistics-sidebar-widget-col',
                layout: this.options,
                widgetConfig: { reload$: this.config.reload$ },
                queryArgs: {
                    module: this.context.module,
                    context: this.context,
                    params: {},
                },
            };
        };
        return StatisticsSidebarWidgetComponent;
    }(BaseWidgetComponent));
    StatisticsSidebarWidgetComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-statistics-sidebar-widget',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<scrm-widget-panel [title]=\"getHeaderLabel()\">\n    <div widget-body class=\"p-3\">\n\n        <scrm-grid-widget [config]=\"getGridConfig()\"></scrm-grid-widget>\n\n    </div>\n</scrm-widget-panel>\n"
                },] }
    ];
    StatisticsSidebarWidgetComponent.ctorParameters = function () { return [
        { type: LanguageStore }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var StatisticsSidebarWidgetModule = /** @class */ (function () {
        function StatisticsSidebarWidgetModule() {
        }
        return StatisticsSidebarWidgetModule;
    }());
    StatisticsSidebarWidgetModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [StatisticsSidebarWidgetComponent],
                    exports: [
                        StatisticsSidebarWidgetComponent
                    ],
                    imports: [
                        common.CommonModule,
                        FieldModule,
                        InlineLoadingSpinnerModule,
                        WidgetPanelModule,
                        GridWidgetModule,
                        LabelModule
                    ]
                },] }
    ];

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var sidebarWidgetModules = [
        HistorySidebarWidgetModule,
        ChartSidebarWidgetModule,
        StatisticsSidebarWidgetModule
    ];
    var componentTypeMap = {
        'history-timeline': HistorySidebarWidgetComponent,
        chart: ChartSidebarWidgetComponent,
        statistics: StatisticsSidebarWidgetComponent,
        'record-thread': RecordThreadSidebarWidgetComponent
    };

    var SidebarWidgetRegistry = /** @class */ (function (_super) {
        __extends(SidebarWidgetRegistry, _super);
        function SidebarWidgetRegistry() {
            return _super.call(this) || this;
        }
        SidebarWidgetRegistry.prototype.initDefault = function () {
            var _this = this;
            Object.keys(componentTypeMap).forEach(function (key) {
                _this.register('default', key, componentTypeMap[key]);
            });
        };
        return SidebarWidgetRegistry;
    }(i5.BaseComponentRegistry));
    SidebarWidgetRegistry.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function SidebarWidgetRegistry_Factory() { return new SidebarWidgetRegistry(); }, token: SidebarWidgetRegistry, providedIn: "root" });
    SidebarWidgetRegistry.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    SidebarWidgetRegistry.ctorParameters = function () { return []; };

    var SidebarWidgetComponent = /** @class */ (function (_super) {
        __extends(SidebarWidgetComponent, _super);
        function SidebarWidgetComponent(registry) {
            var _this = _super.call(this) || this;
            _this.registry = registry;
            return _this;
        }
        Object.defineProperty(SidebarWidgetComponent.prototype, "componentType", {
            get: function () {
                var _a;
                var module = (_a = this.context.module) !== null && _a !== void 0 ? _a : 'default';
                return this.registry.get(module, this.type);
            },
            enumerable: false,
            configurable: true
        });
        SidebarWidgetComponent.prototype.getErrorMessage = function () {
            if (!this.type || !this.config) {
                return 'LBL_CONFIG_NO_CONFIG';
            }
            if (!this.componentType) {
                return 'LBL_WIDGET_NOT_FOUND';
            }
            return 'LBL_BAD_CONFIG';
        };
        return SidebarWidgetComponent;
    }(BaseWidgetComponent));
    SidebarWidgetComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-sidebar-widget',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<div *ngIf=\"!(type && config && componentType)\"\n     class=\"d-flex mb-4 mt-4 justify-content-center\">\n    <div class=\"lead\">\n        <scrm-label [labelKey]=\"getErrorMessage()\"></scrm-label>\n    </div>\n</div>\n<ndc-dynamic *ngIf=\"type && config && componentType\"\n             [ndcDynamicComponent]=\"componentType\"\n             [ndcDynamicInputs]=\"{\n                'config': config,\n                'context': context,\n                'context$': context$\n            }\"\n></ndc-dynamic>\n"
                },] }
    ];
    SidebarWidgetComponent.ctorParameters = function () { return [
        { type: SidebarWidgetRegistry }
    ]; };
    SidebarWidgetComponent.propDecorators = {
        type: [{ type: i0.Input, args: ['type',] }]
    };

    var SidebarWidgetModule = /** @class */ (function () {
        function SidebarWidgetModule() {
        }
        return SidebarWidgetModule;
    }());
    SidebarWidgetModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [SidebarWidgetComponent],
                    exports: [SidebarWidgetComponent],
                    imports: __spreadArray(__spreadArray([
                        common.CommonModule
                    ], __read(sidebarWidgetModules)), [
                        ngDynamicComponent.DynamicModule,
                        LabelModule,
                    ])
                },] }
    ];

    var SubpanelLineActionHandler = /** @class */ (function (_super) {
        __extends(SubpanelLineActionHandler, _super);
        function SubpanelLineActionHandler() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        SubpanelLineActionHandler.prototype.checkRecordAccess = function (data, defaultAcls) {
            if (defaultAcls === void 0) { defaultAcls = []; }
            var _a, _b, _c;
            var record = (_a = data.record) !== null && _a !== void 0 ? _a : {};
            var acls = (_b = record.acls) !== null && _b !== void 0 ? _b : [];
            if (!acls || !acls.length) {
                return false;
            }
            var action = (_c = data.action) !== null && _c !== void 0 ? _c : null;
            return this.checkAccess(action, acls, defaultAcls);
        };
        return SubpanelLineActionHandler;
    }(i5.ActionHandler));

    var AsyncProcessSubpanelLineAction = /** @class */ (function (_super) {
        __extends(AsyncProcessSubpanelLineAction, _super);
        function AsyncProcessSubpanelLineAction() {
            var _this = _super.call(this) || this;
            _this.key = 'async-process';
            _this.modes = i5.ALL_VIEW_MODES;
            return _this;
        }
        AsyncProcessSubpanelLineAction.prototype.run = function (data) {
        };
        AsyncProcessSubpanelLineAction.prototype.shouldDisplay = function (data) {
            var _a, _b;
            var defaultAcls = (_b = (_a = data === null || data === void 0 ? void 0 : data.action) === null || _a === void 0 ? void 0 : _a.acl) !== null && _b !== void 0 ? _b : [];
            if (!defaultAcls.length) {
                return true;
            }
            return this.checkRecordAccess(data, defaultAcls);
        };
        return AsyncProcessSubpanelLineAction;
    }(SubpanelLineActionHandler));
    AsyncProcessSubpanelLineAction.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function AsyncProcessSubpanelLineAction_Factory() { return new AsyncProcessSubpanelLineAction(); }, token: AsyncProcessSubpanelLineAction, providedIn: "root" });
    AsyncProcessSubpanelLineAction.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    AsyncProcessSubpanelLineAction.ctorParameters = function () { return []; };

    var SubpanelLineActionManager = /** @class */ (function (_super) {
        __extends(SubpanelLineActionManager, _super);
        function SubpanelLineActionManager(async) {
            var _this = _super.call(this) || this;
            _this.async = async;
            async.modes.forEach(function (mode) { return _this.actions[mode][async.key] = async; });
            return _this;
        }
        return SubpanelLineActionManager;
    }(BaseActionManager));
    SubpanelLineActionManager.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function SubpanelLineActionManager_Factory() { return new SubpanelLineActionManager(i0__namespace.ɵɵinject(AsyncProcessSubpanelLineAction)); }, token: SubpanelLineActionManager, providedIn: "root" });
    SubpanelLineActionManager.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root',
                },] }
    ];
    SubpanelLineActionManager.ctorParameters = function () { return [
        { type: AsyncProcessSubpanelLineAction }
    ]; };

    var SubpanelLineActionsAdapter = /** @class */ (function (_super) {
        __extends(SubpanelLineActionsAdapter, _super);
        function SubpanelLineActionsAdapter(store, actionManager, asyncActionService, message, confirmation, language, selectModalService) {
            var _this = _super.call(this, actionManager, asyncActionService, message, confirmation, language, selectModalService) || this;
            _this.store = store;
            _this.actionManager = actionManager;
            _this.asyncActionService = asyncActionService;
            _this.message = message;
            _this.confirmation = confirmation;
            _this.language = language;
            _this.selectModalService = selectModalService;
            return _this;
        }
        SubpanelLineActionsAdapter.prototype.getActions = function (context) {
            var _this = this;
            if (context === void 0) { context = null; }
            return rxjs.combineLatest([
                this.store.metadata$.pipe(operators.map(function (metadata) { return metadata.lineActions; })),
                rxjs.of('list').pipe(operators.shareReplay()),
            ]).pipe(operators.map(function (_a) {
                var _b = __read(_a, 2), actions = _b[0], mode = _b[1];
                return _this.parseModeActions(actions, mode, context);
            }));
        };
        SubpanelLineActionsAdapter.prototype.buildActionData = function (action, context) {
            return {
                record: (context && context.record) || null,
                store: this.store,
                action: action
            };
        };
        SubpanelLineActionsAdapter.prototype.getMode = function () {
            return 'list';
        };
        SubpanelLineActionsAdapter.prototype.getModuleName = function (context) {
            return this.store.metadata.module;
        };
        SubpanelLineActionsAdapter.prototype.reload = function (action, process, context) {
            this.store.load(false).pipe(operators.take(1)).subscribe();
            this.store.loadAllStatistics(false).pipe(operators.take(1)).subscribe();
        };
        /**
         * Build backend process input
         *
         * @param action
         * @param actionName
         * @param moduleName
         * @param context
         */
        SubpanelLineActionsAdapter.prototype.buildActionInput = function (action, actionName, moduleName, context) {
            if (context === void 0) { context = null; }
            var metadata = this.store.metadata;
            var collectionList = metadata.collection_list || null;
            var module = (context && context.module) || moduleName;
            var linkField = metadata.get_subpanel_data;
            if (collectionList && collectionList[module] && collectionList[module].get_subpanel_data) {
                linkField = collectionList[module].get_subpanel_data;
            }
            if (linkField && action && action.params && action.params.linkFieldMapping) {
                Object.keys(action.params.linkFieldMapping).some(function (key) {
                    if (linkField.includes(key)) {
                        linkField = action.params.linkFieldMapping[key];
                        return true;
                    }
                });
            }
            return {
                action: actionName,
                module: moduleName,
                id: (context && context.record && context.record.id) || '',
                payload: {
                    baseModule: this.store.parentModule,
                    baseRecordId: this.store.parentId,
                    linkField: linkField,
                    recordModule: module,
                    relateModule: this.store.metadata.module,
                    relateRecordId: (context && context.record && context.record.id) || '',
                }
            };
        };
        return SubpanelLineActionsAdapter;
    }(BaseRecordActionsAdapter));
    SubpanelLineActionsAdapter.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function SubpanelLineActionsAdapter_Factory() { return new SubpanelLineActionsAdapter(i0__namespace.ɵɵinject(SubpanelStore), i0__namespace.ɵɵinject(SubpanelLineActionManager), i0__namespace.ɵɵinject(AsyncActionService), i0__namespace.ɵɵinject(MessageService), i0__namespace.ɵɵinject(ConfirmationModalService), i0__namespace.ɵɵinject(LanguageStore), i0__namespace.ɵɵinject(SelectModalService)); }, token: SubpanelLineActionsAdapter, providedIn: "root" });
    SubpanelLineActionsAdapter.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root',
                },] }
    ];
    SubpanelLineActionsAdapter.ctorParameters = function () { return [
        { type: SubpanelStore },
        { type: SubpanelLineActionManager },
        { type: AsyncActionService },
        { type: MessageService },
        { type: ConfirmationModalService },
        { type: LanguageStore },
        { type: SelectModalService }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var SubpanelLineActionsAdapterFactory = /** @class */ (function () {
        function SubpanelLineActionsAdapterFactory(actionManager, asyncActionService, message, confirmation, language, selectModalService) {
            this.actionManager = actionManager;
            this.asyncActionService = asyncActionService;
            this.message = message;
            this.confirmation = confirmation;
            this.language = language;
            this.selectModalService = selectModalService;
        }
        SubpanelLineActionsAdapterFactory.prototype.create = function (store) {
            return new SubpanelLineActionsAdapter(store, this.actionManager, this.asyncActionService, this.message, this.confirmation, this.language, this.selectModalService);
        };
        return SubpanelLineActionsAdapterFactory;
    }());
    SubpanelLineActionsAdapterFactory.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function SubpanelLineActionsAdapterFactory_Factory() { return new SubpanelLineActionsAdapterFactory(i0__namespace.ɵɵinject(SubpanelLineActionManager), i0__namespace.ɵɵinject(AsyncActionService), i0__namespace.ɵɵinject(MessageService), i0__namespace.ɵɵinject(ConfirmationModalService), i0__namespace.ɵɵinject(LanguageStore), i0__namespace.ɵɵinject(SelectModalService)); }, token: SubpanelLineActionsAdapterFactory, providedIn: "root" });
    SubpanelLineActionsAdapterFactory.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root',
                },] }
    ];
    SubpanelLineActionsAdapterFactory.ctorParameters = function () { return [
        { type: SubpanelLineActionManager },
        { type: AsyncActionService },
        { type: MessageService },
        { type: ConfirmationModalService },
        { type: LanguageStore },
        { type: SelectModalService }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var SubpanelTableAdapter = /** @class */ (function () {
        function SubpanelTableAdapter(store, lineActionsAdapterFactory) {
            this.store = store;
            this.lineActionsAdapterFactory = lineActionsAdapterFactory;
        }
        SubpanelTableAdapter.prototype.getTable = function () {
            var _this = this;
            return {
                showHeader: false,
                showFooter: true,
                module: this.store.metadata.headerModule,
                columns: this.getColumns(),
                lineActions: this.getLineActions(),
                sort$: this.store.recordList.sort$,
                maxColumns$: rxjs.of(5),
                loading$: this.store.recordList.loading$,
                dataSource: this.store.recordList,
                pagination: this.store.recordList,
                toggleRecordSelection: function (id) {
                    _this.store.recordList.toggleSelection(id);
                },
                updateSorting: function (orderBy, sortOrder) {
                    _this.store.recordList.updateSorting(orderBy, sortOrder);
                },
            };
        };
        SubpanelTableAdapter.prototype.getColumns = function () {
            return this.store.metadata$.pipe(operators.map(function (metadata) { return metadata.columns; }));
        };
        SubpanelTableAdapter.prototype.getLineActions = function () {
            return this.lineActionsAdapterFactory.create(this.store);
        };
        return SubpanelTableAdapter;
    }());
    SubpanelTableAdapter.decorators = [
        { type: i0.Injectable }
    ];
    SubpanelTableAdapter.ctorParameters = function () { return [
        { type: SubpanelStore },
        { type: SubpanelLineActionsAdapterFactory }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var SubpanelTableAdapterFactory = /** @class */ (function () {
        function SubpanelTableAdapterFactory(lineActionsAdapterFactory) {
            this.lineActionsAdapterFactory = lineActionsAdapterFactory;
        }
        SubpanelTableAdapterFactory.prototype.create = function (store) {
            return new SubpanelTableAdapter(store, this.lineActionsAdapterFactory);
        };
        return SubpanelTableAdapterFactory;
    }());
    SubpanelTableAdapterFactory.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function SubpanelTableAdapterFactory_Factory() { return new SubpanelTableAdapterFactory(i0__namespace.ɵɵinject(SubpanelLineActionsAdapterFactory)); }, token: SubpanelTableAdapterFactory, providedIn: "root" });
    SubpanelTableAdapterFactory.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root',
                },] }
    ];
    SubpanelTableAdapterFactory.ctorParameters = function () { return [
        { type: SubpanelLineActionsAdapterFactory }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var SubpanelComponent = /** @class */ (function () {
        function SubpanelComponent(actionManager, languages, tableAdapterFactory) {
            this.actionManager = actionManager;
            this.languages = languages;
            this.tableAdapterFactory = tableAdapterFactory;
        }
        SubpanelComponent.prototype.ngOnInit = function () {
            var _this = this;
            this.adapter = this.tableAdapterFactory.create(this.store);
            this.tableConfig = this.adapter.getTable();
            if (this.maxColumns$) {
                this.tableConfig.maxColumns$ = this.maxColumns$;
            }
            this.config$ = rxjs.of(this.getButtonGroupConfig(this.buildAction())).pipe(operators.shareReplay(1));
            this.closeButton = {
                onClick: function () {
                    _this.store.show = false;
                }
            };
        };
        SubpanelComponent.prototype.buildAction = function () {
            var _this = this;
            var actions = [];
            if (this.store.metadata) {
                if (this.store.metadata.top_buttons) {
                    this.store.metadata.top_buttons.forEach(function (button) {
                        var label = _this.languages.getFieldLabel(button.labelKey, button.module);
                        actions.push(Object.assign(Object.assign({}, button), { label: label, params: {
                                module: button.module
                            } }));
                    });
                }
            }
            return actions;
        };
        SubpanelComponent.prototype.getButtonGroupConfig = function (actions) {
            var _this = this;
            var buttons = [];
            actions.forEach(function (action) {
                buttons.push(_this.buildButton(action));
            });
            var breakpoint = 1;
            if (buttons && buttons.length > 1) {
                breakpoint = -1;
            }
            var dropdownLabel = this.languages.getAppString('LBL_ACTIONS');
            return {
                buttons: buttons,
                breakpoint: breakpoint,
                dropdownLabel: dropdownLabel,
                buttonKlass: ['btn', 'btn-sm', 'btn-outline-light']
            };
        };
        SubpanelComponent.prototype.buildButton = function (action) {
            var _this = this;
            return {
                label: action.label || '',
                klass: 'btn btn-sm btn-outline-light',
                onClick: function () {
                    _this.actionManager.run(action.key, {
                        subpanelMeta: _this.store.metadata,
                        module: action.params.module || _this.store.metadata.module,
                        parentModule: _this.store.parentModule,
                        parentId: _this.store.parentId,
                        store: _this.store,
                        action: action
                    });
                }
            };
        };
        return SubpanelComponent;
    }());
    SubpanelComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-subpanel',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<ng-container>\n    <scrm-panel [title]=\"store.getTitle()\" mode=\"closable\" [close]=\"closeButton\" bodyPadding=\"0\">\n        <span class=\"subpanel-icon pl-1\" panel-icon-area>\n            <scrm-image [image]=\"store.getIcon()\"></scrm-image>\n        </span>\n        <span panel-header-button>\n            <scrm-button-group *ngIf=\"config$\" [config$]=\"config$\"></scrm-button-group>\n        </span>\n        <div panel-body>\n            <scrm-table [config]=\"tableConfig\"></scrm-table>\n        </div>\n    </scrm-panel>\n</ng-container>\n",
                    providers: [
                        SubpanelTableAdapter
                    ]
                },] }
    ];
    SubpanelComponent.ctorParameters = function () { return [
        { type: SubpanelActionManager },
        { type: LanguageStore },
        { type: SubpanelTableAdapterFactory }
    ]; };
    SubpanelComponent.propDecorators = {
        store: [{ type: i0.Input }],
        maxColumns$: [{ type: i0.Input }]
    };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var SubpanelModule = /** @class */ (function () {
        function SubpanelModule() {
        }
        return SubpanelModule;
    }());
    SubpanelModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [SubpanelComponent],
                    exports: [SubpanelComponent],
                    imports: [
                        common.CommonModule,
                        i1$2.NgbModule,
                        ImageModule,
                        PanelModule,
                        i2.RouterModule,
                        ButtonGroupModule,
                        TableModule,
                    ]
                },] }
    ];

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var SubpanelContainerComponent = /** @class */ (function () {
        function SubpanelContainerComponent(languageStore, maxColumnCalculator, localStorage) {
            this.languageStore = languageStore;
            this.maxColumnCalculator = maxColumnCalculator;
            this.localStorage = localStorage;
            this.isCollapsed = false;
            this.toggleIcon = 'arrow_down_filled';
            this.languages$ = this.languageStore.vm$;
            this.localStorageKey = 'subpanel-state';
        }
        SubpanelContainerComponent.prototype.ngOnInit = function () {
            var _this = this;
            this.vm$ = this.config.subpanels$.pipe(operators.map(function (subpanelsMap) { return ({
                subpanels: subpanelsMap
            }); }), operators.tap(function (subpanelsMap) {
                if (!subpanelsMap || !Object.keys(subpanelsMap).length) {
                    return;
                }
                Object.keys(subpanelsMap.subpanels).forEach(function (subpanelKey) {
                    var subpanel = subpanelsMap.subpanels[subpanelKey];
                    if (subpanel.show) {
                        return;
                    }
                    // check the subpanel state on local storage
                    var storedSubpanelState = false;
                    var storage = _this.localStorage.get(_this.localStorageKey);
                    var storageModule = storage && storage[subpanel.parentModule];
                    if (storageModule
                        && Object.keys(storageModule).length
                        && (subpanelKey in storageModule)) {
                        storedSubpanelState = storageModule[subpanelKey];
                    }
                    // if present on local storage
                    if (storedSubpanelState) {
                        subpanel.show = true;
                        subpanel.load().pipe(operators.take(1)).subscribe();
                    }
                });
            }));
            this.maxColumns$ = this.getMaxColumns();
        };
        SubpanelContainerComponent.prototype.getMaxColumns = function () {
            return this.maxColumnCalculator.getMaxColumns(this.config.sidebarActive$);
        };
        SubpanelContainerComponent.prototype.toggleSubPanels = function () {
            this.isCollapsed = !this.isCollapsed;
            this.toggleIcon = (this.isCollapsed) ? 'arrow_up_filled' : 'arrow_down_filled';
        };
        /**
         * Store the data in local storage
         *
         * @param {string} module to store in
         * @param {string} storageKey to store in
         * @param {object} data object to be stored
         */
        SubpanelContainerComponent.prototype.storageSave = function (module, storageKey, data) {
            var storage = this.localStorage.get(storageKey);
            if (!storage) {
                storage = {};
            }
            storage[module] = Object.assign(Object.assign({}, storage[module]), data);
            this.localStorage.set(storageKey, storage);
        };
        SubpanelContainerComponent.prototype.showSubpanel = function (key, item) {
            item.show = !item.show;
            // store in local storage by module and subpanel key
            var subpanel = {};
            subpanel[key] = item.show;
            this.storageSave(item.parentModule, this.localStorageKey, subpanel);
            if (item.show) {
                item.load().pipe(operators.take(1)).subscribe();
            }
        };
        SubpanelContainerComponent.prototype.getGridConfig = function (vm) {
            if (!vm.metadata || !vm.metadata.insightWidget) {
                return {
                    layout: null,
                };
            }
            var layout = vm.getWidgetLayout();
            layout.rows.forEach(function (row) {
                if (!row.cols || !row.cols.length) {
                    return;
                }
                row.cols.forEach(function (col) {
                    if (!col.statistic) {
                        return;
                    }
                    var store = vm.getStatistic(col.statistic);
                    if (store) {
                        col.store = store;
                    }
                });
            });
            return {
                rowClass: 'statistics-sidebar-widget-row',
                columnClass: 'statistics-sidebar-widget-col',
                layout: layout,
                widgetConfig: {},
                queryArgs: {
                    module: vm.metadata.name,
                    context: { module: vm.parentModule, id: vm.parentId },
                    params: { subpanel: vm.metadata.name },
                },
            };
        };
        return SubpanelContainerComponent;
    }());
    SubpanelContainerComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-subpanel-container',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<ng-container *ngIf=\"(vm$ | async) as vm\">\n    <ngb-accordion class=\"sub-panel-banner\" #accordion=\"ngbAccordion\" activeIds=\"sub-panel-buttons\">\n        <ngb-panel id=\"sub-panel-buttons\">\n            <ng-template ngbPanelHeader>\n                <a (click)=\"toggleSubPanels()\" class=\"clickable\">\n                    <div class=\"d-flex align-items-center justify-content-between\">\n                        <scrm-label labelKey=\"LBL_SELECT_SUBPANEL_BANNER\"></scrm-label>\n                        <scrm-image\n                            [attr.aria-expanded]=\"!isCollapsed\"\n                            [image]=\"toggleIcon\"\n                            aria-controls=\"collapseShowSubPanels\"\n                            class=\"float-right\">\n                        </scrm-image>\n                    </div>\n                </a>\n            </ng-template>\n            <ng-template ngbPanelContent>\n                <div id=\"collapseShowSubPanels\" [ngbCollapse]=\"isCollapsed\">\n                    <div class=\"row insight-panel\">\n                        <div class=\"col-xs-6 col-sm-3 col-md-2 insight-panel-card border-insight\"\n                             *ngFor=\"let item of vm.subpanels | keyvalue\"\n                             [ngClass]=\"{'sub-panel-banner-button-active': item.value.show === true}\"\n                             (click)=\"showSubpanel(item.key, item.value)\">\n                            <scrm-grid-widget [config]=\"getGridConfig(item.value)\"></scrm-grid-widget>\n\n                        </div>\n                    </div>\n                </div>\n            </ng-template>\n        </ngb-panel>\n    </ngb-accordion>\n\n    <div id=\"sub-panels\">\n        <ng-container *ngFor=\"let item of vm.subpanels | keyvalue\">\n\n            <scrm-subpanel class=\"sub-panel\"\n                           [store]=\"item.value\"\n                           [maxColumns$]=\"maxColumns$\"\n                           *ngIf=\"item.value.show\">\n            </scrm-subpanel>\n\n        </ng-container>\n    </div>\n\n</ng-container>\n",
                    providers: [MaxColumnsCalculator]
                },] }
    ];
    SubpanelContainerComponent.ctorParameters = function () { return [
        { type: LanguageStore },
        { type: MaxColumnsCalculator },
        { type: LocalStorageService }
    ]; };
    SubpanelContainerComponent.propDecorators = {
        config: [{ type: i0.Input }]
    };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var SubpanelContainerModule = /** @class */ (function () {
        function SubpanelContainerModule() {
        }
        return SubpanelContainerModule;
    }());
    SubpanelContainerModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [SubpanelContainerComponent],
                    exports: [SubpanelContainerComponent],
                    imports: [
                        common.CommonModule,
                        i1$2.NgbModule,
                        ImageModule,
                        i2.RouterModule,
                        SubpanelModule,
                        InlineLoadingSpinnerModule,
                        FieldModule,
                        GridWidgetModule,
                        LabelModule,
                    ]
                },] }
    ];

    var StatisticsTopWidgetComponent = /** @class */ (function (_super) {
        __extends(StatisticsTopWidgetComponent, _super);
        function StatisticsTopWidgetComponent(language, factory) {
            var _this = _super.call(this) || this;
            _this.language = language;
            _this.factory = factory;
            _this.statistics = {};
            _this.loading = true;
            _this.subs = [];
            return _this;
        }
        StatisticsTopWidgetComponent.prototype.ngOnInit = function () {
            var _this = this;
            if (!this.context || !this.context.module) {
                this.messageLabelKey = 'LBL_CONFIG_BAD_CONTEXT';
                return;
            }
            if (!this.config) {
                this.messageLabelKey = 'LBL_CONFIG_NO_CONFIG';
                return;
            }
            if (!this.config.options || !this.config.options.statistics || !this.config.options.statistics.length) {
                this.messageLabelKey = 'LBL_CONFIG_NO_STATISTICS_KEY';
                return;
            }
            if (this.context$) {
                this.subs.push(this.context$.subscribe(function (context) {
                    _this.context = context;
                }));
            }
            var statistics$ = [];
            var loadings$ = [];
            this.config.options.statistics.forEach(function (statistic) {
                if (!statistic.type) {
                    return;
                }
                _this.statistics[statistic.type] = {
                    labelKey: statistic.labelKey || '',
                    endLabelKey: statistic.endLabelKey || '',
                    type: statistic.type,
                    store: _this.factory.create()
                };
                _this.statistics[statistic.type].store.init(_this.context.module, {
                    key: statistic.type,
                    context: Object.assign({}, _this.context)
                }).pipe(operators.take(1)).subscribe();
                statistics$.push(_this.statistics[statistic.type].store.state$);
                loadings$.push(_this.statistics[statistic.type].store.loading$);
            });
            this.loading$ = rxjs.combineLatest(loadings$).pipe(operators.map(function (loadings) {
                if (!loadings || loadings.length < 1) {
                    _this.loading = false;
                    return false;
                }
                var loading = true;
                loadings.forEach(function (value) {
                    loading = loading && value;
                });
                _this.loading = loading;
                return loading;
            }));
            this.subs.push(this.loading$.subscribe());
            this.vm$ = rxjs.combineLatest([rxjs.combineLatest(statistics$), this.language.appStrings$]).pipe(operators.map(function (_a) {
                var _b = __read(_a, 2), statistics = _b[0], appStrings = _b[1];
                var statsMap = {};
                statistics.forEach(function (value) {
                    statsMap[value.query.key] = value;
                    _this.statistics[value.query.key].labelKey = _this.getMetadataEntry(value, 'labelKey');
                    _this.statistics[value.query.key].endLabelKey = _this.getMetadataEntry(value, 'endLabelKey');
                });
                return {
                    statistics: statsMap,
                    appStrings: appStrings
                };
            }));
            if (this.config.reload$) {
                this.subs.push(this.config.reload$.subscribe(function () {
                    if (_this.loading === false) {
                        _this.loading = true;
                        _this.config.options.statistics.forEach(function (statistic) {
                            if (!statistic.type) {
                                return;
                            }
                            if (!_this.statistics[statistic.type] || !_this.statistics[statistic.type].store) {
                                return;
                            }
                            _this.statistics[statistic.type].store.load(false).pipe(operators.take(1)).subscribe();
                        });
                    }
                }));
            }
        };
        StatisticsTopWidgetComponent.prototype.ngOnDestroy = function () {
            this.subs.forEach(function (sub) { return sub.unsubscribe(); });
        };
        StatisticsTopWidgetComponent.prototype.getMetadataEntry = function (stat, name) {
            var value = stat.statistic.metadata && stat.statistic.metadata[name];
            if (value !== null && typeof value !== 'undefined') {
                return value;
            }
            return this.statistics[stat.query.key][name];
        };
        StatisticsTopWidgetComponent.prototype.getLabel = function (key) {
            var context = this.context || {};
            var module = context.module || '';
            return this.language.getFieldLabel(key, module);
        };
        return StatisticsTopWidgetComponent;
    }(BaseWidgetComponent));
    StatisticsTopWidgetComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-statistics-top-widget',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<div *ngIf=\"(vm$ | async) as vm\"\n     class=\"d-flex justify-content-center widget-bar rounded\">\n    <div class=\"p-2 widget-bar-entry-message\" *ngIf=\"this.messageLabelKey\">\n        {{vm.appStrings[this.messageLabelKey] || '' | uppercase}}\n    </div>\n    <ng-container *ngFor=\"let item of statistics | keyvalue\">\n\n        <div class=\"d-flex justify-content-center align-items-baseline widget-bar-entry p-2\">\n\n            <div class=\"pr-1 widget-bar-entry-label\" *ngIf=\"item.value.labelKey && getLabel(item.value.labelKey)\">\n                {{getLabel(item.value.labelKey) | uppercase}}:\n            </div>\n\n            <ng-container *ngIf=\"item.key && vm.statistics[item.key]\">\n\n                <div class=\"pl-1 pr-1 widget-bar-entry-value\"\n                     *ngIf=\"!vm.statistics[item.key].loading && vm.statistics[item.key].field\">\n                    <scrm-field [type]=\"vm.statistics[item.key].field.type\" [field]=\"vm.statistics[item.key].field\"\n                                mode=\"list\"></scrm-field>\n                </div>\n\n            </ng-container>\n\n\n            <div class=\"pl-1 pr-1 widget-bar-entry-loading\" *ngIf=\"(item.value.store.loading$ | async) as loading\">\n                <scrm-inline-loading-spinner></scrm-inline-loading-spinner>\n\n                <ng-container *ngIf=\"!loading && (!item.key || !vm.statistics[item.key])\">\n                    -\n                </ng-container>\n            </div>\n\n            <div class=\"pl-1 widget-bar-entry-end-label\"\n                 *ngIf=\"item.value.endLabelKey && getLabel(item.value.endLabelKey)\">\n                {{getLabel(item.value.endLabelKey) | uppercase}}\n            </div>\n\n        </div>\n\n    </ng-container>\n</div>\n"
                },] }
    ];
    StatisticsTopWidgetComponent.ctorParameters = function () { return [
        { type: LanguageStore },
        { type: SingleValueStatisticsStoreFactory }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var StatisticsTopWidgetModule = /** @class */ (function () {
        function StatisticsTopWidgetModule() {
        }
        return StatisticsTopWidgetModule;
    }());
    StatisticsTopWidgetModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [StatisticsTopWidgetComponent],
                    exports: [
                        StatisticsTopWidgetComponent
                    ],
                    imports: [
                        common.CommonModule,
                        FieldModule,
                        InlineLoadingSpinnerModule
                    ]
                },] }
    ];

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var topWidgetModules = [
        StatisticsTopWidgetModule,
    ];
    var topWidgetComponentTypeMap = {
        statistics: StatisticsTopWidgetComponent,
    };

    var TopWidgetComponent = /** @class */ (function (_super) {
        __extends(TopWidgetComponent, _super);
        function TopWidgetComponent() {
            var _this = _super.apply(this, __spreadArray([], __read(arguments))) || this;
            _this.map = topWidgetComponentTypeMap;
            return _this;
        }
        Object.defineProperty(TopWidgetComponent.prototype, "componentType", {
            get: function () {
                return this.map[this.type];
            },
            enumerable: false,
            configurable: true
        });
        TopWidgetComponent.prototype.ngOnInit = function () {
            this.component = this.componentType;
            this.inputs = {
                'config': this.config,
                'context': this.context
            };
        };
        return TopWidgetComponent;
    }(BaseWidgetComponent));
    TopWidgetComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-top-widget',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<ndc-dynamic *ngIf=\"type && config\"\n             [ndcDynamicComponent]=\"componentType\"\n             [ndcDynamicInputs]=\"{\n        'config': config,\n        'context': context\n    }\"\n></ndc-dynamic>\n"
                },] }
    ];
    TopWidgetComponent.propDecorators = {
        type: [{ type: i0.Input, args: ['type',] }]
    };

    var TopWidgetModule = /** @class */ (function () {
        function TopWidgetModule() {
        }
        return TopWidgetModule;
    }());
    TopWidgetModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [TopWidgetComponent],
                    exports: [TopWidgetComponent],
                    imports: __spreadArray(__spreadArray([
                        common.CommonModule
                    ], __read(topWidgetModules)), [
                        ngDynamicComponent.DynamicModule
                    ])
                },] }
    ];

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var BaseWidgetModule = /** @class */ (function () {
        function BaseWidgetModule() {
        }
        return BaseWidgetModule;
    }());
    BaseWidgetModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [BaseWidgetComponent],
                    exports: [BaseWidgetComponent],
                    imports: [
                        common.CommonModule,
                        ngDynamicComponent.DynamicModule,
                    ]
                },] }
    ];

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var BaseFieldModule = /** @class */ (function () {
        function BaseFieldModule() {
        }
        return BaseFieldModule;
    }());
    BaseFieldModule.decorators = [
        { type: i0.NgModule, args: [{
                    exports: [
                        BaseBooleanComponent,
                        BaseEnumComponent,
                        BaseFieldComponent,
                        BaseMultiEnumComponent,
                        BaseNameComponent,
                        BaseNumberComponent,
                        BaseRelateComponent,
                        BaseDateTimeComponent
                    ],
                    declarations: [
                        BaseBooleanComponent,
                        BaseEnumComponent,
                        BaseFieldComponent,
                        BaseMultiEnumComponent,
                        BaseNameComponent,
                        BaseNumberComponent,
                        BaseRelateComponent,
                        BaseDateTimeComponent
                    ],
                    imports: [
                        common.CommonModule
                    ]
                },] }
    ];

    var DynamicEnumDetailFieldComponent = /** @class */ (function (_super) {
        __extends(DynamicEnumDetailFieldComponent, _super);
        function DynamicEnumDetailFieldComponent(languages, typeFormatter, logic) {
            var _this = _super.call(this, languages, typeFormatter, logic) || this;
            _this.languages = languages;
            _this.typeFormatter = typeFormatter;
            _this.logic = logic;
            return _this;
        }
        return DynamicEnumDetailFieldComponent;
    }(BaseEnumComponent));
    DynamicEnumDetailFieldComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-dynamicenum-detail',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n{{valueLabel}}\n"
                },] }
    ];
    DynamicEnumDetailFieldComponent.ctorParameters = function () { return [
        { type: LanguageStore },
        { type: DataTypeFormatter },
        { type: FieldLogicManager }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var DynamicEnumDetailFieldModule = /** @class */ (function () {
        function DynamicEnumDetailFieldModule() {
        }
        return DynamicEnumDetailFieldModule;
    }());
    DynamicEnumDetailFieldModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [DynamicEnumDetailFieldComponent],
                    exports: [DynamicEnumDetailFieldComponent],
                    imports: [
                        common.CommonModule,
                        forms.FormsModule
                    ]
                },] }
    ];

    var DynamicEnumEditFieldComponent = /** @class */ (function (_super) {
        __extends(DynamicEnumEditFieldComponent, _super);
        function DynamicEnumEditFieldComponent(languages, typeFormatter, logic) {
            var _this = _super.call(this, languages, typeFormatter, logic) || this;
            _this.languages = languages;
            _this.typeFormatter = typeFormatter;
            _this.logic = logic;
            return _this;
        }
        DynamicEnumEditFieldComponent.prototype.ngOnInit = function () {
            _super.prototype.ngOnInit.call(this);
        };
        DynamicEnumEditFieldComponent.prototype.onAdd = function (item) {
            if (item && item.value) {
                this.field.value = item.value;
                this.field.formControl.setValue(item.value);
                this.field.formControl.markAsDirty();
                return;
            }
            this.field.value = '';
            this.field.formControl.setValue('');
            this.field.formControl.markAsDirty();
            this.selectedValues = [];
            return;
        };
        DynamicEnumEditFieldComponent.prototype.onRemove = function () {
            var _this = this;
            this.field.value = '';
            this.field.formControl.setValue('');
            this.field.formControl.markAsDirty();
            setTimeout(function () {
                _this.tag.focus(true, true);
                _this.tag.dropdown.show();
            }, 200);
        };
        DynamicEnumEditFieldComponent.prototype.getPlaceholderLabel = function () {
            return this.languages.getAppString('LBL_SELECT_ITEM') || '';
        };
        return DynamicEnumEditFieldComponent;
    }(BaseEnumComponent));
    DynamicEnumEditFieldComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-dynamicenum-edit',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<tag-input [(ngModel)]=\"selectedValues\"\n           [onlyFromAutocomplete]=\"true\"\n           [clearOnBlur]=\"true\"\n           [displayBy]=\"'label'\"\n           [identifyBy]=\"'value'\"\n           [placeholder]=\"getPlaceholderLabel()\"\n           [secondaryPlaceholder]=\"getPlaceholderLabel()\"\n           [inputClass]=\"getInvalidClass()\"\n           maxItems=\"1\"\n           #tag\n           (onAdd)=\"onAdd($event)\"\n           (onRemove)=\"onRemove()\">\n    <tag-input-dropdown [displayBy]=\"'label'\"\n                        [identifyBy]=\"'value'\"\n                        [showDropdownIfEmpty]=\"true\"\n                        [keepOpen]=\"false\"\n                        [autocompleteItems]=\"this.options\">\n    </tag-input-dropdown>\n</tag-input>\n"
                },] }
    ];
    DynamicEnumEditFieldComponent.ctorParameters = function () { return [
        { type: LanguageStore },
        { type: DataTypeFormatter },
        { type: FieldLogicManager }
    ]; };
    DynamicEnumEditFieldComponent.propDecorators = {
        tag: [{ type: i0.ViewChild, args: ['tag',] }]
    };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var DynamicEnumEditFieldModule = /** @class */ (function () {
        function DynamicEnumEditFieldModule() {
        }
        return DynamicEnumEditFieldModule;
    }());
    DynamicEnumEditFieldModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [DynamicEnumEditFieldComponent],
                    exports: [DynamicEnumEditFieldComponent],
                    imports: [
                        common.CommonModule,
                        ngxChips.TagInputModule,
                        forms.FormsModule
                    ]
                },] }
    ];

    var EmailDetailFieldsComponent = /** @class */ (function (_super) {
        __extends(EmailDetailFieldsComponent, _super);
        function EmailDetailFieldsComponent(typeFormatter, logic) {
            var _this = _super.call(this, typeFormatter, logic) || this;
            _this.typeFormatter = typeFormatter;
            _this.logic = logic;
            return _this;
        }
        return EmailDetailFieldsComponent;
    }(BaseFieldComponent));
    EmailDetailFieldsComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-email-detail',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n{{ field.value }}\n"
                },] }
    ];
    EmailDetailFieldsComponent.ctorParameters = function () { return [
        { type: DataTypeFormatter },
        { type: FieldLogicManager }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var EmailDetailFieldsModule = /** @class */ (function () {
        function EmailDetailFieldsModule() {
        }
        return EmailDetailFieldsModule;
    }());
    EmailDetailFieldsModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [EmailDetailFieldsComponent],
                    exports: [EmailDetailFieldsComponent],
                    imports: [
                        common.CommonModule,
                    ]
                },] }
    ];

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var HtmlSanitizePipe = /** @class */ (function () {
        function HtmlSanitizePipe(sanitizer) {
            this.sanitizer = sanitizer;
        }
        HtmlSanitizePipe.prototype.transform = function (data) {
            return this.sanitizer.sanitize(i0.SecurityContext.HTML, data);
        };
        return HtmlSanitizePipe;
    }());
    HtmlSanitizePipe.decorators = [
        { type: i0.Pipe, args: [{
                    name: 'htmlSanitize'
                },] }
    ];
    HtmlSanitizePipe.ctorParameters = function () { return [
        { type: platformBrowser.DomSanitizer }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var HtmlSanitizeModule = /** @class */ (function () {
        function HtmlSanitizeModule() {
        }
        return HtmlSanitizeModule;
    }());
    HtmlSanitizeModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [
                        HtmlSanitizePipe
                    ],
                    exports: [
                        HtmlSanitizePipe
                    ],
                    imports: [
                        common.CommonModule
                    ]
                },] }
    ];

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var AuthGuard = /** @class */ (function () {
        function AuthGuard(message, router, authService, preferences, asyncActionService, appState, routeConverter) {
            this.message = message;
            this.router = router;
            this.authService = authService;
            this.preferences = preferences;
            this.asyncActionService = asyncActionService;
            this.appState = appState;
            this.routeConverter = routeConverter;
        }
        AuthGuard.prototype.canActivate = function (route) {
            return this.authorizeUser(route);
        };
        /**
         * Authorize user session and acl together in conjunction
         *
         * @returns {object} Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree
         * @param {ActivatedRouteSnapshot} route information about the current route
         */
        AuthGuard.prototype.authorizeUser = function (route) {
            // Note: this session and acl are not always booleans
            return rxjs.forkJoin({
                session: this.authorizeUserSession(route),
                acl: this.authorizeUserACL(route)
            }).pipe(operators.map(function (_c) {
                var session = _c.session, acl = _c.acl;
                if (session instanceof i2.UrlTree) {
                    return session;
                }
                if (acl instanceof i2.UrlTree) {
                    return acl;
                }
                return session && acl;
            }));
        };
        /**
         * Authorize user acl
         *
         * @returns {object} Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree
         * @param {ActivatedRouteSnapshot} activatedRoute information about the current route
         */
        AuthGuard.prototype.authorizeUserACL = function (activatedRoute) {
            var _this = this;
            var _a, _b;
            var routeInfo = this.routeConverter.parseRouteURL(activatedRoute.url);
            var routeURL = (_a = this.appState.getRouteUrl()) !== null && _a !== void 0 ? _a : '';
            if (!routeInfo.module || routeInfo.module === 'home') {
                return rxjs.of(true);
            }
            var homeUrl = '';
            var homeUrlTree = this.router.parseUrl(homeUrl);
            var actionName = 'user-acl';
            var asyncData = {
                action: actionName,
                module: routeInfo.module,
                payload: {
                    routeAction: routeInfo.action,
                    record: routeInfo.record,
                    routeURL: routeURL,
                    queryParams: (_b = activatedRoute === null || activatedRoute === void 0 ? void 0 : activatedRoute.queryParams) !== null && _b !== void 0 ? _b : []
                }
            };
            return this.asyncActionService.run(actionName, asyncData)
                .pipe(operators.take(1), operators.map(function (process) {
                if (process.data && process.data.result === true) {
                    return true;
                }
                if (i5.isEmptyString(routeURL)) {
                    // Re-direct to home
                    return homeUrlTree;
                }
                var currentUrlTree = _this.router.parseUrl(_this.router.url);
                if (_this.routeConverter.isClassicViewRoute(currentUrlTree)) {
                    return currentUrlTree;
                }
                return false;
            }), operators.catchError(function () { return rxjs.of(homeUrlTree); }), operators.tap(function (result) { return result; }));
        };
        /**
         * Authorize user session
         *
         * @returns {object} Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree
         * @param {ActivatedRouteSnapshot} route information about the current route
         */
        AuthGuard.prototype.authorizeUserSession = function (route) {
            var _this = this;
            if (this.authService.isUserLoggedIn.value && route.data.checkSession !== true) {
                return rxjs.of(true);
            }
            var loginUrl = 'Login';
            var loginUrlTree = this.router.parseUrl(loginUrl);
            return this.authService.fetchSessionStatus()
                .pipe(operators.take(1), operators.map(function (user) {
                if (user && user.appStatus.installed === false) {
                    return _this.router.parseUrl('install');
                }
                if (user && user.active === true) {
                    _this.authService.setCurrentUser(user);
                    return true;
                }
                _this.authService.logout('LBL_SESSION_EXPIRED', false);
                _this.authService.isUserLoggedIn.next(false);
                // Re-direct to login
                return loginUrlTree;
            }), operators.catchError(function () {
                _this.authService.logout('LBL_SESSION_EXPIRED', false);
                return rxjs.of(loginUrlTree);
            }), operators.tap(function (result) {
                if (result === true) {
                    _this.authService.isUserLoggedIn.next(true);
                }
            }));
        };
        return AuthGuard;
    }());
    AuthGuard.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function AuthGuard_Factory() { return new AuthGuard(i0__namespace.ɵɵinject(MessageService), i0__namespace.ɵɵinject(i2__namespace.Router), i0__namespace.ɵɵinject(AuthService), i0__namespace.ɵɵinject(UserPreferenceStore), i0__namespace.ɵɵinject(AsyncActionService), i0__namespace.ɵɵinject(AppStateStore), i0__namespace.ɵɵinject(RouteConverter)); }, token: AuthGuard, providedIn: "root" });
    AuthGuard.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    AuthGuard.ctorParameters = function () { return [
        { type: MessageService },
        { type: i2.Router },
        { type: AuthService },
        { type: UserPreferenceStore },
        { type: AsyncActionService },
        { type: AppStateStore },
        { type: RouteConverter }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var ErrorInterceptor = /** @class */ (function () {
        function ErrorInterceptor() {
        }
        ErrorInterceptor.prototype.intercept = function (request, next) {
            return next.handle(request).pipe(operators.catchError(function (err) {
                var error = err.error.message || err.statusText;
                return rxjs.throwError(error);
            }));
        };
        return ErrorInterceptor;
    }());
    ErrorInterceptor.decorators = [
        { type: i0.Injectable }
    ];

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var InstallAuthGuard = /** @class */ (function () {
        function InstallAuthGuard(systemConfigStore, authService, router, routeConverter, asyncActionService, message) {
            this.systemConfigStore = systemConfigStore;
            this.authService = authService;
            this.router = router;
            this.routeConverter = routeConverter;
            this.asyncActionService = asyncActionService;
            this.message = message;
        }
        InstallAuthGuard.prototype.canActivate = function (route) {
            return this.canActivateWebInstallation(route);
        };
        /**
     * Allow web installation
     * @returns {object} Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree
     * @param activatedRoute
     */
        InstallAuthGuard.prototype.canActivateWebInstallation = function (activatedRoute) {
            var _this = this;
            var homePage = this.systemConfigStore.getHomePage();
            var homePageUrlTree = this.router.parseUrl(homePage);
            // this.message.removeMessages();
            return this.authService.fetchSessionStatus()
                .pipe(operators.take(1), operators.map(function (user) {
                if (user && user.appStatus.locked === true && user.appStatus.installed === true) {
                    _this.message.addDangerMessageByKey('LBL_DISABLED_TITLE_2');
                    if (user && user.active === false) {
                        return homePageUrlTree;
                    }
                    return false;
                }
                if (user && user.active === true) {
                    _this.authService.logout('', false);
                    _this.authService.isUserLoggedIn.next(false);
                }
                return true;
            }), operators.catchError(function () { return rxjs.of(true); }));
        };
        return InstallAuthGuard;
    }());
    InstallAuthGuard.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function InstallAuthGuard_Factory() { return new InstallAuthGuard(i0__namespace.ɵɵinject(SystemConfigStore), i0__namespace.ɵɵinject(AuthService), i0__namespace.ɵɵinject(i2__namespace.Router), i0__namespace.ɵɵinject(RouteConverter), i0__namespace.ɵɵinject(AsyncActionService), i0__namespace.ɵɵinject(MessageService)); }, token: InstallAuthGuard, providedIn: "root" });
    InstallAuthGuard.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    InstallAuthGuard.ctorParameters = function () { return [
        { type: SystemConfigStore },
        { type: AuthService },
        { type: i2.Router },
        { type: RouteConverter },
        { type: AsyncActionService },
        { type: MessageService }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var LoginAuthGuard = /** @class */ (function () {
        function LoginAuthGuard(router, authService, systemConfigStore, appStateStore, message) {
            this.router = router;
            this.authService = authService;
            this.systemConfigStore = systemConfigStore;
            this.appStateStore = appStateStore;
            this.message = message;
        }
        LoginAuthGuard.prototype.canActivate = function () {
            var _this = this;
            var homePage = this.systemConfigStore.getHomePage();
            var homePageUrlTree = this.router.parseUrl(homePage);
            if (this.authService.isUserLoggedIn.value) {
                return homePageUrlTree;
            }
            return this.authService.fetchSessionStatus()
                .pipe(operators.take(1), operators.map(function (user) {
                if (user && user.appStatus.installed === false) {
                    return _this.router.parseUrl('install');
                }
                if (user && user.active === true) {
                    // Session is active, go to home page
                    _this.authService.setCurrentUser(user);
                    return homePageUrlTree;
                }
                // Stay on login
                return true;
            }), operators.catchError(function () { return rxjs.of(true); }));
        };
        return LoginAuthGuard;
    }());
    LoginAuthGuard.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function LoginAuthGuard_Factory() { return new LoginAuthGuard(i0__namespace.ɵɵinject(i2__namespace.Router), i0__namespace.ɵɵinject(AuthService), i0__namespace.ɵɵinject(SystemConfigStore), i0__namespace.ɵɵinject(AppStateStore), i0__namespace.ɵɵinject(MessageService)); }, token: LoginAuthGuard, providedIn: "root" });
    LoginAuthGuard.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    LoginAuthGuard.ctorParameters = function () { return [
        { type: i2.Router },
        { type: AuthService },
        { type: SystemConfigStore },
        { type: AppStateStore },
        { type: MessageService }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var ExtensionLoader = /** @class */ (function () {
        function ExtensionLoader(systemConfigStore, compiler) {
            this.systemConfigStore = systemConfigStore;
            this.compiler = compiler;
        }
        /**
         * Load all extensions
         *
         * @param {object} injector Injector
         */
        ExtensionLoader.prototype.load = function (injector) {
            var _this = this;
            var extensions = this.systemConfigStore.getConfigValue('extensions');
            var extensionModules$ = {};
            Object.keys(extensions).forEach(function (extensionName) {
                if (!extensions[extensionName]) {
                    return;
                }
                var config = extensions[extensionName];
                if (!config.remoteEntry || !config.remoteName) {
                    return;
                }
                if (!config.enabled || i5.isFalse(config.enabled)) {
                    return;
                }
                extensionModules$[extensionName] = _this.loadExtension(config, injector);
            });
            if (Object.keys(extensionModules$).length < 1) {
                return rxjs.of({});
            }
            return rxjs.forkJoin(extensionModules$);
        };
        /**
         * Load single extension
         *
         * @param {object} config ExtensionConfig
         * @param {object} injector Injector
         */
        ExtensionLoader.prototype.loadExtension = function (config, injector) {
            var promise = function () { return moduleFederation.loadRemoteModule({
                remoteEntry: config.remoteEntry,
                remoteName: config.remoteName,
                exposedModule: './Module'
            }).then(function (m) { return m.ExtensionModule; }); };
            return this.loadModuleFactory(promise).pipe(operators.map(function (factory) {
                return factory.create(injector);
            }));
        };
        /**
         * Check if object is a promise
         * @param {} obj promise
         * @returns {boolean} isPromise
         */
        ExtensionLoader.prototype.isPromise = function (obj) {
            return !!obj && typeof obj.then === 'function';
        };
        /**
         * Wrap into observable
         *
         * @param {object} value to wrap
         * @returns {object} observable
         */
        ExtensionLoader.prototype.wrapIntoObservable = function (value) {
            if (rxjs.isObservable(value)) {
                // @ts-ignore
                return value;
            }
            if (this.isPromise(value)) {
                // @ts-ignore
                return rxjs.from(Promise.resolve(value));
            }
            // @ts-ignore
            return rxjs.of(value);
        };
        /**
         * Load module factory and return observable
         * @param {function} loadChildren
         */
        ExtensionLoader.prototype.loadModuleFactory = function (loadChildren) {
            var _this = this;
            return this.wrapIntoObservable(loadChildren()).pipe(operators.mergeMap(function (t) {
                if (t instanceof i0.NgModuleFactory) {
                    return rxjs.of(t);
                }
                else {
                    return rxjs.from(_this.compiler.compileModuleAsync(t));
                }
            }));
        };
        return ExtensionLoader;
    }());
    ExtensionLoader.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function ExtensionLoader_Factory() { return new ExtensionLoader(i0__namespace.ɵɵinject(SystemConfigStore), i0__namespace.ɵɵinject(i0__namespace.Compiler)); }, token: ExtensionLoader, providedIn: "root" });
    ExtensionLoader.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    ExtensionLoader.ctorParameters = function () { return [
        { type: SystemConfigStore },
        { type: i0.Compiler }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var BaseMetadataResolver = /** @class */ (function () {
        function BaseMetadataResolver(systemConfigStore, languageStore, navigationStore, userPreferenceStore, themeImagesStore, appState, moduleNameMapper, messageService) {
            this.systemConfigStore = systemConfigStore;
            this.languageStore = languageStore;
            this.navigationStore = navigationStore;
            this.userPreferenceStore = userPreferenceStore;
            this.themeImagesStore = themeImagesStore;
            this.appState = appState;
            this.moduleNameMapper = moduleNameMapper;
            this.messageService = messageService;
        }
        BaseMetadataResolver.prototype.resolve = function (route) {
            var _this = this;
            var streams$ = {};
            if (this.isToLoadNavigation(route)) {
                streams$.navigation = this.navigationStore.load();
            }
            if (this.isToLoadConfigs(route)) {
                var configs$ = this.systemConfigStore.load();
                if (this.isToLoadLanguageStrings(route)) {
                    var langStrings_1 = this.getLanguagesToLoad(route);
                    configs$ = configs$.pipe(operators.map(function (configs) {
                        var language = configs.default_language.value;
                        var storedLanguage = _this.languageStore.getCurrentLanguage();
                        if (storedLanguage) {
                            language = storedLanguage;
                        }
                        return _this.languageStore.load(language, langStrings_1);
                    }), operators.concatAll(), operators.toArray());
                }
                streams$.configs = configs$;
            }
            if (this.isToLoadUserPreferences(route)) {
                streams$.preferences = this.userPreferenceStore.load();
            }
            var parallelStream$ = rxjs.forkJoin(streams$);
            return parallelStream$.pipe(operators.map(function (data) {
                var theme = null;
                if (_this.systemConfigStore.getConfigValue('default_theme')) {
                    theme = _this.systemConfigStore.getConfigValue('default_theme');
                }
                if (_this.userPreferenceStore.getUserPreference('user_theme')) {
                    theme = _this.userPreferenceStore.getUserPreference('user_theme');
                }
                if (_this.themeImagesStore.getTheme()) {
                    theme = _this.themeImagesStore.getTheme();
                }
                if (theme !== null) {
                    return _this.themeImagesStore.load(theme);
                }
                return data;
            }), operators.concatAll(), operators.toArray(), operators.tap(function () { return _this.appState.setLoaded(true); }));
        };
        /**
         * Get Languages to Load
         *
         * @param {{}} route activated
         * @returns {string[]} languages
         */
        BaseMetadataResolver.prototype.getLanguagesToLoad = function (route) {
            var langStrings = this.languageStore.getAvailableStringsTypes();
            if (this.isToLoadNavigation(route)) {
                return langStrings;
            }
            if (!route.data || !route.data.load) {
                return [];
            }
            if (Array.isArray(route.data.load.languageStrings)) {
                langStrings = route.data.load.languageStrings;
            }
            return langStrings;
        };
        /**
         * Should load language strings. True if navigation is to load
         *
         * @param {{}} route activated
         * @returns {boolean} is to load
         */
        BaseMetadataResolver.prototype.isToLoadLanguageStrings = function (route) {
            if (this.isToLoadNavigation(route)) {
                return true;
            }
            if (!route.data || !route.data.load) {
                return false;
            }
            return Array.isArray(route.data.load.languageStrings) || route.data.load.languageStrings === true;
        };
        /**
         * Should load navigation. If not set defaults to true
         *
         * @param {{}} route activated
         * @returns {boolean} is to load
         */
        BaseMetadataResolver.prototype.isToLoadConfigs = function (route) {
            if (!route.data || !route.data.load) {
                return true;
            }
            return route.data.load.configs !== false;
        };
        /**
         * Should load navigation, If not set defaults to true
         *
         * @param {{}} route activated
         * @returns {boolean} is to load
         */
        BaseMetadataResolver.prototype.isToLoadNavigation = function (route) {
            if (!route.data || !route.data.load) {
                return true;
            }
            return route.data.load.navigation !== false;
        };
        /**
         * Should load user preferences. If not set defaults to true
         *
         * @param {{}} route activated
         * @returns {boolean} is to load
         */
        BaseMetadataResolver.prototype.isToLoadUserPreferences = function (route) {
            if (!route.data || !route.data.load) {
                return true;
            }
            return route.data.load.preferences !== false;
        };
        BaseMetadataResolver.prototype.addMetadataLoadErrorMessage = function () {
            var message = this.languageStore.getAppString('LBL_ERROR_FETCHING_METADATA');
            if (!message) {
                message = 'Error occurred while fetching metadata';
            }
            this.messageService.addDangerMessage(message);
        };
        /**
         * Calculate the active module
         *
         * @param {{}} route active
         * @returns {string} active module
         */
        BaseMetadataResolver.prototype.calculateActiveModule = function (route) {
            var module = route.params.module;
            if (!module) {
                module = route.data.module;
            }
            var parentModuleParam = this.getParentModuleMap()[module] || '';
            var parentModule = route.queryParams[parentModuleParam] || '';
            if (parentModule) {
                module = this.moduleNameMapper.toFrontend(parentModule);
            }
            return module;
        };
        /**
         * Get Parent Module Map
         *
         * @returns {{}} parent module map
         */
        BaseMetadataResolver.prototype.getParentModuleMap = function () {
            return {
                'merge-records': 'return_module',
                import: 'import_module'
            };
        };
        return BaseMetadataResolver;
    }());
    BaseMetadataResolver.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function BaseMetadataResolver_Factory() { return new BaseMetadataResolver(i0__namespace.ɵɵinject(SystemConfigStore), i0__namespace.ɵɵinject(LanguageStore), i0__namespace.ɵɵinject(NavigationStore), i0__namespace.ɵɵinject(UserPreferenceStore), i0__namespace.ɵɵinject(ThemeImagesStore), i0__namespace.ɵɵinject(AppStateStore), i0__namespace.ɵɵinject(ModuleNameMapper), i0__namespace.ɵɵinject(MessageService)); }, token: BaseMetadataResolver, providedIn: "root" });
    BaseMetadataResolver.decorators = [
        { type: i0.Injectable, args: [{ providedIn: 'root' },] }
    ];
    BaseMetadataResolver.ctorParameters = function () { return [
        { type: SystemConfigStore },
        { type: LanguageStore },
        { type: NavigationStore },
        { type: UserPreferenceStore },
        { type: ThemeImagesStore },
        { type: AppStateStore },
        { type: ModuleNameMapper },
        { type: MessageService }
    ]; };

    var BaseModuleResolver = /** @class */ (function (_super) {
        __extends(BaseModuleResolver, _super);
        function BaseModuleResolver(systemConfigStore, languageStore, navigationStore, userPreferenceStore, themeImagesStore, moduleNameMapper, appStateStore, metadataStore, messageService, routeConverter) {
            var _this = _super.call(this, systemConfigStore, languageStore, navigationStore, userPreferenceStore, themeImagesStore, appStateStore, moduleNameMapper, messageService) || this;
            _this.systemConfigStore = systemConfigStore;
            _this.languageStore = languageStore;
            _this.navigationStore = navigationStore;
            _this.userPreferenceStore = userPreferenceStore;
            _this.themeImagesStore = themeImagesStore;
            _this.moduleNameMapper = moduleNameMapper;
            _this.appStateStore = appStateStore;
            _this.metadataStore = metadataStore;
            _this.messageService = messageService;
            _this.routeConverter = routeConverter;
            return _this;
        }
        BaseModuleResolver.prototype.resolve = function (route) {
            var _this = this;
            var routeModule = route.params.module;
            if (!routeModule) {
                routeModule = route.data.module;
            }
            return rxjs.forkJoin({
                base: _super.prototype.resolve.call(this, route),
                metadata: this.metadataStore.load(routeModule, this.metadataStore.getMetadataTypes()),
                savedSearchMeta: this.metadataStore.getMetadata('saved-search', ['recordView'])
            }).pipe(operators.tap(function () {
                var _a;
                if (routeModule) {
                    var module = _this.calculateActiveModule(route);
                    _this.appStateStore.setModule(module);
                }
                var info = _this.routeConverter.parseRouteURL(route.url);
                var action = (_a = info.action) !== null && _a !== void 0 ? _a : 'index';
                _this.appStateStore.setView(action);
            }, function () {
                _this.addMetadataLoadErrorMessage();
            }));
        };
        return BaseModuleResolver;
    }(BaseMetadataResolver));
    BaseModuleResolver.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function BaseModuleResolver_Factory() { return new BaseModuleResolver(i0__namespace.ɵɵinject(SystemConfigStore), i0__namespace.ɵɵinject(LanguageStore), i0__namespace.ɵɵinject(NavigationStore), i0__namespace.ɵɵinject(UserPreferenceStore), i0__namespace.ɵɵinject(ThemeImagesStore), i0__namespace.ɵɵinject(ModuleNameMapper), i0__namespace.ɵɵinject(AppStateStore), i0__namespace.ɵɵinject(MetadataStore), i0__namespace.ɵɵinject(MessageService), i0__namespace.ɵɵinject(RouteConverter)); }, token: BaseModuleResolver, providedIn: "root" });
    BaseModuleResolver.decorators = [
        { type: i0.Injectable, args: [{ providedIn: 'root' },] }
    ];
    BaseModuleResolver.ctorParameters = function () { return [
        { type: SystemConfigStore },
        { type: LanguageStore },
        { type: NavigationStore },
        { type: UserPreferenceStore },
        { type: ThemeImagesStore },
        { type: ModuleNameMapper },
        { type: AppStateStore },
        { type: MetadataStore },
        { type: MessageService },
        { type: RouteConverter }
    ]; };

    var BaseRecordResolver = /** @class */ (function (_super) {
        __extends(BaseRecordResolver, _super);
        function BaseRecordResolver(systemConfigStore, languageStore, navigationStore, metadataStore, userPreferenceStore, themeImagesStore, moduleNameMapper, actionNameMapper, appStateStore, messageService, routeConverter, router) {
            var _this = _super.call(this, systemConfigStore, languageStore, navigationStore, userPreferenceStore, themeImagesStore, moduleNameMapper, appStateStore, metadataStore, messageService, routeConverter) || this;
            _this.systemConfigStore = systemConfigStore;
            _this.languageStore = languageStore;
            _this.navigationStore = navigationStore;
            _this.metadataStore = metadataStore;
            _this.userPreferenceStore = userPreferenceStore;
            _this.themeImagesStore = themeImagesStore;
            _this.moduleNameMapper = moduleNameMapper;
            _this.actionNameMapper = actionNameMapper;
            _this.appStateStore = appStateStore;
            _this.messageService = messageService;
            _this.routeConverter = routeConverter;
            _this.router = router;
            return _this;
        }
        BaseRecordResolver.prototype.resolve = function (route) {
            var routeModule = route.params.module;
            if (!routeModule) {
                routeModule = route.data.module;
            }
            return rxjs.forkJoin({
                base: _super.prototype.resolve.call(this, route),
                metadata: this.metadataStore.load(routeModule, this.metadataStore.getMetadataTypes()),
            });
        };
        return BaseRecordResolver;
    }(BaseModuleResolver));
    BaseRecordResolver.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function BaseRecordResolver_Factory() { return new BaseRecordResolver(i0__namespace.ɵɵinject(SystemConfigStore), i0__namespace.ɵɵinject(LanguageStore), i0__namespace.ɵɵinject(NavigationStore), i0__namespace.ɵɵinject(MetadataStore), i0__namespace.ɵɵinject(UserPreferenceStore), i0__namespace.ɵɵinject(ThemeImagesStore), i0__namespace.ɵɵinject(ModuleNameMapper), i0__namespace.ɵɵinject(ActionNameMapper), i0__namespace.ɵɵinject(AppStateStore), i0__namespace.ɵɵinject(MessageService), i0__namespace.ɵɵinject(RouteConverter), i0__namespace.ɵɵinject(i2__namespace.Router)); }, token: BaseRecordResolver, providedIn: "root" });
    BaseRecordResolver.decorators = [
        { type: i0.Injectable, args: [{ providedIn: 'root' },] }
    ];
    BaseRecordResolver.ctorParameters = function () { return [
        { type: SystemConfigStore },
        { type: LanguageStore },
        { type: NavigationStore },
        { type: MetadataStore },
        { type: UserPreferenceStore },
        { type: ThemeImagesStore },
        { type: ModuleNameMapper },
        { type: ActionNameMapper },
        { type: AppStateStore },
        { type: MessageService },
        { type: RouteConverter },
        { type: i2.Router }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var RecoverPasswordService = /** @class */ (function () {
        function RecoverPasswordService(processService, appStateStore) {
            this.processService = processService;
            this.appStateStore = appStateStore;
            this.processType = 'recover-password';
        }
        /**
         * Send recover password request
         *
         * @param {string} userName to check
         * @param {string} email to check
         * @returns {{}} Observable<Process>
         */
        RecoverPasswordService.prototype.run = function (userName, email) {
            var _this = this;
            var options = {
                username: userName,
                useremail: email
            };
            this.appStateStore.updateLoading('recover-password', true);
            return this.processService
                .submit(this.processType, options)
                .pipe(operators.tap(function () { return _this.appStateStore.updateLoading('recover-password', false); }), operators.catchError(function (err) {
                _this.appStateStore.updateLoading('recover-password', false);
                throw err;
            }));
        };
        return RecoverPasswordService;
    }());
    RecoverPasswordService.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function RecoverPasswordService_Factory() { return new RecoverPasswordService(i0__namespace.ɵɵinject(ProcessService), i0__namespace.ɵɵinject(AppStateStore)); }, token: RecoverPasswordService, providedIn: "root" });
    RecoverPasswordService.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root',
                },] }
    ];
    RecoverPasswordService.ctorParameters = function () { return [
        { type: ProcessService },
        { type: AppStateStore }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var UserService = /** @class */ (function () {
        function UserService(http) {
            this.http = http;
        }
        UserService.prototype.getAll = function () {
            return this.http.get('users');
        };
        return UserService;
    }());
    UserService.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function UserService_Factory() { return new UserService(i0__namespace.ɵɵinject(i1__namespace$2.HttpClient)); }, token: UserService, providedIn: "root" });
    UserService.decorators = [
        { type: i0.Injectable, args: [{ providedIn: 'root' },] }
    ];
    UserService.ctorParameters = function () { return [
        { type: i1$3.HttpClient }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var SeriesStatisticsStoreFactory = /** @class */ (function () {
        function SeriesStatisticsStoreFactory(fetchGQL) {
            this.fetchGQL = fetchGQL;
        }
        SeriesStatisticsStoreFactory.prototype.create = function () {
            return new SeriesStatisticsStore(this.fetchGQL);
        };
        return SeriesStatisticsStoreFactory;
    }());
    SeriesStatisticsStoreFactory.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function SeriesStatisticsStoreFactory_Factory() { return new SeriesStatisticsStoreFactory(i0__namespace.ɵɵinject(StatisticsFetchGQL)); }, token: SeriesStatisticsStoreFactory, providedIn: "root" });
    SeriesStatisticsStoreFactory.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root',
                },] }
    ];
    SeriesStatisticsStoreFactory.ctorParameters = function () { return [
        { type: StatisticsFetchGQL }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var StatisticsStoreFactory = /** @class */ (function () {
        function StatisticsStoreFactory(fetchGQL) {
            this.fetchGQL = fetchGQL;
        }
        StatisticsStoreFactory.prototype.create = function () {
            return new StatisticsStore(this.fetchGQL);
        };
        return StatisticsStoreFactory;
    }());
    StatisticsStoreFactory.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function StatisticsStoreFactory_Factory() { return new StatisticsStoreFactory(i0__namespace.ɵɵinject(StatisticsFetchGQL)); }, token: StatisticsStoreFactory, providedIn: "root" });
    StatisticsStoreFactory.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root',
                },] }
    ];
    StatisticsStoreFactory.ctorParameters = function () { return [
        { type: StatisticsFetchGQL }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var ClassicViewUiComponent = /** @class */ (function () {
        function ClassicViewUiComponent(route, router, sanitizer, routeConverter, auth, ngZone, systemConfigs) {
            this.route = route;
            this.router = router;
            this.sanitizer = sanitizer;
            this.routeConverter = routeConverter;
            this.auth = auth;
            this.ngZone = ngZone;
            this.systemConfigs = systemConfigs;
            this.iframe = null;
        }
        ClassicViewUiComponent.prototype.ngOnInit = function () {
            this.url = this.route.snapshot.data.legacyUrl;
        };
        ClassicViewUiComponent.prototype.ngAfterViewInit = function () {
            this.initIframe();
        };
        ClassicViewUiComponent.prototype.ngOnDestroy = function () {
            this.cleanObservers();
            this.iframe = null;
            var placeholder = this.wrapper;
            if (this.wrapper.firstChild) {
                placeholder.removeChild(placeholder.firstChild);
            }
            placeholder.innerHTML = '<iframe></iframe>';
            this.wrapper = null;
        };
        ClassicViewUiComponent.prototype.cleanObservers = function () {
            if (this.iframeResizeHandler) {
                this.iframeResizeHandler.destroy();
                this.iframeResizeHandler = null;
            }
            if (this.iframePageChangeHandler) {
                this.iframePageChangeHandler.destroy();
                this.iframePageChangeHandler = null;
            }
        };
        ClassicViewUiComponent.prototype.initIframe = function () {
            this.wrapper = this.dataContainer.nativeElement;
            if (this.wrapper.firstChild) {
                this.wrapper.removeChild(this.wrapper.firstChild);
            }
            var iframe = document.createElement('iframe');
            iframe.src = this.url;
            this.wrapper.appendChild(iframe);
            this.iframe = iframe;
            this.iframe.style.display = 'block';
            this.initObservers();
        };
        ClassicViewUiComponent.prototype.initObservers = function () {
            this.iframePageChangeHandler = this.buildIframePageChangeObserver();
            this.iframeResizeHandler = this.buildIframeResizeHandlerHandler();
            if (this.iframePageChangeHandler) {
                this.iframePageChangeHandler.init();
            }
        };
        ClassicViewUiComponent.prototype.onPageChange = function (newLocation) {
            var _this = this;
            if (this.shouldRedirect(newLocation) === false) {
                this.iframe.style.display = 'block';
                this.cleanObservers();
                this.initObservers();
                return;
            }
            var location = this.routeConverter.toFrontEndRoute(newLocation);
            if (location === '/users/login') {
                this.auth.logout('LBL_SESSION_EXPIRED');
                return;
            }
            this.ngZone.run(function () { return _this.router.navigateByUrl(location).then(); }).then();
        };
        ClassicViewUiComponent.prototype.onIFrameLoad = function () {
            // Do not show scroll at any time, to avoid flickering
            this.iframe.contentWindow.document.body.style.overflow = 'hidden';
            // Init resize handler
            this.iframeResizeHandler.init(this.iframe);
        };
        ClassicViewUiComponent.prototype.onIFrameUnload = function () {
            // hide iframe, while being re-directed
            this.iframe.style.display = 'none';
            this.iframeResizeHandler.destroy();
        };
        ClassicViewUiComponent.prototype.buildIframePageChangeObserver = function () {
            return new IframePageChangeObserver(this.iframe, this.onPageChange.bind(this), this.onIFrameLoad.bind(this), this.onIFrameUnload.bind(this));
        };
        ClassicViewUiComponent.prototype.buildIframeResizeHandlerHandler = function () {
            return new IframeResizeHandlerHandler();
        };
        /**
         * Check if should re-direct to link or if it was excluded
         *
         * @param {string} legacyLink to check
         * @returns {boolean} should redirect
         */
        ClassicViewUiComponent.prototype.shouldRedirect = function (legacyLink) {
            if (legacyLink && legacyLink.includes('/#/')) {
                return true;
            }
            var routeInfo = this.routeConverter.parse(legacyLink);
            // if no route or no module, don't re-direct
            if (!routeInfo || !routeInfo.module) {
                return false;
            }
            var reuse = this.routeConverter.matchesActiveRoute(this.route, routeInfo);
            if (reuse === true) {
                return false;
            }
            if (!routeInfo.action) {
                return true;
            }
            return this.toExclude(routeInfo);
        };
        /**
         * Check if given route is to exclude from redirection
         *
         * @param {object} routeInfo to check
         * @returns {boolean} is to exclude
         */
        ClassicViewUiComponent.prototype.toExclude = function (routeInfo) {
            var exclusions = this.systemConfigs.getConfigValue('classicview_routing_exclusions');
            if (!exclusions || Object.keys(exclusions).length === 0) {
                return true;
            }
            // if action is excluded for any module, don't re-direct
            if (exclusions.any && exclusions.any.includes(routeInfo.action)) {
                return false;
            }
            if (!exclusions[routeInfo.module]) {
                return true;
            }
            // if module action is excluded, don't re-direct
            var moduleExclusions = exclusions[routeInfo.module];
            return !(moduleExclusions && moduleExclusions.includes(routeInfo.action));
        };
        return ClassicViewUiComponent;
    }());
    ClassicViewUiComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-classic-view-ui',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<div class=\"classic-view-container\" #dataContainer>\n    <iframe></iframe>\n</div>\n"
                },] }
    ];
    ClassicViewUiComponent.ctorParameters = function () { return [
        { type: i2.ActivatedRoute },
        { type: i2.Router },
        { type: platformBrowser.DomSanitizer },
        { type: RouteConverter },
        { type: AuthService },
        { type: i0.NgZone },
        { type: SystemConfigStore }
    ]; };
    ClassicViewUiComponent.propDecorators = {
        dataContainer: [{ type: i0.ViewChild, args: ['dataContainer', { static: true },] }]
    };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var ClassicViewUiModule = /** @class */ (function () {
        function ClassicViewUiModule() {
        }
        return ClassicViewUiModule;
    }());
    ClassicViewUiModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [
                        ClassicViewUiComponent,
                    ],
                    exports: [
                        ClassicViewUiComponent
                    ],
                    imports: [
                        common.CommonModule
                    ]
                },] }
    ];

    var ClassicViewResolver = /** @class */ (function (_super) {
        __extends(ClassicViewResolver, _super);
        function ClassicViewResolver(systemConfigStore, languageStore, navigationStore, userPreferenceStore, themeImagesStore, moduleNameMapper, routeConverter, messageService, appStateStore) {
            var _this = _super.call(this, systemConfigStore, languageStore, navigationStore, userPreferenceStore, themeImagesStore, appStateStore, moduleNameMapper, messageService) || this;
            _this.systemConfigStore = systemConfigStore;
            _this.languageStore = languageStore;
            _this.navigationStore = navigationStore;
            _this.userPreferenceStore = userPreferenceStore;
            _this.themeImagesStore = themeImagesStore;
            _this.moduleNameMapper = moduleNameMapper;
            _this.routeConverter = routeConverter;
            _this.messageService = messageService;
            _this.appStateStore = appStateStore;
            return _this;
        }
        ClassicViewResolver.prototype.resolve = function (route) {
            var _this = this;
            return _super.prototype.resolve.call(this, route).pipe(operators.map(function () { return _this.routeConverter.toLegacy(route.params, route.queryParams); }), operators.tap(function () {
                var _a;
                if (route.params.module) {
                    var module = _this.calculateActiveModule(route);
                    _this.appStateStore.setModule(module);
                }
                var info = _this.routeConverter.parseRouteURL(route.url);
                var action = (_a = info.action) !== null && _a !== void 0 ? _a : 'index';
                _this.appStateStore.setView(action);
            }, function () {
                _this.addMetadataLoadErrorMessage();
            }));
        };
        return ClassicViewResolver;
    }(BaseMetadataResolver));
    ClassicViewResolver.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function ClassicViewResolver_Factory() { return new ClassicViewResolver(i0__namespace.ɵɵinject(SystemConfigStore), i0__namespace.ɵɵinject(LanguageStore), i0__namespace.ɵɵinject(NavigationStore), i0__namespace.ɵɵinject(UserPreferenceStore), i0__namespace.ɵɵinject(ThemeImagesStore), i0__namespace.ɵɵinject(ModuleNameMapper), i0__namespace.ɵɵinject(RouteConverter), i0__namespace.ɵɵinject(MessageService), i0__namespace.ɵɵinject(AppStateStore)); }, token: ClassicViewResolver, providedIn: "root" });
    ClassicViewResolver.decorators = [
        { type: i0.Injectable, args: [{ providedIn: 'root' },] }
    ];
    ClassicViewResolver.ctorParameters = function () { return [
        { type: SystemConfigStore },
        { type: LanguageStore },
        { type: NavigationStore },
        { type: UserPreferenceStore },
        { type: ThemeImagesStore },
        { type: ModuleNameMapper },
        { type: RouteConverter },
        { type: MessageService },
        { type: AppStateStore }
    ]; };

    var CreateViewStore = /** @class */ (function (_super) {
        __extends(CreateViewStore, _super);
        function CreateViewStore(recordFetchGQL, recordSaveGQL, appStateStore, languageStore, navigationStore, moduleNavigation, metadataStore, localStorage, message, subpanelFactory, recordManager, statisticsBatch, auth, recordStoreFactory) {
            var _this = _super.call(this, recordFetchGQL, recordSaveGQL, appStateStore, languageStore, navigationStore, moduleNavigation, metadataStore, localStorage, message, subpanelFactory, recordManager, statisticsBatch, recordStoreFactory) || this;
            _this.recordFetchGQL = recordFetchGQL;
            _this.recordSaveGQL = recordSaveGQL;
            _this.appStateStore = appStateStore;
            _this.languageStore = languageStore;
            _this.navigationStore = navigationStore;
            _this.moduleNavigation = moduleNavigation;
            _this.metadataStore = metadataStore;
            _this.localStorage = localStorage;
            _this.message = message;
            _this.subpanelFactory = subpanelFactory;
            _this.recordManager = recordManager;
            _this.statisticsBatch = statisticsBatch;
            _this.auth = auth;
            _this.recordStoreFactory = recordStoreFactory;
            return _this;
        }
        /**
         * Initial record load if not cached and update state.
         * Returns observable to be used in resolver if needed
         *
         * @param {string} module to use
         * @param {string} recordID to use
         * @param {string} mode to use
         * @param {object} params to set
         * @returns {object} Observable<any>
         */
        CreateViewStore.prototype.init = function (module, recordID, mode, params) {
            if (mode === void 0) { mode = 'detail'; }
            if (params === void 0) { params = {}; }
            this.internalState.module = module;
            this.internalState.recordID = recordID;
            this.setMode(mode);
            this.parseParams(params);
            this.calculateShowWidgets();
            this.showTopWidget = false;
            this.showSubpanels = false;
            this.initRecord(params);
            return this.load();
        };
        CreateViewStore.prototype.save = function () {
            var _this = this;
            this.appStateStore.updateLoading(this.internalState.module + "-record-save-new", true);
            return this.recordStore.save().pipe(operators.catchError(function () {
                _this.message.addDangerMessageByKey('LBL_ERROR_SAVING');
                return rxjs.of({});
            }), operators.finalize(function () {
                _this.setMode('detail');
                _this.appStateStore.updateLoading(_this.internalState.module + "-record-save-new", false);
            }));
        };
        /**
         * Init record using params
         *
         * @param {object} params queryParams
         */
        CreateViewStore.prototype.initRecord = function (params) {
            if (params === void 0) { params = {}; }
            var user = this.auth.getCurrentUser();
            var blankRecord = {
                id: '',
                type: '',
                module: this.internalState.module,
                /* eslint-disable camelcase,@typescript-eslint/camelcase */
                attributes: {
                    assigned_user_id: user.id,
                    assigned_user_name: {
                        id: user.id,
                        user_name: user.userName
                    }
                }
                /* eslint-enable camelcase,@typescript-eslint/camelcase */
            };
            this.recordManager.injectParamFields(params, blankRecord, this.getVardefs());
            this.recordStore.init(blankRecord);
        };
        /**
         * Load / reload record using current pagination and criteria
         *
         * @returns {object} Observable<RecordViewState>
         */
        CreateViewStore.prototype.load = function () {
            return rxjs.of(this.recordStore.getBaseRecord()).pipe(operators.shareReplay());
        };
        /**
         * Calculate if widgets are to display
         */
        CreateViewStore.prototype.calculateShowWidgets = function () {
            var show = false;
            this.showSidebarWidgets = show;
            this.widgets = show;
        };
        return CreateViewStore;
    }(RecordViewStore));
    CreateViewStore.decorators = [
        { type: i0.Injectable }
    ];
    CreateViewStore.ctorParameters = function () { return [
        { type: RecordFetchGQL },
        { type: RecordSaveGQL },
        { type: AppStateStore },
        { type: LanguageStore },
        { type: NavigationStore },
        { type: ModuleNavigation },
        { type: MetadataStore },
        { type: LocalStorageService },
        { type: MessageService },
        { type: SubpanelStoreFactory },
        { type: RecordManager },
        { type: StatisticsBatch },
        { type: AuthService },
        { type: RecordStoreFactory }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var CreateRecordComponent = /** @class */ (function () {
        function CreateRecordComponent(appState, recordStore, route) {
            this.appState = appState;
            this.recordStore = recordStore;
            this.route = route;
            this.vm$ = null;
            this.showStatusBar = false;
        }
        CreateRecordComponent.prototype.ngOnInit = function () {
            var mode = 'detail';
            var data = (this.route.snapshot && this.route.snapshot.data) || {};
            if (data.mode) {
                mode = data.mode;
            }
            var params = (this.route.snapshot && this.route.snapshot.queryParams) || {};
            this.recordSub = this.recordStore.init(this.appState.getModule(), this.route.snapshot.params.record, mode, params).subscribe();
            this.vm$ = this.recordStore.vm$;
        };
        CreateRecordComponent.prototype.ngOnDestroy = function () {
            if (this.recordSub) {
                this.recordSub.unsubscribe();
            }
            this.recordStore.destroy();
        };
        return CreateRecordComponent;
    }());
    CreateRecordComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-create-record',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n\n<!-- Start Record View Section -->\n<div *ngIf=\"(vm$ | async) as vm\" class=\"record-view\">\n    <scrm-record-header></scrm-record-header>\n    <div class=\"record-view-hr-container\">\n        <hr class=\"record-view-hr\">\n    </div>\n    <scrm-status-bar *ngIf=\"showStatusBar\"></scrm-status-bar>\n    <scrm-record-container></scrm-record-container>\n</div>\n<!-- End Record View Section -->\n",
                    providers: [
                        CreateViewStore,
                        {
                            provide: RecordViewStore,
                            useExisting: CreateViewStore
                        }
                    ]
                },] }
    ];
    CreateRecordComponent.ctorParameters = function () { return [
        { type: AppStateStore },
        { type: CreateViewStore },
        { type: i2.ActivatedRoute }
    ]; };

    var SidebarWidgetAdapter = /** @class */ (function () {
        function SidebarWidgetAdapter(store, metadata) {
            var _this = this;
            this.store = store;
            this.metadata = metadata;
            this.config$ = rxjs.combineLatest([
                this.metadata.recordViewMetadata$, this.store.showSidebarWidgets$
            ]).pipe(operators.map(function (_a) {
                var _b = __read(_a, 2), metadata = _b[0], show = _b[1];
                if (metadata.sidebarWidgets && metadata.sidebarWidgets.length) {
                    metadata.sidebarWidgets.forEach(function (widget) {
                        if (widget && widget.refreshOn === 'data-update') {
                            widget.reload$ = _this.store.record$.pipe(operators.map(function () { return true; }));
                        }
                        if (widget) {
                            widget.subpanelReload$ = _this.store.subpanelReload$;
                        }
                    });
                }
                return {
                    widgets: metadata.sidebarWidgets || [],
                    show: show
                };
            }));
        }
        return SidebarWidgetAdapter;
    }());
    SidebarWidgetAdapter.decorators = [
        { type: i0.Injectable }
    ];
    SidebarWidgetAdapter.ctorParameters = function () { return [
        { type: RecordViewStore },
        { type: MetadataStore }
    ]; };

    var RecordActionHandler = /** @class */ (function (_super) {
        __extends(RecordActionHandler, _super);
        function RecordActionHandler() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        RecordActionHandler.prototype.checkRecordAccess = function (data, defaultAcls) {
            if (defaultAcls === void 0) { defaultAcls = []; }
            var _a, _b;
            var record = data.store.recordStore.getBaseRecord();
            var acls = (_a = record.acls) !== null && _a !== void 0 ? _a : [];
            if (!acls || !acls.length) {
                return false;
            }
            var action = (_b = data.action) !== null && _b !== void 0 ? _b : null;
            return this.checkAccess(action, acls, defaultAcls);
        };
        /**
         * Navigate back
         * @param navigation
         * @param params
         * @param id
         * @param moduleName
         * @param record
         */
        RecordActionHandler.prototype.navigateBack = function (navigation, params, id, moduleName, record) {
            var returnModule = navigation.getReturnModule(params);
            var returnAction = navigation.getReturnAction(params);
            var returnId = navigation.getReturnId(params);
            if (id === returnId) {
                return;
            }
            if (returnModule === moduleName &&
                returnAction === 'record' &&
                returnId !== id) {
                return;
            }
            if (!returnModule || !returnAction) {
                return;
            }
            navigation.navigateBack(record, moduleName, params);
        };
        return RecordActionHandler;
    }(i5.ActionHandler));

    var RecordCancelAction = /** @class */ (function (_super) {
        __extends(RecordCancelAction, _super);
        function RecordCancelAction(modalService, navigation) {
            var _this = _super.call(this) || this;
            _this.modalService = modalService;
            _this.navigation = navigation;
            _this.key = 'cancel';
            _this.modes = ['edit', 'detail'];
            return _this;
        }
        RecordCancelAction.prototype.run = function (data) {
            if (data.store.recordStore.isDirty()) {
                this.showConfirmationModal(data);
                return;
            }
            this.cancel(data);
        };
        RecordCancelAction.prototype.shouldDisplay = function () {
            return true;
        };
        RecordCancelAction.prototype.cancel = function (data) {
            var params = data.store.params;
            var moduleName = data.store.getModuleName();
            var id = data.store.getRecordId();
            var record = data.store.getBaseRecord();
            this.navigateBack(this.navigation, params, id, moduleName, record);
            data.store.recordStore.resetStaging();
            data.store.setMode('detail');
        };
        RecordCancelAction.prototype.showConfirmationModal = function (data) {
            var _this = this;
            var modal = this.modalService.open(MessageModalComponent);
            modal.componentInstance.textKey = 'WARN_UNSAVED_CHANGES';
            modal.componentInstance.buttons = [
                {
                    labelKey: 'LBL_CANCEL',
                    klass: ['btn-secondary'],
                    onClick: function (activeModal) { return activeModal.dismiss(); }
                },
                {
                    labelKey: 'LBL_PROCEED',
                    klass: ['btn-main'],
                    onClick: function (activeModal) {
                        _this.cancel(data);
                        activeModal.close();
                    }
                },
            ];
        };
        return RecordCancelAction;
    }(RecordActionHandler));
    RecordCancelAction.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function RecordCancelAction_Factory() { return new RecordCancelAction(i0__namespace.ɵɵinject(i1__namespace$3.NgbModal), i0__namespace.ɵɵinject(ModuleNavigation)); }, token: RecordCancelAction, providedIn: "root" });
    RecordCancelAction.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    RecordCancelAction.ctorParameters = function () { return [
        { type: i1$2.NgbModal },
        { type: ModuleNavigation }
    ]; };

    var RecordSaveAction = /** @class */ (function (_super) {
        __extends(RecordSaveAction, _super);
        function RecordSaveAction(message, navigation) {
            var _this = _super.call(this) || this;
            _this.message = message;
            _this.navigation = navigation;
            _this.key = 'save';
            _this.modes = ['edit'];
            return _this;
        }
        RecordSaveAction.prototype.run = function (data) {
            var _this = this;
            data.store.recordStore.validate().pipe(operators.take(1)).subscribe(function (valid) {
                if (valid) {
                    data.store.save().pipe(operators.take(1)).subscribe(function (record) {
                        var params = data.store.params;
                        var moduleName = data.store.getModuleName();
                        var id = record.id;
                        _this.navigateBack(_this.navigation, params, id, moduleName, record);
                    });
                    return;
                }
                _this.message.addWarningMessageByKey('LBL_VALIDATION_ERRORS');
            });
        };
        RecordSaveAction.prototype.shouldDisplay = function (data) {
            return true;
        };
        return RecordSaveAction;
    }(RecordActionHandler));
    RecordSaveAction.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function RecordSaveAction_Factory() { return new RecordSaveAction(i0__namespace.ɵɵinject(MessageService), i0__namespace.ɵɵinject(ModuleNavigation)); }, token: RecordSaveAction, providedIn: "root" });
    RecordSaveAction.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    RecordSaveAction.ctorParameters = function () { return [
        { type: MessageService },
        { type: ModuleNavigation }
    ]; };

    var RecordToggleWidgetsAction = /** @class */ (function (_super) {
        __extends(RecordToggleWidgetsAction, _super);
        function RecordToggleWidgetsAction() {
            var _this = _super.call(this) || this;
            _this.key = 'toggle-widgets';
            _this.modes = ['detail', 'edit'];
            return _this;
        }
        RecordToggleWidgetsAction.prototype.run = function (data) {
            data.store.showSidebarWidgets = !data.store.showSidebarWidgets;
        };
        RecordToggleWidgetsAction.prototype.shouldDisplay = function (data) {
            return data.store.widgets;
        };
        RecordToggleWidgetsAction.prototype.getStatus = function (data) {
            return data.store.showSidebarWidgets ? 'active' : '';
        };
        return RecordToggleWidgetsAction;
    }(RecordActionHandler));
    RecordToggleWidgetsAction.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function RecordToggleWidgetsAction_Factory() { return new RecordToggleWidgetsAction(); }, token: RecordToggleWidgetsAction, providedIn: "root" });
    RecordToggleWidgetsAction.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    RecordToggleWidgetsAction.ctorParameters = function () { return []; };

    var RecordEditAction = /** @class */ (function (_super) {
        __extends(RecordEditAction, _super);
        function RecordEditAction() {
            var _this = _super.call(this) || this;
            _this.key = 'edit';
            _this.modes = ['detail'];
            return _this;
        }
        RecordEditAction.prototype.run = function (data) {
            data.store.setMode('edit');
        };
        RecordEditAction.prototype.shouldDisplay = function (data) {
            return this.checkRecordAccess(data, ['edit']);
        };
        return RecordEditAction;
    }(RecordActionHandler));
    RecordEditAction.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function RecordEditAction_Factory() { return new RecordEditAction(); }, token: RecordEditAction, providedIn: "root" });
    RecordEditAction.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    RecordEditAction.ctorParameters = function () { return []; };

    var RecordCreateAction = /** @class */ (function (_super) {
        __extends(RecordCreateAction, _super);
        function RecordCreateAction(moduleNameMapper, router) {
            var _this = _super.call(this) || this;
            _this.moduleNameMapper = moduleNameMapper;
            _this.router = router;
            _this.key = 'create';
            _this.modes = ['detail'];
            return _this;
        }
        RecordCreateAction.prototype.run = function (data) {
            var store = data.store;
            var baseRecord = store.getBaseRecord();
            var route = '/' + store.vm.appData.module.name + '/edit';
            var module = this.moduleNameMapper.toLegacy(store.vm.appData.module.name);
            this.router.navigate([route], {
                queryParams: {
                    // eslint-disable-next-line camelcase,@typescript-eslint/camelcase
                    return_module: module,
                    // eslint-disable-next-line camelcase,@typescript-eslint/camelcase
                    return_action: 'DetailView',
                    // eslint-disable-next-line camelcase,@typescript-eslint/camelcase
                    return_record: (baseRecord && baseRecord.id) || ''
                }
            }).then();
        };
        RecordCreateAction.prototype.shouldDisplay = function (data) {
            return this.checkRecordAccess(data, ['edit']);
        };
        return RecordCreateAction;
    }(RecordActionHandler));
    RecordCreateAction.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function RecordCreateAction_Factory() { return new RecordCreateAction(i0__namespace.ɵɵinject(ModuleNameMapper), i0__namespace.ɵɵinject(i2__namespace.Router)); }, token: RecordCreateAction, providedIn: "root" });
    RecordCreateAction.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    RecordCreateAction.ctorParameters = function () { return [
        { type: ModuleNameMapper },
        { type: i2.Router }
    ]; };

    var RecordSaveNewAction = /** @class */ (function (_super) {
        __extends(RecordSaveNewAction, _super);
        function RecordSaveNewAction(message, navigation) {
            var _this = _super.call(this) || this;
            _this.message = message;
            _this.navigation = navigation;
            _this.key = 'saveNew';
            _this.modes = ['create'];
            return _this;
        }
        RecordSaveNewAction.prototype.run = function (data) {
            var _this = this;
            data.store.recordStore.validate().pipe(operators.take(1)).subscribe(function (valid) {
                if (valid) {
                    data.store.save().pipe(operators.take(1)).subscribe(function (record) {
                        var store = data.store;
                        var params = store.params;
                        var moduleName = store.getModuleName();
                        _this.navigation.navigateBack(record, moduleName, params);
                    });
                    return;
                }
                _this.message.addWarningMessageByKey('LBL_VALIDATION_ERRORS');
            });
        };
        RecordSaveNewAction.prototype.shouldDisplay = function (data) {
            return true;
        };
        return RecordSaveNewAction;
    }(RecordActionHandler));
    RecordSaveNewAction.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function RecordSaveNewAction_Factory() { return new RecordSaveNewAction(i0__namespace.ɵɵinject(MessageService), i0__namespace.ɵɵinject(ModuleNavigation)); }, token: RecordSaveNewAction, providedIn: "root" });
    RecordSaveNewAction.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    RecordSaveNewAction.ctorParameters = function () { return [
        { type: MessageService },
        { type: ModuleNavigation }
    ]; };

    var CancelCreateAction = /** @class */ (function (_super) {
        __extends(CancelCreateAction, _super);
        function CancelCreateAction(modalService, router, moduleNameMapper, actionNameMapper) {
            var _this = _super.call(this) || this;
            _this.modalService = modalService;
            _this.router = router;
            _this.moduleNameMapper = moduleNameMapper;
            _this.actionNameMapper = actionNameMapper;
            _this.key = 'cancelCreate';
            _this.modes = ['create'];
            return _this;
        }
        CancelCreateAction.prototype.run = function (data) {
            if (data.store.recordStore.isDirty()) {
                this.showConfirmationModal(data);
                return;
            }
            this.cancel(data);
        };
        CancelCreateAction.prototype.shouldDisplay = function () {
            return true;
        };
        CancelCreateAction.prototype.cancel = function (data) {
            var store = data.store;
            var returnModule = store.getModuleName();
            if (store.params.return_module) {
                returnModule = this.moduleNameMapper.toFrontend(store.params.return_module);
            }
            var returnAction = store.params.return_action || '';
            var returnId = store.params.return_id || '';
            var route = '/' + returnModule;
            if (returnAction) {
                returnAction = this.actionNameMapper.toFrontend(returnAction);
                if (returnAction !== 'record' || returnId) {
                    route += '/' + returnAction;
                }
            }
            if (returnId) {
                route += '/' + returnId;
            }
            this.router.navigate([route]).then();
        };
        CancelCreateAction.prototype.showConfirmationModal = function (data) {
            var _this = this;
            var modal = this.modalService.open(MessageModalComponent);
            modal.componentInstance.textKey = 'WARN_UNSAVED_CHANGES';
            modal.componentInstance.buttons = [
                {
                    labelKey: 'LBL_CANCEL',
                    klass: ['btn-secondary'],
                    onClick: function (activeModal) { return activeModal.dismiss(); }
                },
                {
                    labelKey: 'LBL_OK',
                    klass: ['btn-main'],
                    onClick: function (activeModal) {
                        _this.cancel(data);
                        activeModal.close();
                    }
                },
            ];
        };
        return CancelCreateAction;
    }(RecordActionHandler));
    CancelCreateAction.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function CancelCreateAction_Factory() { return new CancelCreateAction(i0__namespace.ɵɵinject(i1__namespace$3.NgbModal), i0__namespace.ɵɵinject(i2__namespace.Router), i0__namespace.ɵɵinject(ModuleNameMapper), i0__namespace.ɵɵinject(ActionNameMapper)); }, token: CancelCreateAction, providedIn: "root" });
    CancelCreateAction.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    CancelCreateAction.ctorParameters = function () { return [
        { type: i1$2.NgbModal },
        { type: i2.Router },
        { type: ModuleNameMapper },
        { type: ActionNameMapper }
    ]; };

    var AsyncProcessRecordAction = /** @class */ (function (_super) {
        __extends(AsyncProcessRecordAction, _super);
        function AsyncProcessRecordAction() {
            var _this = _super.call(this) || this;
            _this.key = 'async-process';
            _this.modes = i5.ALL_VIEW_MODES;
            return _this;
        }
        AsyncProcessRecordAction.prototype.run = function (data) {
        };
        AsyncProcessRecordAction.prototype.shouldDisplay = function (data) {
            var _a, _b;
            var defaultAcls = (_b = (_a = data === null || data === void 0 ? void 0 : data.action) === null || _a === void 0 ? void 0 : _a.acl) !== null && _b !== void 0 ? _b : [];
            if (!defaultAcls.length) {
                return true;
            }
            return this.checkRecordAccess(data, defaultAcls);
        };
        return AsyncProcessRecordAction;
    }(RecordActionHandler));
    AsyncProcessRecordAction.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function AsyncProcessRecordAction_Factory() { return new AsyncProcessRecordAction(); }, token: AsyncProcessRecordAction, providedIn: "root" });
    AsyncProcessRecordAction.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    AsyncProcessRecordAction.ctorParameters = function () { return []; };

    var RecordActionManager = /** @class */ (function (_super) {
        __extends(RecordActionManager, _super);
        function RecordActionManager(edit, create, toggleWidgets, cancel, cancelCreate, save, saveNew, async) {
            var _this = _super.call(this) || this;
            _this.edit = edit;
            _this.create = create;
            _this.toggleWidgets = toggleWidgets;
            _this.cancel = cancel;
            _this.cancelCreate = cancelCreate;
            _this.save = save;
            _this.saveNew = saveNew;
            _this.async = async;
            edit.modes.forEach(function (mode) { return _this.actions[mode][edit.key] = edit; });
            create.modes.forEach(function (mode) { return _this.actions[mode][create.key] = create; });
            toggleWidgets.modes.forEach(function (mode) { return _this.actions[mode][toggleWidgets.key] = toggleWidgets; });
            cancel.modes.forEach(function (mode) { return _this.actions[mode][cancel.key] = cancel; });
            save.modes.forEach(function (mode) { return _this.actions[mode][save.key] = save; });
            saveNew.modes.forEach(function (mode) { return _this.actions[mode][saveNew.key] = saveNew; });
            cancelCreate.modes.forEach(function (mode) { return _this.actions[mode][cancelCreate.key] = cancelCreate; });
            async.modes.forEach(function (mode) { return _this.actions[mode][async.key] = async; });
            return _this;
        }
        return RecordActionManager;
    }(BaseActionManager));
    RecordActionManager.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function RecordActionManager_Factory() { return new RecordActionManager(i0__namespace.ɵɵinject(RecordEditAction), i0__namespace.ɵɵinject(RecordCreateAction), i0__namespace.ɵɵinject(RecordToggleWidgetsAction), i0__namespace.ɵɵinject(RecordCancelAction), i0__namespace.ɵɵinject(CancelCreateAction), i0__namespace.ɵɵinject(RecordSaveAction), i0__namespace.ɵɵinject(RecordSaveNewAction), i0__namespace.ɵɵinject(AsyncProcessRecordAction)); }, token: RecordActionManager, providedIn: "root" });
    RecordActionManager.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root',
                },] }
    ];
    RecordActionManager.ctorParameters = function () { return [
        { type: RecordEditAction },
        { type: RecordCreateAction },
        { type: RecordToggleWidgetsAction },
        { type: RecordCancelAction },
        { type: CancelCreateAction },
        { type: RecordSaveAction },
        { type: RecordSaveNewAction },
        { type: AsyncProcessRecordAction }
    ]; };

    var RecordContentAdapter = /** @class */ (function () {
        function RecordContentAdapter(store, metadata, language, actions) {
            this.store = store;
            this.metadata = metadata;
            this.language = language;
            this.actions = actions;
        }
        RecordContentAdapter.prototype.getEditAction = function () {
            var data = {
                store: this.store
            };
            var action = {
                key: 'edit'
            };
            this.actions.run(action, this.store.getMode(), data);
        };
        RecordContentAdapter.prototype.getDisplayConfig = function () {
            var _this = this;
            return rxjs.combineLatest([this.metadata.recordViewMetadata$, this.store.mode$]).pipe(operators.map(function (_a) {
                var _b = __read(_a, 2), meta = _b[0], mode = _b[1];
                var layout = _this.getLayout(meta);
                var maxColumns = meta.templateMeta.maxColumns || 2;
                var tabDefs = meta.templateMeta.tabDefs;
                return {
                    layout: layout,
                    mode: mode,
                    maxColumns: maxColumns,
                    tabDefs: tabDefs
                };
            }));
        };
        RecordContentAdapter.prototype.getPanels = function () {
            var _this = this;
            return rxjs.combineLatest([this.metadata.recordViewMetadata$, this.store.stagingRecord$, this.language.vm$]).pipe(operators.map(function (_a) {
                var _b = __read(_a, 3), meta = _b[0], record = _b[1], languages = _b[2];
                var panels = [];
                var module = (record && record.module) || '';
                meta.panels.forEach(function (panelDefinition) {
                    var label = _this.language.getFieldLabel(panelDefinition.key.toUpperCase(), module, languages);
                    var panel = { label: label, key: panelDefinition.key, rows: [] };
                    panelDefinition.rows.forEach(function (rowDefinition) {
                        var row = { cols: [] };
                        rowDefinition.cols.forEach(function (cellDefinition) {
                            row.cols.push(Object.assign({}, cellDefinition));
                        });
                        panel.rows.push(row);
                    });
                    panels.push(panel);
                });
                return panels;
            }));
        };
        RecordContentAdapter.prototype.getRecord = function () {
            return this.store.stagingRecord$;
        };
        RecordContentAdapter.prototype.getLayout = function (recordMeta) {
            var layout = 'panels';
            if (recordMeta.templateMeta.useTabs) {
                layout = 'tabs';
            }
            return layout;
        };
        return RecordContentAdapter;
    }());
    RecordContentAdapter.decorators = [
        { type: i0.Injectable }
    ];
    RecordContentAdapter.ctorParameters = function () { return [
        { type: RecordViewStore },
        { type: MetadataStore },
        { type: LanguageStore },
        { type: RecordActionManager }
    ]; };

    var TopWidgetAdapter = /** @class */ (function () {
        function TopWidgetAdapter(store, metadata) {
            var _this = this;
            this.store = store;
            this.metadata = metadata;
            this.config$ = rxjs.combineLatest([
                this.metadata.recordViewMetadata$, this.store.showTopWidget$
            ]).pipe(operators.map(function (_a) {
                var _b = __read(_a, 2), metadata = _b[0], show = _b[1];
                if (metadata.topWidget && metadata.topWidget.refreshOn === 'data-update') {
                    metadata.topWidget.reload$ = _this.store.record$.pipe(operators.map(function () { return true; }));
                }
                return {
                    widget: metadata.topWidget,
                    show: show
                };
            }));
        }
        return TopWidgetAdapter;
    }());
    TopWidgetAdapter.decorators = [
        { type: i0.Injectable }
    ];
    TopWidgetAdapter.ctorParameters = function () { return [
        { type: RecordViewStore },
        { type: MetadataStore }
    ]; };

    var RecordContainerComponent = /** @class */ (function () {
        function RecordContainerComponent(recordViewStore, language, metadata, contentAdapter, topWidgetAdapter, sidebarWidgetAdapter) {
            this.recordViewStore = recordViewStore;
            this.language = language;
            this.metadata = metadata;
            this.contentAdapter = contentAdapter;
            this.topWidgetAdapter = topWidgetAdapter;
            this.sidebarWidgetAdapter = sidebarWidgetAdapter;
            this.language$ = this.language.vm$;
            this.vm$ = rxjs.combineLatest([
                this.language$, this.sidebarWidgetAdapter.config$, this.topWidgetAdapter.config$, this.recordViewStore.showSubpanels$
            ]).pipe(operators.map(function (_a) {
                var _b = __read(_a, 4), language = _b[0], sidebarWidgetConfig = _b[1], topWidgetConfig = _b[2], showSubpanels = _b[3];
                return ({
                    language: language,
                    sidebarWidgetConfig: sidebarWidgetConfig,
                    topWidgetConfig: topWidgetConfig,
                    showSubpanels: showSubpanels
                });
            }));
        }
        RecordContainerComponent.prototype.ngOnInit = function () {
        };
        RecordContainerComponent.prototype.getContentAdapter = function () {
            return this.contentAdapter;
        };
        RecordContainerComponent.prototype.getSubpanelsConfig = function () {
            return {
                subpanels$: this.recordViewStore.subpanels$,
                sidebarActive$: this.recordViewStore.widgets$
            };
        };
        RecordContainerComponent.prototype.getViewContext = function () {
            return this.recordViewStore.getViewContext();
        };
        RecordContainerComponent.prototype.getViewContext$ = function () {
            return this.recordViewStore.viewContext$;
        };
        RecordContainerComponent.prototype.hasTopWidgetMetadata = function (meta) {
            return !!(meta && meta.type);
        };
        return RecordContainerComponent;
    }());
    RecordContainerComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-record-container',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<!-- Start Record View Container Section -->\n\n<div *ngIf=\"(vm$ | async) as vm\"\n     class=\"record-view-container view-container container-fluid pt-3 pb-3 small-font\">\n    <div class=\"row\">\n        <div class=\"col-lg-9\" [ngClass]=\"{ 'col-lg-12': !vm.sidebarWidgetConfig.show }\">\n\n            <div class=\"container-fluid pl-0 pr-0\">\n\n                <div class=\"row no-gutters\"\n                     *ngIf=\"vm.topWidgetConfig.show && hasTopWidgetMetadata(vm.topWidgetConfig.widget)\">\n                    <div class=\"col pb-3\">\n                        <scrm-top-widget [type]=\"vm.topWidgetConfig.widget.type\"\n                                         [context]=\"getViewContext()\"\n                                         [config]=\"vm.topWidgetConfig.widget\">\n                        </scrm-top-widget>\n                    </div>\n                </div>\n\n                <div class=\"row no-gutters\">\n                    <div class=\"col\">\n                        <scrm-record-content [dataSource]=\"getContentAdapter()\"></scrm-record-content>\n                    </div>\n                </div>\n\n                <div *ngIf=\"vm.showSubpanels\"\n                     class=\"row no-gutters pt-1 pb-4\">\n                    <div class=\"col\">\n                        <scrm-subpanel-container [config]=\"getSubpanelsConfig()\"></scrm-subpanel-container>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"col-lg-3 record-widget-container pl-0\"\n             *ngIf=\"vm.sidebarWidgetConfig.show && vm.sidebarWidgetConfig.widgets\">\n            <div class=\"mb-3\" *ngFor=\"let widget of vm.sidebarWidgetConfig.widgets\">\n                <scrm-sidebar-widget [type]=\"widget.type\"\n                                     [context]=\"getViewContext()\"\n                                     [context$]=\"getViewContext$()\"\n                                     [config]=\"widget\">\n                </scrm-sidebar-widget>\n            </div>\n        </div>\n\n    </div>\n</div>\n\n<!-- End Record View Container Section -->\n",
                    providers: [RecordContentAdapter, TopWidgetAdapter, SidebarWidgetAdapter]
                },] }
    ];
    RecordContainerComponent.ctorParameters = function () { return [
        { type: RecordViewStore },
        { type: LanguageStore },
        { type: MetadataStore },
        { type: RecordContentAdapter },
        { type: TopWidgetAdapter },
        { type: SidebarWidgetAdapter }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var RecordContainerModule = /** @class */ (function () {
        function RecordContainerModule() {
        }
        return RecordContainerModule;
    }());
    RecordContainerModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [RecordContainerComponent],
                    exports: [RecordContainerComponent],
                    imports: [
                        common.CommonModule,
                        WidgetPanelModule,
                        i3.AngularSvgIconModule,
                        SubpanelContainerModule,
                        RecordContentModule,
                        TopWidgetModule,
                        SidebarWidgetModule
                    ]
                },] }
    ];

    var RecordActionsAdapter = /** @class */ (function (_super) {
        __extends(RecordActionsAdapter, _super);
        function RecordActionsAdapter(store, metadata, language, actionManager, asyncActionService, message, confirmation, selectModalService) {
            var _this = _super.call(this, actionManager, asyncActionService, message, confirmation, language, selectModalService) || this;
            _this.store = store;
            _this.metadata = metadata;
            _this.language = language;
            _this.actionManager = actionManager;
            _this.asyncActionService = asyncActionService;
            _this.message = message;
            _this.confirmation = confirmation;
            _this.selectModalService = selectModalService;
            _this.defaultActions = {
                detail: [
                    {
                        key: 'toggle-widgets',
                        labelKey: 'LBL_INSIGHTS',
                        params: {
                            expanded: true
                        },
                        acl: []
                    },
                ],
                edit: [
                    {
                        key: 'cancel',
                        labelKey: 'LBL_CANCEL',
                        params: {
                            expanded: true
                        },
                        acl: []
                    },
                    {
                        key: 'toggle-widgets',
                        labelKey: 'LBL_INSIGHTS',
                        params: {
                            expanded: true
                        },
                        acl: []
                    },
                ],
                create: [
                    {
                        key: 'cancelCreate',
                        labelKey: 'LBL_CANCEL',
                        params: {
                            expanded: true
                        },
                        acl: []
                    },
                ],
            };
            return _this;
        }
        RecordActionsAdapter.prototype.getActions = function (context) {
            var _this = this;
            return rxjs.combineLatest([
                this.metadata.recordViewMetadata$,
                this.store.mode$,
                this.store.record$,
                this.store.language$,
                this.store.widgets$,
            ]).pipe(operators.map(function (_a) {
                var _b = __read(_a, 2), meta = _b[0], mode = _b[1];
                if (!mode || !meta) {
                    return [];
                }
                return _this.parseModeActions(meta.actions, mode, _this.store.getViewContext());
            }));
        };
        RecordActionsAdapter.prototype.buildActionData = function (action, context) {
            return {
                store: this.store,
                action: action
            };
        };
        /**
         * Build backend process input
         *
         * @param action
         * @param actionName
         * @param moduleName
         * @param context
         */
        RecordActionsAdapter.prototype.buildActionInput = function (action, actionName, moduleName, context) {
            if (context === void 0) { context = null; }
            var baseRecord = this.store.getBaseRecord();
            this.message.removeMessages();
            return {
                action: actionName,
                module: baseRecord.module,
                id: baseRecord.id,
                params: (action && action.params) || []
            };
        };
        RecordActionsAdapter.prototype.getMode = function () {
            return this.store.getMode();
        };
        RecordActionsAdapter.prototype.getModuleName = function (context) {
            return this.store.getModuleName();
        };
        RecordActionsAdapter.prototype.reload = function (action, process, context) {
            this.store.load(false).pipe(operators.take(1)).subscribe();
        };
        return RecordActionsAdapter;
    }(BaseRecordActionsAdapter));
    RecordActionsAdapter.decorators = [
        { type: i0.Injectable }
    ];
    RecordActionsAdapter.ctorParameters = function () { return [
        { type: RecordViewStore },
        { type: MetadataStore },
        { type: LanguageStore },
        { type: RecordActionManager },
        { type: AsyncActionService },
        { type: MessageService },
        { type: ConfirmationModalService },
        { type: SelectModalService }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var RecordHeaderComponent = /** @class */ (function () {
        function RecordHeaderComponent(actionsAdapter, recordViewStore, moduleNavigation) {
            this.actionsAdapter = actionsAdapter;
            this.recordViewStore = recordViewStore;
            this.moduleNavigation = moduleNavigation;
            this.displayResponsiveTable = false;
            this.subs = [];
        }
        RecordHeaderComponent.prototype.ngOnInit = function () {
            var _this = this;
            this.subs.push(this.recordViewStore.record$.subscribe(function (record) {
                _this.record = record;
            }));
        };
        RecordHeaderComponent.prototype.ngOnDestroy = function () {
            this.subs.forEach(function (sub) { return sub.unsubscribe(); });
        };
        Object.defineProperty(RecordHeaderComponent.prototype, "moduleTitle", {
            get: function () {
                var module = this.recordViewStore.vm.appData.module;
                var appListStrings = this.recordViewStore.vm.appData.language.appListStrings;
                return this.moduleNavigation.getModuleLabel(module, appListStrings);
            },
            enumerable: false,
            configurable: true
        });
        /**
         * Get Summary template
         *
         * @returns {string} template label
         */
        RecordHeaderComponent.prototype.getSummaryTemplate = function () {
            return this.recordViewStore.getSummaryTemplate();
        };
        /**
         * Build action context
         * @param record
         */
        RecordHeaderComponent.prototype.getActionContext = function (record) {
            if (!record) {
                return {};
            }
            return {
                module: record.module || '',
                record: record
            };
        };
        return RecordHeaderComponent;
    }());
    RecordHeaderComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-record-header',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<ng-container>\n    <div class=\"record-view-header\">\n        <ng-container *ngIf=\"displayResponsiveTable\">\n            <div class=\"d-flex flex-nowrap\">\n                <div class=\"row\">\n                    <div class=\"col\">\n                        <div class=\"order-3\">\n                        </div>\n                    </div>\n                    <div class=\"w-100\"></div>\n                    <div class=\"col\">\n                        <div class=\"order-2\">\n                            <scrm-module-title class=\"record-view-title\" [title]=\"moduleTitle\"></scrm-module-title>\n                            <div class=\"record-view-name\">\n                                <scrm-dynamic-label *ngIf=\"record && record.fields\"\n                                                    [fields]=\"record.fields\"\n                                                    [labelKey]=\"getSummaryTemplate()\">\n                                </scrm-dynamic-label>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"w-100\"></div>\n                    <div class=\"col\">\n                        <div *ngIf=\"record\" class=\"order-1\">\n                            <scrm-action-group-menu\n                                [config]=\"actionsAdapter\"\n                                klass=\"record-view-actions float-right\">\n                            </scrm-action-group-menu>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </ng-container>\n        <ng-template [ngIf]=\"!displayResponsiveTable\">\n            <div class=\"row mr-0\">\n                <div class=\"col-md-4\">\n                    <scrm-module-title class=\"record-view-title\" [title]=\"moduleTitle\"></scrm-module-title>\n                    <div class=\"record-view-name\">\n                        <scrm-dynamic-label *ngIf=\"record && record.fields\"\n                                            [fields]=\"record.fields\"\n                                            [labelKey]=\"getSummaryTemplate()\">\n                        </scrm-dynamic-label>\n                    </div>\n                </div>\n                <div class=\"col-md-8\">\n                    <div class=\"row mr-1 ml-1\">\n                        <div class=\"w-100\">\n                        </div>\n                        <div *ngIf=\"record\" class=\"w-100\">\n                            <scrm-action-group-menu\n                                [config]=\"actionsAdapter\"\n                                [actionContext]=\"getActionContext(record)\"\n                                klass=\"record-view-actions float-right\"\n                                buttonClass=\"settings-button\"\n                            >\n                            </scrm-action-group-menu>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n    </div>\n</ng-container>\n",
                    providers: [RecordActionsAdapter]
                },] }
    ];
    RecordHeaderComponent.ctorParameters = function () { return [
        { type: RecordActionsAdapter },
        { type: RecordViewStore },
        { type: ModuleNavigation }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var RecordHeaderModule = /** @class */ (function () {
        function RecordHeaderModule() {
        }
        return RecordHeaderModule;
    }());
    RecordHeaderModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [RecordHeaderComponent],
                    exports: [RecordHeaderComponent],
                    imports: [
                        common.CommonModule,
                        ModuleTitleModule,
                        DynamicLabelModule,
                        ActionGroupMenuModule
                    ]
                },] }
    ];

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var RecordComponent = /** @class */ (function () {
        function RecordComponent(appState, recordStore, route) {
            this.appState = appState;
            this.recordStore = recordStore;
            this.route = route;
            this.vm$ = null;
            this.showStatusBar = false;
        }
        RecordComponent.prototype.ngOnInit = function () {
            var mode = 'detail';
            var data = (this.route.snapshot && this.route.snapshot.data) || {};
            if (data.mode) {
                mode = data.mode;
            }
            var params = (this.route.snapshot && this.route.snapshot.queryParams) || {};
            this.recordSub = this.recordStore.init(this.appState.getModule(), this.route.snapshot.params.record, mode, params).subscribe();
            this.vm$ = this.recordStore.vm$;
        };
        RecordComponent.prototype.ngOnDestroy = function () {
            if (this.recordSub) {
                this.recordSub.unsubscribe();
            }
            this.recordStore.destroy();
        };
        return RecordComponent;
    }());
    RecordComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-record',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<!-- Start Record View Section -->\n<div class=\"record-view\" *ngIf=\"(vm$ | async) as vm\">\n    <scrm-record-header></scrm-record-header>\n    <div class=\"record-view-hr-container\">\n        <hr class=\"record-view-hr\">\n    </div>\n    <scrm-status-bar *ngIf=\"showStatusBar\"></scrm-status-bar>\n    <scrm-record-container></scrm-record-container>\n</div>\n<!-- End Record View Section -->\n",
                    providers: [RecordViewStore]
                },] }
    ];
    RecordComponent.ctorParameters = function () { return [
        { type: AppStateStore },
        { type: RecordViewStore },
        { type: i2.ActivatedRoute }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var RecordModule = /** @class */ (function () {
        function RecordModule() {
        }
        return RecordModule;
    }());
    RecordModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [RecordComponent],
                    exports: [RecordComponent],
                    imports: [
                        common.CommonModule,
                        FieldModule,
                        RecordContainerModule,
                        RecordHeaderModule,
                        StatusBarModule,
                        SubpanelModule
                    ],
                },] }
    ];

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var CreateRecordModule = /** @class */ (function () {
        function CreateRecordModule() {
        }
        return CreateRecordModule;
    }());
    CreateRecordModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [CreateRecordComponent],
                    exports: [CreateRecordComponent],
                    imports: [
                        common.CommonModule,
                        FieldModule,
                        RecordModule,
                        RecordContainerModule,
                        RecordHeaderModule,
                        StatusBarModule,
                        SubpanelModule
                    ],
                },] }
    ];

    var InstallViewActionHandler = /** @class */ (function (_super) {
        __extends(InstallViewActionHandler, _super);
        function InstallViewActionHandler() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return InstallViewActionHandler;
    }(i5.ActionHandler));

    var InstallAction = /** @class */ (function (_super) {
        __extends(InstallAction, _super);
        function InstallAction(message, asyncActionService, router, modalService, state, localStorage) {
            var _this = _super.call(this) || this;
            _this.message = message;
            _this.asyncActionService = asyncActionService;
            _this.router = router;
            _this.modalService = modalService;
            _this.state = state;
            _this.localStorage = localStorage;
            _this.key = 'install';
            _this.modes = ['edit'];
            return _this;
        }
        InstallAction.prototype.run = function (data) {
            var _this = this;
            data.store.recordStore.validate().pipe(operators.take(1)).subscribe(function (valid) {
                if (valid) {
                    var stagingRecord = data.store.recordStore.getStaging();
                    _this.runInstall(stagingRecord);
                    return;
                }
                _this.message.addWarningMessageByKey('LBL_VALIDATION_ERRORS');
            });
        };
        InstallAction.prototype.shouldDisplay = function () {
            return true;
        };
        InstallAction.prototype.runInstall = function (stagingRecord) {
            var _this = this;
            var actionName = "suitecrm-app-" + this.key;
            this.message.removeMessages();
            var asyncData = {
                action: actionName,
                module: stagingRecord.module,
                id: stagingRecord.id,
                payload: stagingRecord.formGroup.value
            };
            this.asyncActionService.run(actionName, asyncData).pipe(operators.take(1)).subscribe(function (process) {
                if (process.data.statusCode === 3) {
                    // system validation pre-check failed; display errors modal
                    _this.openErrorModalDialog(process.data.errors);
                }
                // redirect to /, if request is successful
                if (process.data.statusCode === 0) {
                    _this.state.clear();
                    _this.localStorage.clear();
                    _this.router.navigate(['/'], {}).then();
                }
            });
        };
        InstallAction.prototype.openErrorModalDialog = function (errors) {
            var modalRef = this.modalService.open(InstallErrorModalComponent, {
                ariaLabelledBy: 'modal-basic-title',
                centered: true,
                size: 'lg',
                windowClass: 'custom-modal',
                modalDialogClass: 'custom-modal'
            });
            modalRef.componentInstance.errors = errors;
        };
        return InstallAction;
    }(InstallViewActionHandler));
    InstallAction.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function InstallAction_Factory() { return new InstallAction(i0__namespace.ɵɵinject(MessageService), i0__namespace.ɵɵinject(AsyncActionService), i0__namespace.ɵɵinject(i2__namespace.Router), i0__namespace.ɵɵinject(i1__namespace$3.NgbModal), i0__namespace.ɵɵinject(StateManager), i0__namespace.ɵɵinject(LocalStorageService)); }, token: InstallAction, providedIn: "root" });
    InstallAction.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    InstallAction.ctorParameters = function () { return [
        { type: MessageService },
        { type: AsyncActionService },
        { type: i2.Router },
        { type: i1$2.NgbModal },
        { type: StateManager },
        { type: LocalStorageService }
    ]; };

    var InstallActionManager = /** @class */ (function (_super) {
        __extends(InstallActionManager, _super);
        function InstallActionManager(save) {
            var _this = _super.call(this) || this;
            _this.save = save;
            save.modes.forEach(function (mode) { return _this.actions[mode][save.key] = save; });
            return _this;
        }
        return InstallActionManager;
    }(BaseActionManager));
    InstallActionManager.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function InstallActionManager_Factory() { return new InstallActionManager(i0__namespace.ɵɵinject(InstallAction)); }, token: InstallActionManager, providedIn: "root" });
    InstallActionManager.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root',
                },] }
    ];
    InstallActionManager.ctorParameters = function () { return [
        { type: InstallAction }
    ]; };

    var initialState = {
        loading: false,
        mode: 'detail',
        params: {
            returnModule: '',
            returnId: '',
            returnAction: ''
        }
    };
    var InstallViewStore = /** @class */ (function () {
        function InstallViewStore(recordFetchGQL, recordSaveGQL, message, recordManager, recordStoreFactory, language) {
            var _this = this;
            this.recordFetchGQL = recordFetchGQL;
            this.recordSaveGQL = recordSaveGQL;
            this.message = message;
            this.recordManager = recordManager;
            this.recordStoreFactory = recordStoreFactory;
            this.language = language;
            /** Internal Properties */
            this.cache$ = null;
            this.internalState = i5.deepClone(initialState);
            this.store = new rxjs.BehaviorSubject(this.internalState);
            this.state$ = this.store.asObservable();
            this.subs = [];
            this.recordStore = recordStoreFactory.create(this.getViewFieldsObservable());
            this.record$ = this.recordStore.state$.pipe(operators.distinctUntilChanged());
            this.stagingRecord$ = this.recordStore.staging$.pipe(operators.distinctUntilChanged());
            this.loading$ = this.state$.pipe(operators.map(function (state) { return state.loading; }));
            this.mode$ = this.state$.pipe(operators.map(function (state) { return state.mode; }));
            this.vm$ = rxjs.combineLatest([this.record$, this.loading$]).pipe(operators.map(function (_a) {
                var _b = __read(_a, 2), record = _b[0], loading = _b[1];
                _this.vm = { record: record, loading: loading };
                return _this.vm;
            }));
            this.viewContext$ = this.record$.pipe(operators.map(function () {
                return _this.getViewContext();
            }));
        }
        Object.defineProperty(InstallViewStore.prototype, "params", {
            get: function () {
                return this.internalState.params || {};
            },
            set: function (params) {
                this.updateState(Object.assign(Object.assign({}, this.internalState), { params: params }));
            },
            enumerable: false,
            configurable: true
        });
        InstallViewStore.prototype.getViewContext = function () {
            return {
                record: this.getBaseRecord()
            };
        };
        InstallViewStore.prototype.getActions = function () {
            return rxjs.of([]);
        };
        /**
         * Initial install view
         *
         * @param {string} mode to use
         * @param {object} params to set
         */
        InstallViewStore.prototype.init = function (mode, params) {
            if (mode === void 0) { mode = 'edit'; }
            if (params === void 0) { params = {}; }
            this.setMode(mode);
            this.recordStore.init({
                id: '',
                module: 'install',
                attributes: {}
            });
        };
        /**
         * Clear observable cache
         */
        InstallViewStore.prototype.clear = function () {
            this.cache$ = null;
            this.updateState(i5.deepClone(initialState));
        };
        /**
         * Clear
         */
        InstallViewStore.prototype.clearAuthBased = function () {
            this.clear();
        };
        /**
         * Get staging record
         *
         * @returns {string} ViewMode
         */
        InstallViewStore.prototype.getBaseRecord = function () {
            if (!this.internalState) {
                return null;
            }
            return this.recordStore.getBaseRecord();
        };
        /**
         * Get current view mode
         *
         * @returns {string} ViewMode
         */
        InstallViewStore.prototype.getMode = function () {
            if (!this.internalState) {
                return null;
            }
            return this.internalState.mode;
        };
        /**
         * Set new mode
         *
         * @param {string} mode ViewMode
         */
        InstallViewStore.prototype.setMode = function (mode) {
            this.updateState(Object.assign(Object.assign({}, this.internalState), { mode: mode }));
        };
        InstallViewStore.prototype.getLicenseText = function () {
            return this.language.getFieldLabel('SUITE8_LICENSE_CONTENT');
        };
        InstallViewStore.prototype.getMetadata = function () {
            return {
                actions: [],
                templateMeta: {
                    maxColumns: 2,
                    useTabs: true,
                    tabDefs: {
                        LBL_LICENSE: {
                            newTab: true,
                            panelDefault: 'expanded'
                        },
                        LBL_CONFIG: {
                            newTab: true,
                            panelDefault: 'expanded'
                        }
                    }
                },
                panels: [
                    {
                        key: 'LBL_LICENSE',
                        rows: [
                            {
                                cols: [
                                    {
                                        name: 'site_license',
                                        label: 'LBL_LICENSE_TITLE_2',
                                        type: 'html',
                                        display: 'readonly',
                                        fieldDefinition: {
                                            name: "site_license",
                                            vname: "LBL_LICENSE_TITLE_2",
                                            type: "html",
                                            default: this.getLicenseText(),
                                        },
                                    },
                                    {
                                        name: 'license_check',
                                        label: 'LBL_LICENSE_I_ACCEPT',
                                        type: 'boolean',
                                        required: true,
                                        fieldDefinition: {
                                            name: "license_check",
                                            vname: "LBL_LICENSE_I_ACCEPT",
                                            type: "boolean",
                                            required: true,
                                            value: 'false',
                                            default: 'false'
                                        },
                                    }
                                ]
                            },
                            {
                                cols: []
                            }
                        ]
                    },
                    {
                        key: 'LBL_CONFIG',
                        rows: [
                            {
                                cols: [
                                    {
                                        name: 'site_host',
                                        label: 'LBL_SITECFG_URL',
                                        type: 'varchar',
                                        fieldDefinition: {
                                            "name": "site_host",
                                            "vname": "LBL_SITECFG_URL",
                                            "type": "varchar",
                                            "required": true,
                                        },
                                    },
                                    {
                                        name: 'demoData',
                                        label: 'LBL_DBCONF_DEMO_DATA',
                                        type: 'enum',
                                        fieldDefinition: {
                                            name: "demoData",
                                            vname: "LBL_DBCONF_DEMO_DATA",
                                            type: "enum",
                                            options: "__no_options__",
                                            required: true,
                                            metadata: {
                                                extraOptions: [
                                                    {
                                                        value: "yes",
                                                        labelKey: "LBL_YES",
                                                    },
                                                    {
                                                        value: "no",
                                                        labelKey: "LBL_NO",
                                                    },
                                                ]
                                            }
                                        },
                                    },
                                ]
                            },
                            {
                                cols: [
                                    {
                                        name: 'db_config',
                                        label: 'LBL_DBCONF_TITLE',
                                        type: 'grouped-field',
                                        fieldDefinition: {
                                            name: "db_config",
                                            vname: "LBL_DBCONF_TITLE",
                                            type: "grouped-field",
                                            layout: [
                                                "db_username",
                                                "db_password",
                                                "db_host",
                                                "db_name",
                                                "db_port"
                                            ],
                                            display: "vertical",
                                            groupFields: {
                                                "db_username": {
                                                    "name": "db_username",
                                                    "type": "varchar",
                                                    "vname": "LBL_DBCONF_SUITE_DB_USER",
                                                    "labelKey": "LBL_DBCONF_SUITE_DB_USER",
                                                    "label": "LBL_DBCONF_SUITE_DB_USER",
                                                    "showLabel": ["*"],
                                                    "required": true,
                                                },
                                                "db_password": {
                                                    "name": "db_password",
                                                    "type": "password",
                                                    "vname": "LBL_DBCONF_DB_PASSWORD",
                                                    "labelKey": "LBL_DBCONF_DB_PASSWORD",
                                                    "showLabel": ["*"],
                                                    "required": true,
                                                },
                                                "db_host": {
                                                    "name": "db_host",
                                                    "type": "varchar",
                                                    "vname": "LBL_DBCONF_HOST_NAME",
                                                    "labelKey": "LBL_DBCONF_HOST_NAME",
                                                    "showLabel": ["*"],
                                                    "required": true,
                                                },
                                                "db_name": {
                                                    "name": "db_name",
                                                    "type": "varchar",
                                                    "vname": "LBL_DBCONF_DB_NAME",
                                                    "labelKey": "LBL_DBCONF_DB_NAME",
                                                    "showLabel": ["*"],
                                                    "required": true,
                                                },
                                                "db_port": {
                                                    "name": "db_port",
                                                    "type": "varchar",
                                                    "vname": "LBL_DBCONF_DB_PORT",
                                                    "labelKey": "LBL_DBCONF_DB_PORT",
                                                    "showLabel": ["*"],
                                                    "required": false
                                                }
                                            },
                                            showLabel: {
                                                edit: ['*']
                                            }
                                        },
                                    },
                                    {
                                        name: 'admin_config',
                                        label: 'LBL_SITECFG_TITLE',
                                        type: 'grouped-field',
                                        fieldDefinition: {
                                            name: "admin_config",
                                            vname: "LBL_SITECFG_TITLE",
                                            type: "grouped-field",
                                            layout: [
                                                "site_username",
                                                "site_password",
                                            ],
                                            display: "vertical",
                                            groupFields: {
                                                "site_username": {
                                                    "name": "site_username",
                                                    "type": "varchar",
                                                    "vname": "LBL_SITECFG_ADMIN_Name",
                                                    "labelKey": "LBL_SITECFG_ADMIN_Name",
                                                    "showLabel": ["edit"],
                                                    "required": true,
                                                },
                                                "site_password": {
                                                    "name": "site_password",
                                                    "type": "password",
                                                    "vname": "LBL_SITECFG_ADMIN_PASS",
                                                    "labelKey": "LBL_SITECFG_ADMIN_PASS",
                                                    "showLabel": ["edit"],
                                                    "required": true,
                                                },
                                            },
                                            showLabel: {
                                                edit: ['*']
                                            }
                                        },
                                    }
                                ]
                            }
                        ]
                    }
                ],
            };
        };
        InstallViewStore.prototype.getMetadata$ = function () {
            return rxjs.of(this.getMetadata());
        };
        InstallViewStore.prototype.getModuleName = function () {
            return 'install';
        };
        /**
         * Parse query params
         *
         * @param {object} params to set
         */
        InstallViewStore.prototype.parseParams = function (params) {
            if (params === void 0) { params = {}; }
            if (!params) {
                return;
            }
            var currentParams = Object.assign({}, this.internalState.params);
            Object.keys(params).forEach(function (paramKey) {
                if (!i5.isVoid(currentParams[paramKey])) {
                    currentParams[paramKey] = params[paramKey];
                    return;
                }
            });
            this.params = params;
        };
        /**
         * Update the state
         *
         * @param {object} state to set
         */
        InstallViewStore.prototype.updateState = function (state) {
            this.store.next(this.internalState = state);
        };
        InstallViewStore.prototype.getIgnoreSystemChecksField = function () {
            return this.recordStore.getStaging().fields['sys_check_option'];
        };
        /**
         * Get view fields observable
         *
         * @returns {object} Observable<ViewFieldDefinition[]>
         */
        InstallViewStore.prototype.getViewFieldsObservable = function () {
            return this.getMetadata$().pipe(operators.map(function (meta) {
                var fields = [];
                meta.panels.forEach(function (panel) {
                    panel.rows.forEach(function (row) {
                        row.cols.forEach(function (col) {
                            fields.push(col);
                        });
                    });
                });
                fields.push({
                    "name": "sys_check_option",
                    "type": "boolean",
                    fieldDefinition: {
                        "name": "sys_check_option",
                        "type": "boolean",
                        "vname": "LBL_SYS_CHECK_WARNING",
                        "labelKey": "LBL_SYS_CHECK_WARNING",
                        "showLabel": ["edit"],
                        "required": false,
                        "value": 'false',
                        "default": 'false'
                    }
                });
                return fields;
            }));
        };
        return InstallViewStore;
    }());
    InstallViewStore.decorators = [
        { type: i0.Injectable }
    ];
    InstallViewStore.ctorParameters = function () { return [
        { type: RecordFetchGQL },
        { type: RecordSaveGQL },
        { type: MessageService },
        { type: RecordManager },
        { type: RecordStoreFactory },
        { type: LanguageStore }
    ]; };

    var InstallActionsAdapter = /** @class */ (function (_super) {
        __extends(InstallActionsAdapter, _super);
        function InstallActionsAdapter(store, metadata, language, actionManager, asyncActionService, message, confirmation, selectModalService) {
            var _this = _super.call(this, actionManager, asyncActionService, message, confirmation, language, selectModalService) || this;
            _this.store = store;
            _this.metadata = metadata;
            _this.language = language;
            _this.actionManager = actionManager;
            _this.asyncActionService = asyncActionService;
            _this.message = message;
            _this.confirmation = confirmation;
            _this.selectModalService = selectModalService;
            _this.defaultActions = {
                detail: [],
                edit: [
                    {
                        key: 'install',
                        labelKey: 'LBL_PROCEED',
                        params: {
                            expanded: true
                        },
                        acl: []
                    },
                ],
                create: [],
            };
            return _this;
        }
        InstallActionsAdapter.prototype.getActions = function (context) {
            var _this = this;
            return rxjs.combineLatest([
                this.store.getActions(),
                this.store.mode$,
                this.store.stagingRecord$,
            ]).pipe(operators.map(function (_a) {
                var _b = __read(_a, 2), actions = _b[0], mode = _b[1];
                if (!mode) {
                    return [];
                }
                return _this.parseModeActions(actions, mode, _this.store.getViewContext());
            }));
        };
        InstallActionsAdapter.prototype.buildActionData = function (action, context) {
            return {
                store: this.store
            };
        };
        /**
         * Build backend process input
         *
         * @param action
         * @param actionName
         * @param moduleName
         * @param context
         */
        InstallActionsAdapter.prototype.buildActionInput = function (action, actionName, moduleName, context) {
            if (context === void 0) { context = null; }
            var baseRecord = this.store.getBaseRecord();
            this.message.removeMessages();
            return {
                action: actionName,
                module: baseRecord.module,
                id: baseRecord.id,
                record: baseRecord
            };
        };
        InstallActionsAdapter.prototype.getMode = function () {
            return this.store.getMode();
        };
        InstallActionsAdapter.prototype.getModuleName = function (context) {
            return this.store.getModuleName();
        };
        InstallActionsAdapter.prototype.reload = function (action, process, context) {
        };
        return InstallActionsAdapter;
    }(BaseRecordActionsAdapter));
    InstallActionsAdapter.decorators = [
        { type: i0.Injectable }
    ];
    InstallActionsAdapter.ctorParameters = function () { return [
        { type: InstallViewStore },
        { type: MetadataStore },
        { type: LanguageStore },
        { type: InstallActionManager },
        { type: AsyncActionService },
        { type: MessageService },
        { type: ConfirmationModalService },
        { type: SelectModalService }
    ]; };

    var InstallContentAdapter = /** @class */ (function () {
        function InstallContentAdapter(store, metadata, language, actions) {
            this.store = store;
            this.metadata = metadata;
            this.language = language;
            this.actions = actions;
        }
        InstallContentAdapter.prototype.getEditAction = function () {
        };
        InstallContentAdapter.prototype.getDisplayConfig = function () {
            var _this = this;
            return rxjs.combineLatest([this.store.getMetadata$(), this.store.mode$]).pipe(operators.map(function (_a) {
                var _b = __read(_a, 2), meta = _b[0], mode = _b[1];
                var layout = _this.getLayout(meta);
                var maxColumns = meta.templateMeta.maxColumns || 2;
                var tabDefs = meta.templateMeta.tabDefs;
                return {
                    layout: layout,
                    mode: mode,
                    maxColumns: maxColumns,
                    tabDefs: tabDefs
                };
            }));
        };
        InstallContentAdapter.prototype.getPanels = function () {
            var _this = this;
            return rxjs.combineLatest([this.store.getMetadata$(), this.store.stagingRecord$, this.language.vm$]).pipe(operators.map(function (_a) {
                var _b = __read(_a, 3), meta = _b[0], record = _b[1], languages = _b[2];
                var panels = [];
                var module = (record && record.module) || '';
                meta.panels.forEach(function (panelDefinition) {
                    var label = _this.language.getFieldLabel(panelDefinition.key.toUpperCase(), module, languages);
                    var panel = { label: label, key: panelDefinition.key, rows: [] };
                    panelDefinition.rows.forEach(function (rowDefinition) {
                        var row = { cols: [] };
                        rowDefinition.cols.forEach(function (cellDefinition) {
                            row.cols.push(Object.assign({}, cellDefinition));
                        });
                        panel.rows.push(row);
                    });
                    panels.push(panel);
                });
                return panels;
            }));
        };
        InstallContentAdapter.prototype.getRecord = function () {
            return this.store.stagingRecord$;
        };
        InstallContentAdapter.prototype.getLayout = function (meta) {
            var layout = 'panels';
            if (meta.templateMeta.useTabs) {
                layout = 'tabs';
            }
            return layout;
        };
        return InstallContentAdapter;
    }());
    InstallContentAdapter.decorators = [
        { type: i0.Injectable }
    ];
    InstallContentAdapter.ctorParameters = function () { return [
        { type: InstallViewStore },
        { type: MetadataStore },
        { type: LanguageStore },
        { type: InstallActionManager }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var InstallContainerComponent = /** @class */ (function () {
        function InstallContainerComponent(metadata, contentAdapter) {
            this.metadata = metadata;
            this.contentAdapter = contentAdapter;
        }
        InstallContainerComponent.prototype.getContentAdapter = function () {
            return this.contentAdapter;
        };
        return InstallContainerComponent;
    }());
    InstallContainerComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-install-container',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n\n<div class=\"install-view-container record-view-container view-container container-fluid pt-3 pb-3 small-font\">\n\n    <div class=\"row no-gutters\">\n\n        <div class=\"col\">\n            <scrm-record-content [dataSource]=\"getContentAdapter()\"></scrm-record-content>\n        </div>\n\n    </div>\n\n</div>\n\n",
                    providers: [InstallContentAdapter]
                },] }
    ];
    InstallContainerComponent.ctorParameters = function () { return [
        { type: MetadataStore },
        { type: InstallContentAdapter }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var InstallContainerModule = /** @class */ (function () {
        function InstallContainerModule() {
        }
        return InstallContainerModule;
    }());
    InstallContainerModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [InstallContainerComponent],
                    exports: [InstallContainerComponent],
                    imports: [
                        common.CommonModule,
                        i3.AngularSvgIconModule,
                        RecordContentModule,
                    ]
                },] }
    ];

    var InstallHeaderComponent = /** @class */ (function () {
        function InstallHeaderComponent(actionsAdapter, store) {
            this.actionsAdapter = actionsAdapter;
            this.store = store;
            this.vm$ = rxjs.combineLatest([
                this.store.record$
            ]).pipe(operators.map(function (_a) {
                var _b = __read(_a, 1), record = _b[0];
                return ({ record: record });
            }));
        }
        /**
         * Build action context
         * @param record
         */
        InstallHeaderComponent.prototype.getActionContext = function (record) {
            if (!record) {
                return {};
            }
            return {
                module: record.module || '',
                record: record
            };
        };
        InstallHeaderComponent.prototype.getTitle = function () {
        };
        return InstallHeaderComponent;
    }());
    InstallHeaderComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-install-header',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<ng-container *ngIf=\"(vm$ | async) as vm\">\n\n    <div class=\"install-view-header\">\n\n        <div class=\"row mr-0\">\n\n            <div class=\"col-md-4 install-header-title-col\">\n\n                <div class=\"install-view-title record-view-name\">\n                    <scrm-label labelKey=\"LBL_WELCOME\" module=\"install\"></scrm-label>\n                </div>\n                <div class=\"install-view-subtitle record-view-title\">\n                    <scrm-label labelKey=\"LBL_INSTALL\" module=\"install\"></scrm-label>\n                </div>\n\n            </div>\n\n            <div class=\"col-md-8 install-header-buttons-col\">\n\n                <div class=\"row mr-1 ml-1\">\n\n                    <div class=\"w-100 d-flex justify-content-end align-items-center\">\n\n                        <div class=\"w-100 install-header-options d-flex justify-content-end align-items-center pr-5\">\n                            <div class=\"label-container pr-2\">\n                                <label class=\"m-0 small\">\n                                    <scrm-label\n                                        [labelKey]=\"store.getIgnoreSystemChecksField().definition.vname\"></scrm-label>\n                                </label>:\n                            </div>\n                            <div class=\"d-flex\">\n                                <div class=\"flex-grow-1 text-break\">\n                                    <scrm-field [field]=\"store.getIgnoreSystemChecksField()\"\n                                                [mode]=\"'edit'\"\n                                                [record]=\"vm.record\"\n                                                [type]=\"store.getIgnoreSystemChecksField().type\">\n                                    </scrm-field>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div>\n                            <scrm-action-group-menu\n                                [actionContext]=\"getActionContext(vm.record)\"\n                                [config]=\"actionsAdapter\"\n                                buttonClass=\"settings-button\"\n                                klass=\"install-view-actions float-right\"\n                            >\n                            </scrm-action-group-menu>\n                        </div>\n\n                    </div>\n\n                </div>\n\n            </div>\n\n        </div>\n\n    </div>\n</ng-container>\n",
                    providers: [InstallActionsAdapter]
                },] }
    ];
    InstallHeaderComponent.ctorParameters = function () { return [
        { type: InstallActionsAdapter },
        { type: InstallViewStore }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var InstallHeaderModule = /** @class */ (function () {
        function InstallHeaderModule() {
        }
        return InstallHeaderModule;
    }());
    InstallHeaderModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [InstallHeaderComponent],
                    exports: [InstallHeaderComponent],
                    imports: [
                        common.CommonModule,
                        ModuleTitleModule,
                        ActionGroupMenuModule,
                        LabelModule,
                        FieldModule
                    ]
                },] }
    ];

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var InstallViewComponent = /** @class */ (function () {
        function InstallViewComponent(store, route) {
            this.store = store;
            this.route = route;
            this.vm$ = null;
            this.showStatusBar = false;
        }
        InstallViewComponent.prototype.ngOnInit = function () {
            var mode = 'edit';
            var data = (this.route.snapshot && this.route.snapshot.data) || {};
            if (data.mode) {
                mode = data.mode;
            }
            this.store.init(mode);
            this.vm$ = this.store.vm$;
        };
        InstallViewComponent.prototype.ngOnDestroy = function () {
            this.store.clear();
        };
        return InstallViewComponent;
    }());
    InstallViewComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-install-view',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<div *ngIf=\"(vm$ | async) as vm\" class=\"install-view\">\n\n    <scrm-install-header></scrm-install-header>\n\n    <div class=\"record-view-hr-container\">\n        <hr class=\"record-view-hr\">\n    </div>\n\n    <scrm-install-container></scrm-install-container>\n</div>\n",
                    providers: [InstallViewStore]
                },] }
    ];
    InstallViewComponent.ctorParameters = function () { return [
        { type: InstallViewStore },
        { type: i2.ActivatedRoute }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var InstallViewModule = /** @class */ (function () {
        function InstallViewModule() {
        }
        return InstallViewModule;
    }());
    InstallViewModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [InstallViewComponent],
                    exports: [InstallViewComponent],
                    imports: [
                        common.CommonModule,
                        FieldModule,
                        InstallHeaderModule,
                        InstallContainerModule
                    ],
                },] }
    ];

    var ListViewRecordPanelActionHandler = /** @class */ (function (_super) {
        __extends(ListViewRecordPanelActionHandler, _super);
        function ListViewRecordPanelActionHandler() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return ListViewRecordPanelActionHandler;
    }(RecordPanelActionHandler));

    var CancelRecordPanelAction = /** @class */ (function (_super) {
        __extends(CancelRecordPanelAction, _super);
        function CancelRecordPanelAction() {
            var _this = _super.call(this) || this;
            _this.key = 'cancel';
            _this.modes = [
                'detail',
                'edit',
                'list',
                'create',
                'massupdate'
            ];
            return _this;
        }
        CancelRecordPanelAction.prototype.run = function (data) {
            data.listStore.closeRecordPanel();
        };
        CancelRecordPanelAction.prototype.shouldDisplay = function () {
            return true;
        };
        return CancelRecordPanelAction;
    }(ListViewRecordPanelActionHandler));
    CancelRecordPanelAction.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function CancelRecordPanelAction_Factory() { return new CancelRecordPanelAction(); }, token: CancelRecordPanelAction, providedIn: "root" });
    CancelRecordPanelAction.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    CancelRecordPanelAction.ctorParameters = function () { return []; };

    var RunBulkActionRecordPanelAction = /** @class */ (function (_super) {
        __extends(RunBulkActionRecordPanelAction, _super);
        function RunBulkActionRecordPanelAction(message, asyncActionService, confirmation, asyncAction) {
            var _this = _super.call(this) || this;
            _this.message = message;
            _this.asyncActionService = asyncActionService;
            _this.confirmation = confirmation;
            _this.asyncAction = asyncAction;
            _this.key = 'bulk-action';
            _this.modes = [
                'detail',
                'edit',
                'list',
                'create',
                'massupdate'
            ];
            return _this;
        }
        RunBulkActionRecordPanelAction.prototype.run = function (data) {
            var definition = data.action;
            var selection = data.listStore.recordList.selection;
            var params = (definition && definition.params) || {};
            if (i5.isFalse(params.allowAll) && selection.all) {
                var message = data.listStore.appStrings.LBL_SELECT_ALL_NOT_ALLOWED;
                this.message.addDangerMessage(message);
                return;
            }
            if (params.min && selection.count < params.min) {
                var message = data.listStore.appStrings.LBL_TOO_FEW_SELECTED;
                message = message.replace('{min}', params.min);
                this.message.addDangerMessage(message);
                return;
            }
            if (params.max && selection.count > params.max) {
                var message = data.listStore.appStrings.LBL_TOO_MANY_SELECTED;
                message = message.replace('{max}', params.max);
                this.message.addDangerMessage(message);
                return;
            }
            this.runBulkAction(data);
        };
        RunBulkActionRecordPanelAction.prototype.shouldDisplay = function () {
            return true;
        };
        /**
         * Run async buk action
         *
         * @returns void
         * @param {AsyncActionInput} data: data passed to the async process
         */
        RunBulkActionRecordPanelAction.prototype.runBulkAction = function (data) {
            var _this = this;
            var actionName = "bulk-" + data.action.params.bulkAction;
            var asyncData = this.buildActionInput(actionName, data);
            this.asyncAction.run(actionName, asyncData).subscribe(function (process) {
                _this.handleProcessResult(process, data);
            });
        };
        /**
         * Build backend bulk action input
         * @param actionName
         * @param data
         */
        RunBulkActionRecordPanelAction.prototype.buildActionInput = function (actionName, data) {
            var displayedFields = [];
            data.listStore.metadata.listView.fields.forEach(function (value) {
                displayedFields.push(value.name);
            });
            var asyncData = {
                action: actionName,
                module: data.listStore.getModuleName(),
                criteria: null,
                sort: null,
                ids: null,
                fields: displayedFields,
                payload: {
                    panelRecord: data.store.recordStore.getBaseStaging()
                }
            };
            var selection = data.listStore.recordList.selection;
            if (selection.all && selection.count > data.listStore.recordList.records.length) {
                asyncData.criteria = data.listStore.recordList.criteria;
                asyncData.sort = data.listStore.recordList.sort;
            }
            if (selection.all && selection.count <= data.listStore.recordList.records.length) {
                asyncData.ids = [];
                data.listStore.recordList.records.forEach(function (record) {
                    data.ids.push(record.id);
                });
            }
            if (!selection.all) {
                asyncData.ids = Object.keys(selection.selected);
            }
            return asyncData;
        };
        /**
         * Run this function once the process is executed
         *
         * @returns void
         * @param {object} process Process data returned by the process once the process is executed
         * @param {object} data ListViewRecordPanelActionData
         */
        RunBulkActionRecordPanelAction.prototype.handleProcessResult = function (process, data) {
            if (process.data && process.data.reload) {
                data.listStore.recordList.clearSelection();
                data.listStore.load(false).pipe(operators.take(1)).subscribe();
            }
            if (process.data && process.data.dataUpdated) {
                data.listStore.triggerDataUpdate();
            }
            data.listStore.closeRecordPanel();
        };
        return RunBulkActionRecordPanelAction;
    }(ListViewRecordPanelActionHandler));
    RunBulkActionRecordPanelAction.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function RunBulkActionRecordPanelAction_Factory() { return new RunBulkActionRecordPanelAction(i0__namespace.ɵɵinject(MessageService), i0__namespace.ɵɵinject(AsyncActionService), i0__namespace.ɵɵinject(ConfirmationModalService), i0__namespace.ɵɵinject(AsyncActionService)); }, token: RunBulkActionRecordPanelAction, providedIn: "root" });
    RunBulkActionRecordPanelAction.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    RunBulkActionRecordPanelAction.ctorParameters = function () { return [
        { type: MessageService },
        { type: AsyncActionService },
        { type: ConfirmationModalService },
        { type: AsyncActionService }
    ]; };

    var RecordPanelActionManager = /** @class */ (function (_super) {
        __extends(RecordPanelActionManager, _super);
        function RecordPanelActionManager(runBulkAction, cancel) {
            var _this = _super.call(this) || this;
            runBulkAction.modes.forEach(function (mode) { return _this.actions[mode][runBulkAction.key] = runBulkAction; });
            cancel.modes.forEach(function (mode) { return _this.actions[mode][cancel.key] = cancel; });
            return _this;
        }
        return RecordPanelActionManager;
    }(BaseActionManager));
    RecordPanelActionManager.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function RecordPanelActionManager_Factory() { return new RecordPanelActionManager(i0__namespace.ɵɵinject(RunBulkActionRecordPanelAction), i0__namespace.ɵɵinject(CancelRecordPanelAction)); }, token: RecordPanelActionManager, providedIn: "root" });
    RecordPanelActionManager.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root',
                },] }
    ];
    RecordPanelActionManager.ctorParameters = function () { return [
        { type: RunBulkActionRecordPanelAction },
        { type: CancelRecordPanelAction }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var BulkActionsAdapter = /** @class */ (function () {
        function BulkActionsAdapter(store, message, confirmation, selectModalService, asyncAction) {
            this.store = store;
            this.message = message;
            this.confirmation = confirmation;
            this.selectModalService = selectModalService;
            this.asyncAction = asyncAction;
        }
        /**
         * Get bulk action
         * @returns {object} Observable<BulkActionsMap>
         */
        BulkActionsAdapter.prototype.getBulkActions = function () {
            return this.store.metadata$.pipe(operators.map(function (metadata) { return metadata.listView.bulkActions; }));
        };
        /**
         * Execute bulk actions
         * @param {string} action
         */
        BulkActionsAdapter.prototype.executeBulkAction = function (action) {
            var _this = this;
            var selection = this.store.recordList.selection;
            var definition = this.store.metadata.listView.bulkActions[action];
            var actionName = "bulk-" + action;
            this.message.removeMessages();
            if (i5.isFalse(definition.params.allowAll) && selection.all) {
                var message = this.store.appStrings.LBL_SELECT_ALL_NOT_ALLOWED;
                this.message.addDangerMessage(message);
                return;
            }
            if (definition.params.min && selection.count < definition.params.min) {
                var message = this.store.appStrings.LBL_TOO_FEW_SELECTED;
                message = message.replace('{min}', definition.params.min);
                this.message.addDangerMessage(message);
                return;
            }
            if (definition.params.max && selection.count > definition.params.max) {
                var message = this.store.appStrings.LBL_TOO_MANY_SELECTED;
                message = message.replace('{max}', definition.params.max);
                this.message.addDangerMessage(message);
                return;
            }
            var displayedFields = [];
            this.store.metadata.listView.fields.forEach(function (value) {
                displayedFields.push(value.name);
            });
            var data = {
                action: actionName,
                module: this.store.getModuleName(),
                criteria: null,
                sort: null,
                ids: null,
                fields: displayedFields
            };
            if (selection.all && selection.count > this.store.recordList.records.length) {
                data.criteria = this.store.recordList.criteria;
                data.sort = this.store.recordList.sort;
            }
            if (selection.all && selection.count <= this.store.recordList.records.length) {
                data.ids = [];
                this.store.recordList.records.forEach(function (record) {
                    data.ids.push(record.id);
                });
            }
            if (!selection.all) {
                data.ids = Object.keys(selection.selected);
            }
            var params = (definition && definition.params) || {};
            var displayConfirmation = params.displayConfirmation || false;
            var confirmationLabel = params.confirmationLabel || '';
            var selectModal = definition.params && definition.params.selectModal;
            var selectModule = selectModal && selectModal.module;
            var recordPanel = definition.params && definition.params.recordPanel;
            if (recordPanel) {
                this.store.openRecordPanel(recordPanel);
                return;
            }
            if (displayConfirmation) {
                this.confirmation.showModal(confirmationLabel, function () {
                    if (!selectModule) {
                        _this.runBulkAction(actionName, data);
                        return;
                    }
                    _this.showSelectModal(selectModal.module, actionName, data);
                });
                return;
            }
            if (!selectModule) {
                this.runBulkAction(actionName, data);
                return;
            }
            this.showSelectModal(selectModal.module, actionName, data);
        };
        /**
         * Run async buk action
         *
         * @returns void
         * @param {string} selectModule: module for which records are listed in Select Modal/Popup
         * @param {string} asyncAction: bulk action name
         * @param {AsyncActionInput} asyncData: data passed to the async process
         */
        BulkActionsAdapter.prototype.showSelectModal = function (selectModule, asyncAction, asyncData) {
            var _this = this;
            this.selectModalService.showSelectModal(selectModule, function (modalRecord) {
                if (modalRecord) {
                    var fields = modalRecord.fields, formGroup = modalRecord.formGroup, baseRecord = __rest(modalRecord, ["fields", "formGroup"]);
                    asyncData.modalRecord = baseRecord;
                }
                _this.runBulkAction(asyncAction, asyncData);
            });
        };
        /**
         * Run async buk action
         *
         * @returns void
         * @param {string} asyncAction: bulk action name
         * @param {AsyncActionInput} asyncData: data passed to the async process
         */
        BulkActionsAdapter.prototype.runBulkAction = function (asyncAction, asyncData) {
            var _this = this;
            this.asyncAction.run(asyncAction, asyncData).subscribe(function (process) {
                _this.handleProcessResult(process);
            });
        };
        /**
         * Run this function once the process is executed
         *
         * @returns void
         * @param {Process} process: data returned by the process once the process is executed
         */
        BulkActionsAdapter.prototype.handleProcessResult = function (process) {
            if (process.data && process.data.reload) {
                this.store.recordList.clearSelection();
                this.store.load(false).pipe(operators.take(1)).subscribe();
            }
            if (process.data && process.data.dataUpdated) {
                this.store.triggerDataUpdate();
            }
        };
        return BulkActionsAdapter;
    }());
    BulkActionsAdapter.decorators = [
        { type: i0.Injectable }
    ];
    BulkActionsAdapter.ctorParameters = function () { return [
        { type: ListViewStore },
        { type: MessageService },
        { type: ConfirmationModalService },
        { type: SelectModalService },
        { type: AsyncActionService }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var BulkActionsAdapterFactory = /** @class */ (function () {
        function BulkActionsAdapterFactory(message, confirmation, selectModalService, asyncAction) {
            this.message = message;
            this.confirmation = confirmation;
            this.selectModalService = selectModalService;
            this.asyncAction = asyncAction;
        }
        BulkActionsAdapterFactory.prototype.create = function (store) {
            return new BulkActionsAdapter(store, this.message, this.confirmation, this.selectModalService, this.asyncAction);
        };
        return BulkActionsAdapterFactory;
    }());
    BulkActionsAdapterFactory.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function BulkActionsAdapterFactory_Factory() { return new BulkActionsAdapterFactory(i0__namespace.ɵɵinject(MessageService), i0__namespace.ɵɵinject(ConfirmationModalService), i0__namespace.ɵɵinject(SelectModalService), i0__namespace.ɵɵinject(AsyncActionService)); }, token: BulkActionsAdapterFactory, providedIn: "root" });
    BulkActionsAdapterFactory.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root',
                },] }
    ];
    BulkActionsAdapterFactory.ctorParameters = function () { return [
        { type: MessageService },
        { type: ConfirmationModalService },
        { type: SelectModalService },
        { type: AsyncActionService }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var FilterAdapter = /** @class */ (function () {
        function FilterAdapter(store) {
            this.store = store;
        }
        FilterAdapter.prototype.getConfig = function () {
            var _this = this;
            return {
                savedFilterEdit: true,
                module: this.store.getModuleName(),
                filter$: this.store.openFilter$,
                savedFilters$: this.store.filterList.records$,
                searchFields$: this.store.metadata$.pipe(operators.map(function (meta) {
                    if (!meta || !meta.search) {
                        return {};
                    }
                    var searchMeta = meta.search;
                    var type = 'advanced';
                    if (!searchMeta.layout.advanced) {
                        type = 'basic';
                    }
                    return searchMeta.layout[type];
                })),
                listFields: this.store.metadata.listView.fields,
                onClose: function () {
                    _this.store.showFilters = false;
                },
                onSearch: function () {
                    _this.store.showFilters = false;
                },
                updateFilter: function (filter, reload) {
                    if (reload === void 0) { reload = true; }
                    var filters = {};
                    filters[filter.key] = filter;
                    _this.store.setFilters(filters, reload);
                },
                resetFilter: function (reload) {
                    _this.store.resetFilters(reload);
                },
                addSavedFilter: function (filter) {
                    _this.store.addSavedFilter(filter);
                },
                removeSavedFilter: function (filter) {
                    _this.store.removeSavedFilter(filter);
                },
                setOpenFilter: function (filter) {
                    _this.store.setOpenFilter(filter);
                },
            };
        };
        return FilterAdapter;
    }());
    FilterAdapter.decorators = [
        { type: i0.Injectable }
    ];
    FilterAdapter.ctorParameters = function () { return [
        { type: ListViewStore }
    ]; };

    var LineActionsAdapter = /** @class */ (function (_super) {
        __extends(LineActionsAdapter, _super);
        function LineActionsAdapter(store, actionManager, asyncActionService, message, confirmation, language, selectModalService) {
            var _this = _super.call(this, actionManager, asyncActionService, message, confirmation, language, selectModalService) || this;
            _this.store = store;
            _this.actionManager = actionManager;
            _this.asyncActionService = asyncActionService;
            _this.message = message;
            _this.confirmation = confirmation;
            _this.language = language;
            _this.selectModalService = selectModalService;
            return _this;
        }
        LineActionsAdapter.prototype.getActions = function (context) {
            var _this = this;
            if (context === void 0) { context = null; }
            return rxjs.combineLatest([this.store.lineActions$, rxjs.of('list').pipe(operators.shareReplay())]).pipe(operators.map(function (_a) {
                var _b = __read(_a, 2), lineActions = _b[0], mode = _b[1];
                return _this.parseModeActions(lineActions, mode, context);
            }));
        };
        LineActionsAdapter.prototype.getModuleName = function (record) {
            return this.store.getModuleName();
        };
        LineActionsAdapter.prototype.reload = function (action, process, record) {
            this.store.recordList.clearSelection();
            this.store.recordList.resetPagination();
        };
        LineActionsAdapter.prototype.getMode = function () {
            return 'list';
        };
        return LineActionsAdapter;
    }(BaseLineActionsAdapter));
    LineActionsAdapter.decorators = [
        { type: i0.Injectable }
    ];
    LineActionsAdapter.ctorParameters = function () { return [
        { type: ListViewStore },
        { type: LineActionActionManager },
        { type: AsyncActionService },
        { type: MessageService },
        { type: ConfirmationModalService },
        { type: LanguageStore },
        { type: SelectModalService }
    ]; };

    var ListViewRecordPanelActionsAdapter = /** @class */ (function (_super) {
        __extends(ListViewRecordPanelActionsAdapter, _super);
        function ListViewRecordPanelActionsAdapter(store, listStore, language, actionManager, asyncActionService, message, confirmation, selectModalService) {
            var _this = _super.call(this, actionManager, asyncActionService, message, confirmation, language, selectModalService) || this;
            _this.store = store;
            _this.listStore = listStore;
            _this.language = language;
            _this.actionManager = actionManager;
            _this.asyncActionService = asyncActionService;
            _this.message = message;
            _this.confirmation = confirmation;
            _this.selectModalService = selectModalService;
            return _this;
        }
        ListViewRecordPanelActionsAdapter.prototype.getActions = function (context) {
            var _this = this;
            return rxjs.combineLatest([
                this.store.meta$,
                this.store.mode$,
                this.store.stagingRecord$,
                this.language.vm$,
            ]).pipe(operators.map(function (_a) {
                var _b = __read(_a, 2), meta = _b[0], mode = _b[1];
                if (!mode || !meta) {
                    return [];
                }
                return _this.parseModeActions(meta.actions, mode);
            }));
        };
        ListViewRecordPanelActionsAdapter.prototype.buildActionData = function (action, context) {
            return {
                store: this.store,
                listStore: this.listStore,
                action: action
            };
        };
        ListViewRecordPanelActionsAdapter.prototype.getMode = function () {
            return this.store.getMode();
        };
        ListViewRecordPanelActionsAdapter.prototype.getModuleName = function (context) {
            return this.store.getModuleName();
        };
        ListViewRecordPanelActionsAdapter.prototype.reload = function (action, process, context) {
            this.listStore.load(false).pipe(operators.take(1)).subscribe();
        };
        return ListViewRecordPanelActionsAdapter;
    }(BaseRecordActionsAdapter));
    ListViewRecordPanelActionsAdapter.decorators = [
        { type: i0.Injectable }
    ];
    ListViewRecordPanelActionsAdapter.ctorParameters = function () { return [
        { type: RecordPanelStore },
        { type: ListViewStore },
        { type: LanguageStore },
        { type: RecordPanelActionManager },
        { type: AsyncActionService },
        { type: MessageService },
        { type: ConfirmationModalService },
        { type: SelectModalService }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var ListViewRecordPanelActionAdapterFactory = /** @class */ (function () {
        function ListViewRecordPanelActionAdapterFactory(language, actionManager, asyncActionService, message, confirmation, selectModalService) {
            this.language = language;
            this.actionManager = actionManager;
            this.asyncActionService = asyncActionService;
            this.message = message;
            this.confirmation = confirmation;
            this.selectModalService = selectModalService;
        }
        ListViewRecordPanelActionAdapterFactory.prototype.create = function (store, listStore) {
            return new ListViewRecordPanelActionsAdapter(store, listStore, this.language, this.actionManager, this.asyncActionService, this.message, this.confirmation, this.selectModalService);
        };
        return ListViewRecordPanelActionAdapterFactory;
    }());
    ListViewRecordPanelActionAdapterFactory.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function ListViewRecordPanelActionAdapterFactory_Factory() { return new ListViewRecordPanelActionAdapterFactory(i0__namespace.ɵɵinject(LanguageStore), i0__namespace.ɵɵinject(RecordPanelActionManager), i0__namespace.ɵɵinject(AsyncActionService), i0__namespace.ɵɵinject(MessageService), i0__namespace.ɵɵinject(ConfirmationModalService), i0__namespace.ɵɵinject(SelectModalService)); }, token: ListViewRecordPanelActionAdapterFactory, providedIn: "root" });
    ListViewRecordPanelActionAdapterFactory.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root',
                },] }
    ];
    ListViewRecordPanelActionAdapterFactory.ctorParameters = function () { return [
        { type: LanguageStore },
        { type: RecordPanelActionManager },
        { type: AsyncActionService },
        { type: MessageService },
        { type: ConfirmationModalService },
        { type: SelectModalService }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var RecordPanelAdapter = /** @class */ (function () {
        function RecordPanelAdapter(store, recordPanelStoreFactory, actionAdapterFactory, recordManager) {
            this.store = store;
            this.recordPanelStoreFactory = recordPanelStoreFactory;
            this.actionAdapterFactory = actionAdapterFactory;
            this.recordManager = recordManager;
        }
        RecordPanelAdapter.prototype.getConfig = function () {
            var _this = this;
            var store = this.createStore();
            return {
                module: this.getModule(),
                title: (this.store.recordPanelConfig && this.store.recordPanelConfig.title) || '',
                store: store,
                meta: this.store.recordPanelConfig,
                actions: this.createActionAdapter(store),
                onClose: function () {
                    _this.store.closeRecordPanel();
                },
            };
        };
        /**
         * Get configured module
         * @returns {string} module
         */
        RecordPanelAdapter.prototype.getModule = function () {
            return this.store.recordPanelConfig.module || this.store.getModuleName();
        };
        /**
         * Get configured view mode
         * @returns {string} ViewMode
         */
        RecordPanelAdapter.prototype.getViewMode = function () {
            return this.store.recordPanelConfig.mode || 'edit';
        };
        /**
         * Create and init store
         * @returns {object} RecordPanelStore
         */
        RecordPanelAdapter.prototype.createStore = function () {
            var store = this.recordPanelStoreFactory.create();
            var blankRecord = this.recordManager.buildEmptyRecord(this.getModule());
            store.setMetadata(this.store.recordPanelConfig);
            store.initRecord(blankRecord, this.getViewMode(), false);
            return store;
        };
        /**
         * Create action adapter
         * @returns {object} BaseRecordActionsAdapter
         */
        RecordPanelAdapter.prototype.createActionAdapter = function (store) {
            return this.actionAdapterFactory.create(store, this.store);
        };
        return RecordPanelAdapter;
    }());
    RecordPanelAdapter.decorators = [
        { type: i0.Injectable }
    ];
    RecordPanelAdapter.ctorParameters = function () { return [
        { type: ListViewStore },
        { type: RecordPanelStoreFactory },
        { type: ListViewRecordPanelActionAdapterFactory },
        { type: RecordManager }
    ]; };

    var ListViewSidebarWidgetAdapter = /** @class */ (function () {
        function ListViewSidebarWidgetAdapter(store, metadata) {
            var _this = this;
            this.store = store;
            this.metadata = metadata;
            this.config$ = rxjs.combineLatest([
                this.metadata.listMetadata$, this.store.showSidebarWidgets$, this.store.widgets$
            ]).pipe(operators.map(function (_a) {
                var _b = __read(_a, 3), metadata = _b[0], show = _b[1], widgetsEnabled = _b[2];
                if (metadata.sidebarWidgets && metadata.sidebarWidgets.length) {
                    metadata.sidebarWidgets.forEach(function (widget) {
                        if (widget && widget.refreshOn === 'data-update') {
                            widget.reload$ = _this.store.dataSetUpdate$.pipe(operators.map(function () { return true; }));
                        }
                        else if (widget && widget.refreshOn === 'data-reload') {
                            widget.reload$ = _this.store.records$.pipe(operators.map(function () { return true; }));
                        }
                    });
                }
                return {
                    widgets: metadata.sidebarWidgets || [],
                    show: show,
                    widgetsEnabled: widgetsEnabled,
                };
            }));
        }
        return ListViewSidebarWidgetAdapter;
    }());
    ListViewSidebarWidgetAdapter.decorators = [
        { type: i0.Injectable }
    ];
    ListViewSidebarWidgetAdapter.ctorParameters = function () { return [
        { type: ListViewStore },
        { type: MetadataStore }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var TableAdapter = /** @class */ (function () {
        function TableAdapter(store, metadata, actionManager, asyncActionService, message, confirmation, language, bulkActionsAdapterFactory, selectModalService) {
            this.store = store;
            this.metadata = metadata;
            this.actionManager = actionManager;
            this.asyncActionService = asyncActionService;
            this.message = message;
            this.confirmation = confirmation;
            this.language = language;
            this.bulkActionsAdapterFactory = bulkActionsAdapterFactory;
            this.selectModalService = selectModalService;
        }
        TableAdapter.prototype.getTable = function () {
            var _this = this;
            return {
                showHeader: true,
                showFooter: true,
                module: this.store.getModuleName(),
                columns: this.store.columns$,
                lineActions: this.getLineActionsDataSource(),
                selection$: this.store.selection$,
                sort$: this.store.sort$,
                maxColumns$: rxjs.of(4),
                dataSource: this.store.recordList,
                selection: this.store.recordList,
                bulkActions: this.getBulkActionsDataSource(this.store),
                pagination: this.store.recordList,
                toggleRecordSelection: function (id) {
                    _this.store.recordList.toggleSelection(id);
                },
                updateSorting: function (orderBy, sortOrder) {
                    _this.store.recordList.updateSorting(orderBy, sortOrder);
                    _this.store.updateLocalStorage();
                },
            };
        };
        TableAdapter.prototype.getLineActionsDataSource = function () {
            return new LineActionsAdapter(this.store, this.actionManager, this.asyncActionService, this.message, this.confirmation, this.language, this.selectModalService);
        };
        TableAdapter.prototype.getBulkActionsDataSource = function (store) {
            return this.bulkActionsAdapterFactory.create(store);
        };
        return TableAdapter;
    }());
    TableAdapter.decorators = [
        { type: i0.Injectable }
    ];
    TableAdapter.ctorParameters = function () { return [
        { type: ListViewStore },
        { type: MetadataStore },
        { type: LineActionActionManager },
        { type: AsyncActionService },
        { type: MessageService },
        { type: ConfirmationModalService },
        { type: LanguageStore },
        { type: BulkActionsAdapterFactory },
        { type: SelectModalService }
    ]; };

    var ListContainerComponent = /** @class */ (function () {
        function ListContainerComponent(store, adapter, maxColumnCalculator, languageStore, sidebarWidgetAdapter) {
            this.store = store;
            this.adapter = adapter;
            this.maxColumnCalculator = maxColumnCalculator;
            this.languageStore = languageStore;
            this.sidebarWidgetAdapter = sidebarWidgetAdapter;
            this.screen = exports.ScreenSize.Medium;
            this.maxColumns = 5;
            this.vm$ = rxjs.combineLatest([this.sidebarWidgetAdapter.config$]).pipe(operators.map(function (_a) {
                var _b = __read(_a, 1), sidebarWidgetConfig = _b[0];
                return ({
                    sidebarWidgetConfig: sidebarWidgetConfig,
                });
            }));
        }
        ListContainerComponent.prototype.ngOnInit = function () {
            this.tableConfig = this.adapter.getTable();
            this.tableConfig.maxColumns$ = this.getMaxColumns();
        };
        ListContainerComponent.prototype.getMaxColumns = function () {
            return this.maxColumnCalculator.getMaxColumns(this.store.widgets$);
        };
        ListContainerComponent.prototype.getDisplayWidgets = function () {
            return this.store.widgets && this.store.showSidebarWidgets;
        };
        ListContainerComponent.prototype.getDisplay = function (display) {
            var displayType = 'none';
            if (display) {
                displayType = 'block';
            }
            return displayType;
        };
        ListContainerComponent.prototype.getViewContext = function () {
            return this.store.getViewContext();
        };
        return ListContainerComponent;
    }());
    ListContainerComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-list-container',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<!-- Start List View Container Section -->\n\n<div *ngIf=\"(vm$ | async) as vm\" class=\"list-view-container container-fluid pt-2\">\n    <div class=\"row\">\n        <div [ngClass]=\"{ 'col-lg-12': !getDisplayWidgets() }\" class=\"col-lg-9\">\n            <scrm-table [config]=\"tableConfig\"></scrm-table>\n        </div>\n\n        <ng-container *ngIf=\"vm.sidebarWidgetConfig.widgetsEnabled\">\n            <div [style.display]=\"getDisplay(!!(vm.sidebarWidgetConfig.show && vm.sidebarWidgetConfig.widgets))\"\n                 class=\"col-lg-3 list-widget-container pl-0\">\n                <div *ngFor=\"let widget of vm.sidebarWidgetConfig.widgets\" class=\"mb-3\">\n                    <scrm-sidebar-widget [config]=\"widget\"\n                                         [context]=\"getViewContext()\"\n                                         [context$]=\"store.context$\"\n                                         [type]=\"widget.type\">\n                    </scrm-sidebar-widget>\n                </div>\n            </div>\n        </ng-container>\n    </div>\n</div>\n\n<!-- End List View Container Section -->\n",
                    providers: [TableAdapter, MaxColumnsCalculator, ListViewSidebarWidgetAdapter]
                },] }
    ];
    ListContainerComponent.ctorParameters = function () { return [
        { type: ListViewStore },
        { type: TableAdapter },
        { type: MaxColumnsCalculator },
        { type: LanguageStore },
        { type: ListViewSidebarWidgetAdapter }
    ]; };
    ListContainerComponent.propDecorators = {
        module: [{ type: i0.Input }]
    };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var ListContainerModule = /** @class */ (function () {
        function ListContainerModule() {
        }
        return ListContainerModule;
    }());
    ListContainerModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [ListContainerComponent],
                    exports: [ListContainerComponent],
                    imports: [
                        common.CommonModule,
                        TableModule,
                        WidgetPanelModule,
                        i3.AngularSvgIconModule,
                        SidebarWidgetModule
                    ]
                },] }
    ];

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var ListHeaderComponent = /** @class */ (function () {
        function ListHeaderComponent(filterAdapter, listStore, moduleNavigation, recordPanelAdapter) {
            this.filterAdapter = filterAdapter;
            this.listStore = listStore;
            this.moduleNavigation = moduleNavigation;
            this.recordPanelAdapter = recordPanelAdapter;
            this.displayResponsiveTable = false;
            this.actionPanel = '';
            this.subs = [];
        }
        Object.defineProperty(ListHeaderComponent.prototype, "moduleTitle", {
            get: function () {
                var module = this.listStore.vm.appData.module;
                var appListStrings = this.listStore.vm.appData.language.appListStrings;
                return this.moduleNavigation.getModuleLabel(module, appListStrings);
            },
            enumerable: false,
            configurable: true
        });
        ListHeaderComponent.prototype.ngOnInit = function () {
            var _this = this;
            this.listStore.actionPanel$.subscribe(function (actionPanel) {
                _this.actionPanel = actionPanel;
                if (_this.actionPanel === 'recordPanel') {
                    _this.recordPanelConfig = _this.recordPanelAdapter.getConfig();
                }
                else {
                    _this.recordPanelConfig = null;
                }
            });
        };
        ListHeaderComponent.prototype.ngOnDestroy = function () {
            this.subs.forEach(function (sub) { return sub.unsubscribe(); });
            this.recordPanelConfig = null;
        };
        return ListHeaderComponent;
    }());
    ListHeaderComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-list-header',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<ng-container>\n    <div class=\"list-view-header\">\n        <ng-container *ngIf=\"displayResponsiveTable\">\n            <div class=\"d-flex flex-nowrap\">\n                <div class=\"row\">\n                    <div class=\"col\">\n                        <div class=\"order-3\">\n                            <scrm-action-menu></scrm-action-menu>\n                        </div>\n                    </div>\n                    <div class=\"w-100\"></div>\n                    <div class=\"col\">\n                        <div class=\"order-2\">\n                            <scrm-module-title class=\"list-view-title\" [title]=\"moduleTitle\">\n                            </scrm-module-title>\n                        </div>\n                    </div>\n                    <div class=\"w-100\"></div>\n                    <div class=\"col\">\n                        <div class=\"order-1\">\n                            <scrm-settings-menu></scrm-settings-menu>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </ng-container>\n        <ng-template [ngIf]=\"!displayResponsiveTable\">\n            <div class=\"row mr-0 align-items-center\">\n                <div class=\"col-md-4\">\n                    <scrm-module-title class=\"list-view-title\" [title]=\"moduleTitle\"></scrm-module-title>\n                </div>\n                <div class=\"col-md-8\">\n                    <div class=\"row mr-0 ml-1\">\n                        <div class=\"w-100\">\n                            <scrm-action-menu></scrm-action-menu>\n                        </div>\n                        <div class=\"w-100\">\n                            <scrm-settings-menu></scrm-settings-menu>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"list-view-hr-container\">\n                <hr class=\"list-view-hr\">\n            </div>\n            <div *ngIf=\"actionPanel === 'filters'\" class=\"container-fluid pt-2 small-font\">\n                <div class=\"row\">\n                    <div class=\"col\">\n                        <scrm-list-filter [config]=\"filterAdapter.getConfig()\"></scrm-list-filter>\n                    </div>\n                </div>\n            </div>\n            <div *ngIf=\"actionPanel === 'recordPanel' && recordPanelConfig\" class=\"container-fluid pt-2 small-font\">\n                <div class=\"row\">\n                    <div class=\"col\">\n                        <scrm-record-panel [config]=\"recordPanelConfig\"></scrm-record-panel>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n    </div>\n</ng-container>\n",
                    providers: [FilterAdapter, RecordPanelAdapter]
                },] }
    ];
    ListHeaderComponent.ctorParameters = function () { return [
        { type: FilterAdapter },
        { type: ListViewStore },
        { type: ModuleNavigation },
        { type: RecordPanelAdapter }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var ListHeaderModule = /** @class */ (function () {
        function ListHeaderModule() {
        }
        return ListHeaderModule;
    }());
    ListHeaderModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [ListHeaderComponent],
                    exports: [ListHeaderComponent],
                    imports: [
                        common.CommonModule,
                        ModuleTitleModule,
                        ActionMenuModule,
                        SettingsMenuModule,
                        i3.AngularSvgIconModule,
                        ListFilterModule,
                        RecordPanelModule
                    ]
                },] }
    ];

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var ListComponent = /** @class */ (function () {
        function ListComponent(appState, listStore) {
            this.appState = appState;
            this.listStore = listStore;
            this.vm$ = null;
        }
        ListComponent.prototype.ngOnInit = function () {
            this.listSub = this.listStore.init(this.appState.getModule()).subscribe();
            this.vm$ = this.listStore.vm$;
        };
        ListComponent.prototype.ngOnDestroy = function () {
            if (this.listSub) {
                this.listSub.unsubscribe();
            }
            this.listStore.destroy();
        };
        return ListComponent;
    }());
    ListComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-list',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<!-- Start List View Section -->\n<div class=\"list-view\" *ngIf=\"(vm$ | async) as vm\">\n    <scrm-list-header></scrm-list-header>\n    <scrm-list-container></scrm-list-container>\n</div>\n<!-- End List View Section -->\n",
                    providers: [ListViewStore]
                },] }
    ];
    ListComponent.ctorParameters = function () { return [
        { type: AppStateStore },
        { type: ListViewStore }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var ListModule = /** @class */ (function () {
        function ListModule() {
        }
        return ListModule;
    }());
    ListModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [ListComponent],
                    exports: [ListComponent],
                    imports: [
                        common.CommonModule,
                        ListHeaderModule,
                        ListContainerModule,
                        FieldModule
                    ],
                },] }
    ];

    var LoginUiComponent = /** @class */ (function () {
        function LoginUiComponent(router, auth, message, systemConfigStore, languageStore, recoverPasswordService) {
            this.router = router;
            this.auth = auth;
            this.message = message;
            this.systemConfigStore = systemConfigStore;
            this.languageStore = languageStore;
            this.recoverPasswordService = recoverPasswordService;
            this.hidden = true;
            this.loading = false;
            this.error = '';
            this.uname = '';
            this.passw = '';
            this.email = '';
            this.cardState = 'front';
            this.systemConfigs$ = this.systemConfigStore.configs$;
            this.appStrings$ = this.languageStore.appStrings$;
            this.vm$ = rxjs.combineLatest([this.systemConfigs$, this.appStrings$]).pipe(operators.map(function (_a) {
                var _b = __read(_a, 2), systemConfigs = _b[0], appStrings = _b[1];
                var showLanguages = false;
                var showForgotPassword = false;
                if (systemConfigs.languages && systemConfigs.languages.items) {
                    showLanguages = Object.keys(systemConfigs.languages.items).length > 1;
                }
                if (systemConfigs.passwordsetting && systemConfigs.passwordsetting.items) {
                    var forgotPasswordProperty = systemConfigs.passwordsetting.items.forgotpasswordON;
                    showForgotPassword = [true, '1', 'true'].includes(forgotPasswordProperty);
                }
                return {
                    systemConfigs: systemConfigs,
                    appStrings: appStrings,
                    showLanguages: showLanguages,
                    showForgotPassword: showForgotPassword
                };
            }));
            this.loading = false;
            this.hidden = false;
        }
        LoginUiComponent.prototype.doLanguageChange = function (language) {
            this.languageStore.changeLanguage(language);
        };
        LoginUiComponent.prototype.doGetCurrentLanguage = function () {
            return this.languageStore.getCurrentLanguage();
        };
        LoginUiComponent.prototype.flipCard = function () {
            if (this.cardState === 'front') {
                this.cardState = 'back';
            }
            else {
                this.cardState = 'front';
            }
        };
        LoginUiComponent.prototype.doLogin = function () {
            this.loading = true;
            this.auth.doLogin(this.uname, this.passw, this.onLoginSuccess.bind(this), this.onLoginError.bind(this));
        };
        LoginUiComponent.prototype.recoverPassword = function () {
            var _this = this;
            this.recoverPasswordService
                .run(this.uname, this.email)
                .subscribe(function (process) {
                _this.message.log('Recover Password Status: ' + process.status);
                var handler = 'addSuccessMessageByKey';
                if (process.status === 'error') {
                    handler = 'addDangerMessageByKey';
                }
                if (process.messages) {
                    process.messages.forEach(function (message) {
                        _this.message[handler](message);
                    });
                }
            }, function () {
                _this.message.log('Recover Password failed');
                _this.message.addDangerMessageByKey('ERR_AJAX_LOAD_FAILURE');
            });
        };
        LoginUiComponent.prototype.onLoginSuccess = function (result) {
            this.loading = false;
            this.message.log('Login success');
            this.message.removeMessages();
            if (result && result.redirect) {
                this.router.navigate([result.redirect]).then();
            }
            else {
                var defaultModule = this.systemConfigStore.getHomePage();
                this.router.navigate(['/' + defaultModule]).then();
            }
            return;
        };
        LoginUiComponent.prototype.onLoginError = function () {
            this.loading = false;
            this.message.log('Login failed');
            this.message.addDangerMessage('Login credentials incorrect, please try again.');
        };
        return LoginUiComponent;
    }());
    LoginUiComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'scrm-login-ui',
                    template: "<! --\n/**\n* SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.\n* Copyright (C) 2021 SalesAgility Ltd.\n*\n* This program is free software; you can redistribute it and/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation with the addition of the following permission added\n* to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK\n* IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE\n* WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program.  If not, see http://www.gnu.org/licenses.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License\n* version 3, these Appropriate Legal Notices must retain the display of the\n* \"Supercharged by SuiteCRM\" logo. If the display of the logos is not reasonably\n* feasible for technical reasons, the Appropriate Legal Notices must display\n* the words \"Supercharged by SuiteCRM\".\n*/\n-->\n<div *ngIf=\"(vm$ | async) as vm\" class=\"login-view d-flex align-items-center\">\n\n    <!-- Start of login form section -->\n\n    <form name=\"login\" class=\"login-form\" #loginForm=\"ngForm\">\n        <div class=\"form-row form-group\">\n            <div class=\"col\">\n                <scrm-logo-ui></scrm-logo-ui>\n            </div>\n        </div>\n        <div class=\"form-row\" *ngIf=\"vm.showLanguages\">\n            <div class=\"col\">\n                <label class=\"\" for=\"languages\">{{vm.appStrings['LBL_LANGUAGE']}}</label>\n            </div>\n            <div class=\"w-100\"></div>\n            <div class=\"col\">\n                <div class=\"inner-addon left-addon\">\n                    <select #languageSelect id=\"languages\"\n                            (change)=\"doLanguageChange(languageSelect.value)\">\n                        <option [value]=\"item.key\"\n                                *ngFor=\"let item of vm.systemConfigs['languages'].items | keyvalue\"\n                                [selected]=\"doGetCurrentLanguage() === item.key\">{{item.value}}</option>\n                    </select>\n                </div>\n            </div>\n        </div>\n\n\n        <div class=\"form-row fade-card\">\n\n            <!-- Card front -->\n            <div class=\"fade-card-front col\"\n                 *ngIf=\"cardState==='front'\"\n                 [@fade]>\n\n                <div class=\"inner-addon left-addon\">\n                    <scrm-image image=\"login_user\"></scrm-image>\n                    <input [(ngModel)]=\"uname\"\n                           type=\"text\"\n                           name=\"username\"\n                           [class.is-invalid]=\"username.invalid && username.touched\"\n                           #username=\"ngModel\"\n                           placeholder=\"{{vm.appStrings['LBL_USER_NAME']}}\"\n                           aria-label=\"Username\"\n                           required>\n                    <div *ngIf=\"username.invalid && username.touched\" class=\"invalid-feedback\">\n                        {{vm.appStrings['ERR_MISSING_REQUIRED_FIELDS']}}\n                    </div>\n                </div>\n\n                <div class=\"inner-addon left-addon\">\n                    <scrm-image image=\"login_password\"></scrm-image>\n                    <input [(ngModel)]=\"passw\"\n                           type=\"password\"\n                           name=\"password\"\n                           [class.is-invalid]=\"password.invalid && password.touched\"\n                           #password=\"ngModel\"\n                           placeholder=\"{{vm.appStrings['LBL_PASSWORD']}}\"\n                           aria-label=\"Password\"\n                           required>\n                    <div *ngIf=\"password.invalid && password.touched\" class=\"invalid-feedback\">\n                        {{vm.appStrings['ERR_MISSING_REQUIRED_FIELDS']}}\n                    </div>\n                </div>\n\n\n                <button id=\"login-button\" class=\"login-button\"\n                        [scrm-button-loading]=\"loading\"\n                        (click)=\"loginForm.control.markAllAsTouched(); loginForm.valid && doLogin()\">\n                    {{vm.appStrings['LBL_LOGIN_BUTTON_LABEL']}}\n                </button>\n                <div class=\"forgotten-password\" *ngIf=\"vm.showForgotPassword\">\n                    <a class=\"forgotten-password-link\" (click)=\"flipCard()\">\n                        {{vm.appStrings['LBL_LOGIN_FORGOT_PASSWORD']}}\n                    </a>\n                </div>\n\n            </div>\n\n            <!-- Card back-->\n            <div class=\"fade-card-back col\"\n                 *ngIf=\"cardState==='back'\"\n                 [@fade]>\n                <div class=\"inner-addon left-addon\">\n                    <scrm-image image=\"login_user\"></scrm-image>\n                    <input [(ngModel)]=\"uname\"\n                           type=\"text\"\n                           name=\"username\"\n                           [class.is-invalid]=\"username.invalid && username.touched\"\n                           #username=\"ngModel\"\n                           placeholder=\"{{vm.appStrings['LBL_USER_NAME']}}\"\n                           aria-label=\"Username\"\n                           required>\n                    <div *ngIf=\"username.invalid && username.touched\" class=\"invalid-feedback\">\n                        {{vm.appStrings['ERR_MISSING_REQUIRED_FIELDS']}}\n                    </div>\n                </div>\n\n                <div class=\"inner-addon left-addon\">\n                    <scrm-image image=\"email\"></scrm-image>\n                    <input [(ngModel)]=\"email\"\n                           type=\"email\"\n                           name=\"email\"\n                           [class.is-invalid]=\"mail.invalid && mail.touched\"\n                           #mail=\"ngModel\"\n                           placeholder=\"{{vm.appStrings['LBL_EMAIL']}}\"\n                           aria-label=\"Email\"\n                           required>\n                    <div *ngIf=\"mail.invalid && mail.touched\" class=\"invalid-feedback\">\n                        {{vm.appStrings['ERR_MISSING_REQUIRED_FIELDS']}}\n                    </div>\n                </div>\n\n                <button class=\"submit-button login-button\"\n                        scrm-button-loading\n                        (click)=\"loginForm.control.markAllAsTouched(); loginForm.valid && recoverPassword()\">\n                    {{vm.appStrings['LBL_GENERATE_PASSWORD_BUTTON_TITLE']}}\n                </button>\n                <div>\n                    <a class=\"back-link forgotten-password-link\" (click)=\"flipCard()\">\n                        {{vm.appStrings['LBL_BACK']}}\n                    </a>\n                </div>\n            </div>\n        </div>\n    </form>\n\n    <!-- End of login form section -->\n\n</div>\n\n<!-- End of login component section -->\n",
                    animations: [
                        animations.trigger('fade', [
                            animations.transition(':enter', animations.useAnimation(ngAnimate.fadeIn, {
                                params: { timing: 0.5, delay: 0 }
                            })),
                        ])
                    ]
                },] }
    ];
    LoginUiComponent.ctorParameters = function () { return [
        { type: i2.Router },
        { type: AuthService },
        { type: MessageService },
        { type: SystemConfigStore },
        { type: LanguageStore },
        { type: RecoverPasswordService }
    ]; };

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var LoginUiRoutes = [
        {
            path: '',
            component: LoginUiComponent
        }
    ];

    /**
     * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
     * Copyright (C) 2021 SalesAgility Ltd.
     *
     * This program is free software; you can redistribute it and/or modify it under
     * the terms of the GNU Affero General Public License version 3 as published by the
     * Free Software Foundation with the addition of the following permission added
     * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
     * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
     * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
     *
     * This program is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
     * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
     * details.
     *
     * You should have received a copy of the GNU Affero General Public License
     * along with this program.  If not, see <http://www.gnu.org/licenses/>.
     *
     * In accordance with Section 7(b) of the GNU Affero General Public License
     * version 3, these Appropriate Legal Notices must retain the display of the
     * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
     * feasible for technical reasons, the Appropriate Legal Notices must display
     * the words "Supercharged by SuiteCRM".
     */
    var LoginUiModule = /** @class */ (function () {
        function LoginUiModule() {
        }
        return LoginUiModule;
    }());
    LoginUiModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [
                        LoginUiComponent
                    ],
                    exports: [
                        LoginUiComponent
                    ],
                    imports: [
                        forms.FormsModule,
                        LogoUiModule,
                        i2.RouterModule.forChild(LoginUiRoutes),
                        common.CommonModule,
                        i3.AngularSvgIconModule,
                        ImageModule,
                        ButtonLoadingUiModule
                    ]
                },] }
    ];

    /*
     * Public API Surface of core
     */

    /**
     * Generated bundle index. Do not edit.
     */

    exports.ActionBarUiComponent = ActionBarUiComponent;
    exports.ActionBarUiModule = ActionBarUiModule;
    exports.ActionGroupMenuComponent = ActionGroupMenuComponent;
    exports.ActionGroupMenuModule = ActionGroupMenuModule;
    exports.ActionMenuComponent = ActionMenuComponent;
    exports.ActionMenuModule = ActionMenuModule;
    exports.ActionNameMapper = ActionNameMapper;
    exports.AppStateStore = AppStateStore;
    exports.AsyncActionHandler = AsyncActionHandler;
    exports.AsyncActionService = AsyncActionService;
    exports.AttributeBuilder = AttributeBuilder;
    exports.AuthGuard = AuthGuard;
    exports.AuthService = AuthService;
    exports.BaseActionManager = BaseActionManager;
    exports.BaseActionsAdapter = BaseActionsAdapter;
    exports.BaseBooleanComponent = BaseBooleanComponent;
    exports.BaseChartComponent = BaseChartComponent;
    exports.BaseChartModule = BaseChartModule;
    exports.BaseComposite = BaseComposite;
    exports.BaseDateTimeComponent = BaseDateTimeComponent;
    exports.BaseEnumComponent = BaseEnumComponent;
    exports.BaseFieldComponent = BaseFieldComponent;
    exports.BaseFieldGridComponent = BaseFieldGridComponent;
    exports.BaseFieldModule = BaseFieldModule;
    exports.BaseFieldRegistry = BaseFieldRegistry;
    exports.BaseGroupedMenuItemComponent = BaseGroupedMenuItemComponent;
    exports.BaseHomeMenuItemComponent = BaseHomeMenuItemComponent;
    exports.BaseLineActionsAdapter = BaseLineActionsAdapter;
    exports.BaseLineItemsComponent = BaseLineItemsComponent;
    exports.BaseMenuItemComponent = BaseMenuItemComponent;
    exports.BaseMenuItemLinkComponent = BaseMenuItemLinkComponent;
    exports.BaseMenuItemsListComponent = BaseMenuItemsListComponent;
    exports.BaseMenuRecentlyViewedComponent = BaseMenuRecentlyViewedComponent;
    exports.BaseMetadataResolver = BaseMetadataResolver;
    exports.BaseMobileGroupedMenuComponent = BaseMobileGroupedMenuComponent;
    exports.BaseMobileMenuComponent = BaseMobileMenuComponent;
    exports.BaseMobileModuleMenuComponent = BaseMobileModuleMenuComponent;
    exports.BaseModuleResolver = BaseModuleResolver;
    exports.BaseMultiEnumComponent = BaseMultiEnumComponent;
    exports.BaseNameComponent = BaseNameComponent;
    exports.BaseNavbarComponent = BaseNavbarComponent;
    exports.BaseNumberComponent = BaseNumberComponent;
    exports.BaseRecordActionsAdapter = BaseRecordActionsAdapter;
    exports.BaseRecordContainerStore = BaseRecordContainerStore;
    exports.BaseRecordResolver = BaseRecordResolver;
    exports.BaseRelateComponent = BaseRelateComponent;
    exports.BaseSaveRecordMapper = BaseSaveRecordMapper;
    exports.BaseWidgetComponent = BaseWidgetComponent;
    exports.BaseWidgetModule = BaseWidgetModule;
    exports.BooleanDetailFieldComponent = BooleanDetailFieldComponent;
    exports.BooleanDetailFieldModule = BooleanDetailFieldModule;
    exports.BooleanEditFieldComponent = BooleanEditFieldComponent;
    exports.BooleanEditFieldModule = BooleanEditFieldModule;
    exports.BooleanFilterFieldComponent = BooleanFilterFieldComponent;
    exports.BooleanFilterFieldModule = BooleanFilterFieldModule;
    exports.BulkActionMenuComponent = BulkActionMenuComponent;
    exports.BulkActionMenuModule = BulkActionMenuModule;
    exports.BulkActionsAdapter = BulkActionsAdapter;
    exports.BulkActionsAdapterFactory = BulkActionsAdapterFactory;
    exports.ButtonComponent = ButtonComponent;
    exports.ButtonGroupComponent = ButtonGroupComponent;
    exports.ButtonGroupModule = ButtonGroupModule;
    exports.ButtonLoadingDirective = ButtonLoadingDirective;
    exports.ButtonLoadingUiModule = ButtonLoadingUiModule;
    exports.ButtonModule = ButtonModule;
    exports.ButtonUtils = ButtonUtils;
    exports.CancelCreateAction = CancelCreateAction;
    exports.CancelRecordPanelAction = CancelRecordPanelAction;
    exports.ChangelogAsyncAction = ChangelogAsyncAction;
    exports.ChartComponent = ChartComponent;
    exports.ChartDataStore = ChartDataStore;
    exports.ChartDataStoreFactory = ChartDataStoreFactory;
    exports.ChartMessageAreaComponent = ChartMessageAreaComponent;
    exports.ChartMessageAreaModule = ChartMessageAreaModule;
    exports.ChartModule = ChartModule;
    exports.ChartRegistry = ChartRegistry;
    exports.ChartSidebarWidgetComponent = ChartSidebarWidgetComponent;
    exports.ChartSidebarWidgetModule = ChartSidebarWidgetModule;
    exports.ClassicModalComponent = ClassicModalComponent;
    exports.ClassicModalModule = ClassicModalModule;
    exports.ClassicViewResolver = ClassicViewResolver;
    exports.ClassicViewUiComponent = ClassicViewUiComponent;
    exports.ClassicViewUiModule = ClassicViewUiModule;
    exports.CloseButtonComponent = CloseButtonComponent;
    exports.CloseButtonModule = CloseButtonModule;
    exports.CollectionGQL = CollectionGQL;
    exports.ColumnChooserComponent = ColumnChooserComponent;
    exports.ColumnChooserModule = ColumnChooserModule;
    exports.CompositeComponent = CompositeComponent;
    exports.CompositeModule = CompositeModule;
    exports.ConfirmationModalService = ConfirmationModalService;
    exports.CreateRecordComponent = CreateRecordComponent;
    exports.CreateRecordModule = CreateRecordModule;
    exports.CreateRelatedLineAction = CreateRelatedLineAction;
    exports.CreateViewStore = CreateViewStore;
    exports.CurrencyDetailFieldComponent = CurrencyDetailFieldComponent;
    exports.CurrencyDetailFieldModule = CurrencyDetailFieldModule;
    exports.CurrencyFormatter = CurrencyFormatter;
    exports.CurrencyService = CurrencyService;
    exports.CurrencyUnitConverter = CurrencyUnitConverter;
    exports.CurrencyValidator = CurrencyValidator;
    exports.DataTypeFormatter = DataTypeFormatter;
    exports.DataTypeSeriesMapper = DataTypeSeriesMapper;
    exports.DataTypeUnitConverter = DataTypeUnitConverter;
    exports.DateAdapter = DateAdapter;
    exports.DateDetailFieldComponent = DateDetailFieldComponent;
    exports.DateDetailFieldModule = DateDetailFieldModule;
    exports.DateEditFieldComponent = DateEditFieldComponent;
    exports.DateEditFieldModule = DateEditFieldModule;
    exports.DateFilterFieldComponent = DateFilterFieldComponent;
    exports.DateFilterFieldModule = DateFilterFieldModule;
    exports.DateFormatter = DateFormatter;
    exports.DateParserFormatter = DateParserFormatter;
    exports.DateTimeDetailFieldComponent = DateTimeDetailFieldComponent;
    exports.DateTimeDetailFieldModule = DateTimeDetailFieldModule;
    exports.DateTimeEditFieldComponent = DateTimeEditFieldComponent;
    exports.DateTimeEditFieldModule = DateTimeEditFieldModule;
    exports.DateTimeFilterFieldComponent = DateTimeFilterFieldComponent;
    exports.DateTimeFilterFieldModule = DateTimeFilterFieldModule;
    exports.DateTimeModel = DateTimeModel;
    exports.DateTimeValidator = DateTimeValidator;
    exports.DateValidator = DateValidator;
    exports.DatetimeFormatter = DatetimeFormatter;
    exports.DisplayTypeAction = DisplayTypeAction;
    exports.DropdownButtonComponent = DropdownButtonComponent;
    exports.DropdownButtonModule = DropdownButtonModule;
    exports.DropdownEnumDetailFieldComponent = DropdownEnumDetailFieldComponent;
    exports.DropdownEnumDetailFieldModule = DropdownEnumDetailFieldModule;
    exports.DropdownEnumEditFieldComponent = DropdownEnumEditFieldComponent;
    exports.DropdownEnumEditFieldModule = DropdownEnumEditFieldModule;
    exports.DropdownSubmenuComponent = DropdownSubmenuComponent;
    exports.DropdownSubmenuModule = DropdownSubmenuModule;
    exports.DuplicateEmailValidator = DuplicateEmailValidator;
    exports.DynamicEnumDetailFieldComponent = DynamicEnumDetailFieldComponent;
    exports.DynamicEnumDetailFieldModule = DynamicEnumDetailFieldModule;
    exports.DynamicEnumEditFieldComponent = DynamicEnumEditFieldComponent;
    exports.DynamicEnumEditFieldModule = DynamicEnumEditFieldModule;
    exports.DynamicFieldComponent = DynamicFieldComponent;
    exports.DynamicFieldModule = DynamicFieldModule;
    exports.DynamicLabelComponent = DynamicLabelComponent;
    exports.DynamicLabelModule = DynamicLabelModule;
    exports.DynamicLabelService = DynamicLabelService;
    exports.EmailDetailFieldsComponent = EmailDetailFieldsComponent;
    exports.EmailDetailFieldsModule = EmailDetailFieldsModule;
    exports.EmailFormatter = EmailFormatter;
    exports.EmailListFieldsComponent = EmailListFieldsComponent;
    exports.EmailListFieldsModule = EmailListFieldsModule;
    exports.EmailPrimarySelectAction = EmailPrimarySelectAction;
    exports.EmailValidator = EmailValidator;
    exports.EntityGQL = EntityGQL;
    exports.EntityMutationGQL = EntityMutationGQL;
    exports.EnumDetailFieldComponent = EnumDetailFieldComponent;
    exports.EnumDetailFieldModule = EnumDetailFieldModule;
    exports.EnumEditFieldComponent = EnumEditFieldComponent;
    exports.EnumEditFieldModule = EnumEditFieldModule;
    exports.ErrorInterceptor = ErrorInterceptor;
    exports.ExportAsyncAction = ExportAsyncAction;
    exports.ExtensionLoader = ExtensionLoader;
    exports.FieldBuilder = FieldBuilder;
    exports.FieldComponent = FieldComponent;
    exports.FieldGridComponent = FieldGridComponent;
    exports.FieldGridModule = FieldGridModule;
    exports.FieldLayoutComponent = FieldLayoutComponent;
    exports.FieldLayoutModule = FieldLayoutModule;
    exports.FieldLogicActionHandler = FieldLogicActionHandler;
    exports.FieldLogicManager = FieldLogicManager;
    exports.FieldManager = FieldManager;
    exports.FieldModule = FieldModule;
    exports.FieldRegistry = FieldRegistry;
    exports.FilterAdapter = FilterAdapter;
    exports.FilterAttributeBuilder = FilterAttributeBuilder;
    exports.FilterFieldBuilder = FilterFieldBuilder;
    exports.FilterListStore = FilterListStore;
    exports.FilterListStoreFactory = FilterListStoreFactory;
    exports.FilterUiComponent = FilterUiComponent;
    exports.FilterUiModule = FilterUiModule;
    exports.FiltersListGQL = FiltersListGQL;
    exports.FloatDetailFieldComponent = FloatDetailFieldComponent;
    exports.FloatDetailFieldModule = FloatDetailFieldModule;
    exports.FloatValidator = FloatValidator;
    exports.FooterUiComponent = FooterUiComponent;
    exports.FooterUiModule = FooterUiModule;
    exports.FormControlUtils = FormControlUtils;
    exports.FormatCurrencyModule = FormatCurrencyModule;
    exports.FormatCurrencyPipe = FormatCurrencyPipe;
    exports.FormatNumberModule = FormatNumberModule;
    exports.FormatNumberPipe = FormatNumberPipe;
    exports.FullNameDetailFieldsComponent = FullNameDetailFieldsComponent;
    exports.FullNameDetailFieldsModule = FullNameDetailFieldsModule;
    exports.FullPageSpinnerComponent = FullPageSpinnerComponent;
    exports.FullPageSpinnerModule = FullPageSpinnerModule;
    exports.GlobalSearch = GlobalSearch;
    exports.GridWidgetComponent = GridWidgetComponent;
    exports.GridWidgetModule = GridWidgetModule;
    exports.GroupFieldBuilder = GroupFieldBuilder;
    exports.GroupFieldComponent = GroupFieldComponent;
    exports.GroupFieldModule = GroupFieldModule;
    exports.GroupedMenuItemComponent = GroupedMenuItemComponent;
    exports.GroupedMenuItemRegistry = GroupedMenuItemRegistry;
    exports.HistorySidebarWidgetComponent = HistorySidebarWidgetComponent;
    exports.HistorySidebarWidgetModule = HistorySidebarWidgetModule;
    exports.HistoryTimelineAdapter = HistoryTimelineAdapter;
    exports.HistoryTimelineAdapterFactory = HistoryTimelineAdapterFactory;
    exports.HistoryTimelineStore = HistoryTimelineStore;
    exports.HistoryTimelineStoreFactory = HistoryTimelineStoreFactory;
    exports.HomeMenuItemComponent = HomeMenuItemComponent;
    exports.HomeMenuItemRegistry = HomeMenuItemRegistry;
    exports.HomeUiComponent = HomeUiComponent;
    exports.HomeUiModule = HomeUiModule;
    exports.HomeUiRoutes = HomeUiRoutes;
    exports.HtmlDetailFieldComponent = HtmlDetailFieldComponent;
    exports.HtmlDetailFieldModule = HtmlDetailFieldModule;
    exports.HtmlSanitizeModule = HtmlSanitizeModule;
    exports.HtmlSanitizePipe = HtmlSanitizePipe;
    exports.IframePageChangeObserver = IframePageChangeObserver;
    exports.IframeResizeHandlerHandler = IframeResizeHandlerHandler;
    exports.ImageComponent = ImageComponent;
    exports.ImageModule = ImageModule;
    exports.InlineLoadingSpinnerComponent = InlineLoadingSpinnerComponent;
    exports.InlineLoadingSpinnerModule = InlineLoadingSpinnerModule;
    exports.InstallAction = InstallAction;
    exports.InstallActionManager = InstallActionManager;
    exports.InstallActionsAdapter = InstallActionsAdapter;
    exports.InstallAuthGuard = InstallAuthGuard;
    exports.InstallContainerComponent = InstallContainerComponent;
    exports.InstallContainerModule = InstallContainerModule;
    exports.InstallContentAdapter = InstallContentAdapter;
    exports.InstallErrorModalComponent = InstallErrorModalComponent;
    exports.InstallErrorModalModule = InstallErrorModalModule;
    exports.InstallHeaderComponent = InstallHeaderComponent;
    exports.InstallHeaderModule = InstallHeaderModule;
    exports.InstallViewActionHandler = InstallViewActionHandler;
    exports.InstallViewComponent = InstallViewComponent;
    exports.InstallViewModule = InstallViewModule;
    exports.InstallViewStore = InstallViewStore;
    exports.IntDetailFieldComponent = IntDetailFieldComponent;
    exports.IntDetailFieldModule = IntDetailFieldModule;
    exports.IntValidator = IntValidator;
    exports.LabelComponent = LabelComponent;
    exports.LabelModule = LabelModule;
    exports.LanguageStore = LanguageStore;
    exports.LineActionActionHandler = LineActionActionHandler;
    exports.LineActionActionManager = LineActionActionManager;
    exports.LineActionMenuComponent = LineActionMenuComponent;
    exports.LineActionModule = LineActionModule;
    exports.LineActionsAdapter = LineActionsAdapter;
    exports.LineChartComponent = LineChartComponent;
    exports.LineChartModule = LineChartModule;
    exports.LineItemBuilder = LineItemBuilder;
    exports.LineItemsComponent = LineItemsComponent;
    exports.LineItemsModule = LineItemsModule;
    exports.LinkModel = LinkModel;
    exports.ListComponent = ListComponent;
    exports.ListContainerComponent = ListContainerComponent;
    exports.ListContainerModule = ListContainerModule;
    exports.ListFilterComponent = ListFilterComponent;
    exports.ListFilterModule = ListFilterModule;
    exports.ListFilterStore = ListFilterStore;
    exports.ListFilterStoreFactory = ListFilterStoreFactory;
    exports.ListGQL = ListGQL;
    exports.ListHeaderComponent = ListHeaderComponent;
    exports.ListHeaderModule = ListHeaderModule;
    exports.ListModule = ListModule;
    exports.ListViewRecordPanelActionAdapterFactory = ListViewRecordPanelActionAdapterFactory;
    exports.ListViewRecordPanelActionHandler = ListViewRecordPanelActionHandler;
    exports.ListViewRecordPanelActionsAdapter = ListViewRecordPanelActionsAdapter;
    exports.ListViewSidebarWidgetAdapter = ListViewSidebarWidgetAdapter;
    exports.ListViewStore = ListViewStore;
    exports.LoadingSpinnerComponent = LoadingSpinnerComponent;
    exports.LoadingSpinnerModule = LoadingSpinnerModule;
    exports.LocalStorageService = LocalStorageService;
    exports.LoginAuthGuard = LoginAuthGuard;
    exports.LoginUiComponent = LoginUiComponent;
    exports.LoginUiModule = LoginUiModule;
    exports.LoginUiRoutes = LoginUiRoutes;
    exports.LogoAbstract = LogoAbstract;
    exports.LogoUiComponent = LogoUiComponent;
    exports.LogoUiModule = LogoUiModule;
    exports.LogoutUiComponent = LogoutUiComponent;
    exports.LogoutUiModule = LogoutUiModule;
    exports.MaxColumnsCalculator = MaxColumnsCalculator;
    exports.MenuItemComponent = MenuItemComponent;
    exports.MenuItemLinkComponent = MenuItemLinkComponent;
    exports.MenuItemLinkRegistry = MenuItemLinkRegistry;
    exports.MenuItemRegistry = MenuItemRegistry;
    exports.MenuItemsListComponent = MenuItemsListComponent;
    exports.MenuItemsListRegistry = MenuItemsListRegistry;
    exports.MenuRecentlyViewedComponent = MenuRecentlyViewedComponent;
    exports.MenuRecentlyViewedRegistry = MenuRecentlyViewedRegistry;
    exports.MessageModalComponent = MessageModalComponent;
    exports.MessageModalModule = MessageModalModule;
    exports.MessageService = MessageService;
    exports.MessageUiComponent = MessageUiComponent;
    exports.MessageUiModule = MessageUiModule;
    exports.MetadataStore = MetadataStore;
    exports.MinimiseButtonComponent = MinimiseButtonComponent;
    exports.MinimiseButtonModule = MinimiseButtonModule;
    exports.MobileGroupedMenuComponent = MobileGroupedMenuComponent;
    exports.MobileGroupedMenuRegistry = MobileGroupedMenuRegistry;
    exports.MobileMenuComponent = MobileMenuComponent;
    exports.MobileMenuRegistry = MobileMenuRegistry;
    exports.MobileModuleMenuComponent = MobileModuleMenuComponent;
    exports.MobileModuleMenuRegistry = MobileModuleMenuRegistry;
    exports.ModalButtonGroupComponent = ModalButtonGroupComponent;
    exports.ModalButtonGroupModule = ModalButtonGroupModule;
    exports.ModalComponent = ModalComponent;
    exports.ModalModule = ModalModule;
    exports.ModalRecordFilterAdapter = ModalRecordFilterAdapter;
    exports.ModalRecordListTableAdapter = ModalRecordListTableAdapter;
    exports.ModuleNameMapper = ModuleNameMapper;
    exports.ModuleNavigation = ModuleNavigation;
    exports.ModuleTitleComponent = ModuleTitleComponent;
    exports.ModuleTitleModule = ModuleTitleModule;
    exports.MultiEnumDetailFieldComponent = MultiEnumDetailFieldComponent;
    exports.MultiEnumDetailFieldModule = MultiEnumDetailFieldModule;
    exports.MultiEnumEditFieldComponent = MultiEnumEditFieldComponent;
    exports.MultiEnumEditFieldModule = MultiEnumEditFieldModule;
    exports.MultiEnumFilterFieldComponent = MultiEnumFilterFieldComponent;
    exports.MultiEnumFilterFieldModule = MultiEnumFilterFieldModule;
    exports.NavbarAbstract = NavbarAbstract;
    exports.NavbarRegistry = NavbarRegistry;
    exports.NavbarUiComponent = NavbarUiComponent;
    exports.NavbarUiModule = NavbarUiModule;
    exports.NavigationStore = NavigationStore;
    exports.NoopAsyncAction = NoopAsyncAction;
    exports.NumberFormatter = NumberFormatter;
    exports.PaginationComponent = PaginationComponent;
    exports.PaginationModule = PaginationModule;
    exports.PanelComponent = PanelComponent;
    exports.PanelModule = PanelModule;
    exports.PasswordDetailFieldComponent = PasswordDetailFieldComponent;
    exports.PasswordDetailFieldModule = PasswordDetailFieldModule;
    exports.PasswordEditFieldComponent = PasswordEditFieldComponent;
    exports.PasswordEditFieldModule = PasswordEditFieldModule;
    exports.PhoneDetailFieldComponent = PhoneDetailFieldComponent;
    exports.PhoneDetailFieldModule = PhoneDetailFieldModule;
    exports.PhoneFormatter = PhoneFormatter;
    exports.PhoneValidator = PhoneValidator;
    exports.PieGridChartComponent = PieGridChartComponent;
    exports.PieGridChartModule = PieGridChartModule;
    exports.PrimaryEmailValidator = PrimaryEmailValidator;
    exports.ProcessService = ProcessService;
    exports.RadioEnumDetailFieldComponent = RadioEnumDetailFieldComponent;
    exports.RadioEnumDetailFieldModule = RadioEnumDetailFieldModule;
    exports.RadioEnumEditFieldComponent = RadioEnumEditFieldComponent;
    exports.RadioEnumEditFieldModule = RadioEnumEditFieldModule;
    exports.RangeValidator = RangeValidator;
    exports.RecordActionHandler = RecordActionHandler;
    exports.RecordActionManager = RecordActionManager;
    exports.RecordActionsAdapter = RecordActionsAdapter;
    exports.RecordCancelAction = RecordCancelAction;
    exports.RecordComponent = RecordComponent;
    exports.RecordContainerComponent = RecordContainerComponent;
    exports.RecordContainerModule = RecordContainerModule;
    exports.RecordContentAdapter = RecordContentAdapter;
    exports.RecordContentComponent = RecordContentComponent;
    exports.RecordContentModule = RecordContentModule;
    exports.RecordCreateAction = RecordCreateAction;
    exports.RecordEditAction = RecordEditAction;
    exports.RecordFetchGQL = RecordFetchGQL;
    exports.RecordFlexboxComponent = RecordFlexboxComponent;
    exports.RecordFlexboxModule = RecordFlexboxModule;
    exports.RecordGridComponent = RecordGridComponent;
    exports.RecordGridModule = RecordGridModule;
    exports.RecordHeaderComponent = RecordHeaderComponent;
    exports.RecordHeaderModule = RecordHeaderModule;
    exports.RecordListModalComponent = RecordListModalComponent;
    exports.RecordListModalModule = RecordListModalModule;
    exports.RecordListModalStore = RecordListModalStore;
    exports.RecordListModalStoreFactory = RecordListModalStoreFactory;
    exports.RecordListStore = RecordListStore;
    exports.RecordListStoreFactory = RecordListStoreFactory;
    exports.RecordManager = RecordManager;
    exports.RecordModule = RecordModule;
    exports.RecordPanelActionHandler = RecordPanelActionHandler;
    exports.RecordPanelActionManager = RecordPanelActionManager;
    exports.RecordPanelAdapter = RecordPanelAdapter;
    exports.RecordPanelComponent = RecordPanelComponent;
    exports.RecordPanelModule = RecordPanelModule;
    exports.RecordPanelStore = RecordPanelStore;
    exports.RecordPanelStoreFactory = RecordPanelStoreFactory;
    exports.RecordSaveAction = RecordSaveAction;
    exports.RecordSaveGQL = RecordSaveGQL;
    exports.RecordSaveNewAction = RecordSaveNewAction;
    exports.RecordStore = RecordStore;
    exports.RecordStoreFactory = RecordStoreFactory;
    exports.RecordStoreList = RecordStoreList;
    exports.RecordThreadComponent = RecordThreadComponent;
    exports.RecordThreadItemComponent = RecordThreadItemComponent;
    exports.RecordThreadItemModule = RecordThreadItemModule;
    exports.RecordThreadItemStore = RecordThreadItemStore;
    exports.RecordThreadItemStoreFactory = RecordThreadItemStoreFactory;
    exports.RecordThreadModule = RecordThreadModule;
    exports.RecordThreadSidebarWidgetComponent = RecordThreadSidebarWidgetComponent;
    exports.RecordThreadSidebarWidgetModule = RecordThreadSidebarWidgetModule;
    exports.RecordThreadStore = RecordThreadStore;
    exports.RecordThreadStoreFactory = RecordThreadStoreFactory;
    exports.RecordToggleWidgetsAction = RecordToggleWidgetsAction;
    exports.RecordViewStore = RecordViewStore;
    exports.RecoverPasswordService = RecoverPasswordService;
    exports.RedirectAsyncAction = RedirectAsyncAction;
    exports.RelateDetailFieldComponent = RelateDetailFieldComponent;
    exports.RelateDetailFieldsModule = RelateDetailFieldsModule;
    exports.RelateEditFieldComponent = RelateEditFieldComponent;
    exports.RelateEditFieldModule = RelateEditFieldModule;
    exports.RelateFilterFieldComponent = RelateFilterFieldComponent;
    exports.RelateFilterFieldModule = RelateFilterFieldModule;
    exports.RelateService = RelateService;
    exports.RequiredAction = RequiredAction;
    exports.RequiredValidator = RequiredValidator;
    exports.RouteConverter = RouteConverter;
    exports.RunBulkActionRecordPanelAction = RunBulkActionRecordPanelAction;
    exports.SaveFilterStoreFactory = SaveFilterStoreFactory;
    exports.SavedFilterActionAdapterFactory = SavedFilterActionAdapterFactory;
    exports.SavedFilterActionHandler = SavedFilterActionHandler;
    exports.SavedFilterActionManager = SavedFilterActionManager;
    exports.SavedFilterActionsAdapter = SavedFilterActionsAdapter;
    exports.SavedFilterDeleteAction = SavedFilterDeleteAction;
    exports.SavedFilterRecordStore = SavedFilterRecordStore;
    exports.SavedFilterRecordStoreFactory = SavedFilterRecordStoreFactory;
    exports.SavedFilterSaveAction = SavedFilterSaveAction;
    exports.SavedFilterSaveGQL = SavedFilterSaveGQL;
    exports.SavedFilterStore = SavedFilterStore;
    exports.SavedSearchRecordMapper = SavedSearchRecordMapper;
    exports.ScreenSizeObserverService = ScreenSizeObserverService;
    exports.SelectModalService = SelectModalService;
    exports.SeriesMapper = SeriesMapper;
    exports.SeriesStatisticsStore = SeriesStatisticsStore;
    exports.SeriesStatisticsStoreFactory = SeriesStatisticsStoreFactory;
    exports.SeriesTraverser = SeriesTraverser;
    exports.SettingsMenuComponent = SettingsMenuComponent;
    exports.SettingsMenuModule = SettingsMenuModule;
    exports.SidebarWidgetAdapter = SidebarWidgetAdapter;
    exports.SidebarWidgetComponent = SidebarWidgetComponent;
    exports.SidebarWidgetModule = SidebarWidgetModule;
    exports.SidebarWidgetRegistry = SidebarWidgetRegistry;
    exports.SingleValueStatisticsStore = SingleValueStatisticsStore;
    exports.SingleValueStatisticsStoreFactory = SingleValueStatisticsStoreFactory;
    exports.SortButtonComponent = SortButtonComponent;
    exports.SortButtonModule = SortButtonModule;
    exports.StandardFieldRegistry = StandardFieldRegistry;
    exports.StateManager = StateManager;
    exports.StatisticsBatch = StatisticsBatch;
    exports.StatisticsFetchGQL = StatisticsFetchGQL;
    exports.StatisticsSidebarWidgetComponent = StatisticsSidebarWidgetComponent;
    exports.StatisticsSidebarWidgetModule = StatisticsSidebarWidgetModule;
    exports.StatisticsStore = StatisticsStore;
    exports.StatisticsStoreFactory = StatisticsStoreFactory;
    exports.StatisticsTopWidgetComponent = StatisticsTopWidgetComponent;
    exports.StatisticsTopWidgetModule = StatisticsTopWidgetModule;
    exports.StatusBarComponent = StatusBarComponent;
    exports.StatusBarModule = StatusBarModule;
    exports.SubpanelActionHandler = SubpanelActionHandler;
    exports.SubpanelActionManager = SubpanelActionManager;
    exports.SubpanelComponent = SubpanelComponent;
    exports.SubpanelContainerComponent = SubpanelContainerComponent;
    exports.SubpanelContainerModule = SubpanelContainerModule;
    exports.SubpanelCreateAction = SubpanelCreateAction;
    exports.SubpanelLineActionHandler = SubpanelLineActionHandler;
    exports.SubpanelLineActionManager = SubpanelLineActionManager;
    exports.SubpanelLineActionsAdapter = SubpanelLineActionsAdapter;
    exports.SubpanelLineActionsAdapterFactory = SubpanelLineActionsAdapterFactory;
    exports.SubpanelModule = SubpanelModule;
    exports.SubpanelSelectAction = SubpanelSelectAction;
    exports.SubpanelStore = SubpanelStore;
    exports.SubpanelStoreFactory = SubpanelStoreFactory;
    exports.SubpanelTableAdapter = SubpanelTableAdapter;
    exports.SubpanelTableAdapterFactory = SubpanelTableAdapterFactory;
    exports.SystemConfigStore = SystemConfigStore;
    exports.TableAdapter = TableAdapter;
    exports.TableBodyComponent = TableBodyComponent;
    exports.TableBodyModule = TableBodyModule;
    exports.TableComponent = TableComponent;
    exports.TableFooterComponent = TableFooterComponent;
    exports.TableFooterModule = TableFooterModule;
    exports.TableHeaderComponent = TableHeaderComponent;
    exports.TableHeaderModule = TableHeaderModule;
    exports.TableModule = TableModule;
    exports.TextDetailFieldComponent = TextDetailFieldComponent;
    exports.TextDetailFieldModule = TextDetailFieldModule;
    exports.TextEditFieldComponent = TextEditFieldComponent;
    exports.TextEditFieldModule = TextEditFieldModule;
    exports.ThemeImagesStore = ThemeImagesStore;
    exports.TopWidgetAdapter = TopWidgetAdapter;
    exports.TopWidgetComponent = TopWidgetComponent;
    exports.TopWidgetModule = TopWidgetModule;
    exports.UpdateBaseCurrencyAction = UpdateBaseCurrencyAction;
    exports.UpdateCurrencyAction = UpdateCurrencyAction;
    exports.UrlDetailFieldComponent = UrlDetailFieldComponent;
    exports.UrlDetailFieldModule = UrlDetailFieldModule;
    exports.UserActionMenuUiComponent = UserActionMenuUiComponent;
    exports.UserActionMenuUiModule = UserActionMenuUiModule;
    exports.UserPreferenceStore = UserPreferenceStore;
    exports.UserService = UserService;
    exports.ValidationManager = ValidationManager;
    exports.VarcharDetailFieldComponent = VarcharDetailFieldComponent;
    exports.VarcharDetailFieldModule = VarcharDetailFieldModule;
    exports.VarcharEditFieldComponent = VarcharEditFieldComponent;
    exports.VarcharEditFieldModule = VarcharEditFieldModule;
    exports.VarcharFilterFieldComponent = VarcharFilterFieldComponent;
    exports.VarcharFilterFieldModule = VarcharFilterFieldModule;
    exports.VerticalBarChartComponent = VerticalBarChartComponent;
    exports.VerticalBarChartModule = VerticalBarChartModule;
    exports.ViewStore = ViewStore;
    exports.WidgetPanelComponent = WidgetPanelComponent;
    exports.WidgetPanelModule = WidgetPanelModule;
    exports.alertTypes = alertTypes;
    exports.baseFieldComponents = baseFieldComponents;
    exports.baseFieldModules = baseFieldModules;
    exports.baseViewFieldsMap = baseViewFieldsMap;
    exports.booleanRequiredValidator = booleanRequiredValidator;
    exports.chartModules = chartModules;
    exports.chartTypeMap = chartTypeMap;
    exports.componentTypeMap = componentTypeMap;
    exports.currencyValidator = currencyValidator;
    exports.dateTimeValidator = dateTimeValidator;
    exports.dateValidator = dateValidator;
    exports.duplicateEmailValidator = duplicateEmailValidator;
    exports.emailValidator = emailValidator;
    exports.fieldComponents = fieldComponents;
    exports.fieldModules = fieldModules;
    exports.floatValidator = floatValidator;
    exports.intValidator = intValidator;
    exports.maxValidator = maxValidator;
    exports.minValidator = minValidator;
    exports.phoneValidator = phoneValidator;
    exports.primaryEmailValidator = primaryEmailValidator;
    exports.requiredValidator = requiredValidator;
    exports.sidebarWidgetModules = sidebarWidgetModules;
    exports.topWidgetComponentTypeMap = topWidgetComponentTypeMap;
    exports.topWidgetModules = topWidgetModules;
    exports.viewFieldsMap = viewFieldsMap;
    exports.ɵa = UpdateFlexRelateModuleAction;
    exports.ɵb = AsyncProcessSubpanelAction;
    exports.ɵc = AsyncProcessLineAction;
    exports.ɵd = AsyncProcessSubpanelLineAction;
    exports.ɵe = AsyncProcessRecordAction;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=core.umd.js.map
