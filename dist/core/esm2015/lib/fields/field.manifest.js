/**
 * SuiteCRM is a customer relationship management program developed by SalesAgility Ltd.
 * Copyright (C) 2021 SalesAgility Ltd.
 *
 * This program is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Affero General Public License version 3 as published by the
 * Free Software Foundation with the addition of the following permission added
 * to Section 15 as permitted in Section 7(a): FOR ANY PART OF THE COVERED WORK
 * IN WHICH THE COPYRIGHT IS OWNED BY SALESAGILITY, SALESAGILITY DISCLAIMS THE
 * WARRANTY OF NON INFRINGEMENT OF THIRD PARTY RIGHTS.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
 * details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 * In accordance with Section 7(b) of the GNU Affero General Public License
 * version 3, these Appropriate Legal Notices must retain the display of the
 * "Supercharged by SuiteCRM" logo. If the display of the logos is not reasonably
 * feasible for technical reasons, the Appropriate Legal Notices must display
 * the words "Supercharged by SuiteCRM".
 */
import { GroupFieldModule } from './group-field/group-field.module';
import { baseFieldComponents, baseFieldModules, baseViewFieldsMap } from './base-fields.manifest';
import { GroupFieldComponent } from './group-field/group-field.component';
import { CompositeComponent } from './composite/composite.component';
import { CompositeModule } from './composite/composite.module';
export const fieldModules = [
    ...baseFieldModules,
    GroupFieldModule,
    CompositeModule
];
export const fieldComponents = [
    ...baseFieldComponents,
    GroupFieldComponent,
    CompositeComponent
];
export const viewFieldsMap = Object.assign(Object.assign({}, baseViewFieldsMap), { 'grouped-field.list': GroupFieldComponent, 'grouped-field.detail': GroupFieldComponent, 'grouped-field.edit': GroupFieldComponent, 'grouped-field.filter': GroupFieldComponent, 'composite.list': CompositeComponent, 'composite.detail': CompositeComponent, 'composite.edit': CompositeComponent, 'composite.filter': CompositeComponent });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmllbGQubWFuaWZlc3QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9jb3JlL2FwcC9jb3JlL3NyYy9saWIvZmllbGRzL2ZpZWxkLm1hbmlmZXN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7R0F3Qkc7QUFFSCxPQUFPLEVBQUMsZ0JBQWdCLEVBQUMsTUFBTSxrQ0FBa0MsQ0FBQztBQUNsRSxPQUFPLEVBQUMsbUJBQW1CLEVBQUUsZ0JBQWdCLEVBQUUsaUJBQWlCLEVBQUMsTUFBTSx3QkFBd0IsQ0FBQztBQUNoRyxPQUFPLEVBQUMsbUJBQW1CLEVBQUMsTUFBTSxxQ0FBcUMsQ0FBQztBQUV4RSxPQUFPLEVBQUMsa0JBQWtCLEVBQUMsTUFBTSxpQ0FBaUMsQ0FBQztBQUNuRSxPQUFPLEVBQUMsZUFBZSxFQUFDLE1BQU0sOEJBQThCLENBQUM7QUFFN0QsTUFBTSxDQUFDLE1BQU0sWUFBWSxHQUFHO0lBQ3hCLEdBQUcsZ0JBQWdCO0lBQ25CLGdCQUFnQjtJQUNoQixlQUFlO0NBQ2xCLENBQUM7QUFDRixNQUFNLENBQUMsTUFBTSxlQUFlLEdBQUc7SUFDM0IsR0FBRyxtQkFBbUI7SUFDdEIsbUJBQW1CO0lBQ25CLGtCQUFrQjtDQUNyQixDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sYUFBYSxtQ0FDbkIsaUJBQWlCLEtBQ3BCLG9CQUFvQixFQUFFLG1CQUFtQixFQUN6QyxzQkFBc0IsRUFBRSxtQkFBbUIsRUFDM0Msb0JBQW9CLEVBQUUsbUJBQW1CLEVBQ3pDLHNCQUFzQixFQUFFLG1CQUFtQixFQUMzQyxnQkFBZ0IsRUFBRSxrQkFBa0IsRUFDcEMsa0JBQWtCLEVBQUUsa0JBQWtCLEVBQ3RDLGdCQUFnQixFQUFFLGtCQUFrQixFQUNwQyxrQkFBa0IsRUFBRSxrQkFBa0IsR0FDekMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogU3VpdGVDUk0gaXMgYSBjdXN0b21lciByZWxhdGlvbnNoaXAgbWFuYWdlbWVudCBwcm9ncmFtIGRldmVsb3BlZCBieSBTYWxlc0FnaWxpdHkgTHRkLlxuICogQ29weXJpZ2h0IChDKSAyMDIxIFNhbGVzQWdpbGl0eSBMdGQuXG4gKlxuICogVGhpcyBwcm9ncmFtIGlzIGZyZWUgc29mdHdhcmU7IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnkgaXQgdW5kZXJcbiAqIHRoZSB0ZXJtcyBvZiB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIHZlcnNpb24gMyBhcyBwdWJsaXNoZWQgYnkgdGhlXG4gKiBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24gd2l0aCB0aGUgYWRkaXRpb24gb2YgdGhlIGZvbGxvd2luZyBwZXJtaXNzaW9uIGFkZGVkXG4gKiB0byBTZWN0aW9uIDE1IGFzIHBlcm1pdHRlZCBpbiBTZWN0aW9uIDcoYSk6IEZPUiBBTlkgUEFSVCBPRiBUSEUgQ09WRVJFRCBXT1JLXG4gKiBJTiBXSElDSCBUSEUgQ09QWVJJR0hUIElTIE9XTkVEIEJZIFNBTEVTQUdJTElUWSwgU0FMRVNBR0lMSVRZIERJU0NMQUlNUyBUSEVcbiAqIFdBUlJBTlRZIE9GIE5PTiBJTkZSSU5HRU1FTlQgT0YgVEhJUkQgUEFSVFkgUklHSFRTLlxuICpcbiAqIFRoaXMgcHJvZ3JhbSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLCBidXQgV0lUSE9VVFxuICogQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2YgTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1NcbiAqIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gU2VlIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmVcbiAqIGRldGFpbHMuXG4gKlxuICogWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG4gKiBhbG9uZyB3aXRoIHRoaXMgcHJvZ3JhbS4gIElmIG5vdCwgc2VlIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi5cbiAqXG4gKiBJbiBhY2NvcmRhbmNlIHdpdGggU2VjdGlvbiA3KGIpIG9mIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2VcbiAqIHZlcnNpb24gMywgdGhlc2UgQXBwcm9wcmlhdGUgTGVnYWwgTm90aWNlcyBtdXN0IHJldGFpbiB0aGUgZGlzcGxheSBvZiB0aGVcbiAqIFwiU3VwZXJjaGFyZ2VkIGJ5IFN1aXRlQ1JNXCIgbG9nby4gSWYgdGhlIGRpc3BsYXkgb2YgdGhlIGxvZ29zIGlzIG5vdCByZWFzb25hYmx5XG4gKiBmZWFzaWJsZSBmb3IgdGVjaG5pY2FsIHJlYXNvbnMsIHRoZSBBcHByb3ByaWF0ZSBMZWdhbCBOb3RpY2VzIG11c3QgZGlzcGxheVxuICogdGhlIHdvcmRzIFwiU3VwZXJjaGFyZ2VkIGJ5IFN1aXRlQ1JNXCIuXG4gKi9cblxuaW1wb3J0IHtHcm91cEZpZWxkTW9kdWxlfSBmcm9tICcuL2dyb3VwLWZpZWxkL2dyb3VwLWZpZWxkLm1vZHVsZSc7XG5pbXBvcnQge2Jhc2VGaWVsZENvbXBvbmVudHMsIGJhc2VGaWVsZE1vZHVsZXMsIGJhc2VWaWV3RmllbGRzTWFwfSBmcm9tICcuL2Jhc2UtZmllbGRzLm1hbmlmZXN0JztcbmltcG9ydCB7R3JvdXBGaWVsZENvbXBvbmVudH0gZnJvbSAnLi9ncm91cC1maWVsZC9ncm91cC1maWVsZC5jb21wb25lbnQnO1xuaW1wb3J0IHtGaWVsZENvbXBvbmVudE1hcH0gZnJvbSAnLi9maWVsZC5tb2RlbCc7XG5pbXBvcnQge0NvbXBvc2l0ZUNvbXBvbmVudH0gZnJvbSAnLi9jb21wb3NpdGUvY29tcG9zaXRlLmNvbXBvbmVudCc7XG5pbXBvcnQge0NvbXBvc2l0ZU1vZHVsZX0gZnJvbSAnLi9jb21wb3NpdGUvY29tcG9zaXRlLm1vZHVsZSc7XG5cbmV4cG9ydCBjb25zdCBmaWVsZE1vZHVsZXMgPSBbXG4gICAgLi4uYmFzZUZpZWxkTW9kdWxlcyxcbiAgICBHcm91cEZpZWxkTW9kdWxlLFxuICAgIENvbXBvc2l0ZU1vZHVsZVxuXTtcbmV4cG9ydCBjb25zdCBmaWVsZENvbXBvbmVudHMgPSBbXG4gICAgLi4uYmFzZUZpZWxkQ29tcG9uZW50cyxcbiAgICBHcm91cEZpZWxkQ29tcG9uZW50LFxuICAgIENvbXBvc2l0ZUNvbXBvbmVudFxuXTtcblxuZXhwb3J0IGNvbnN0IHZpZXdGaWVsZHNNYXA6IEZpZWxkQ29tcG9uZW50TWFwID0ge1xuICAgIC4uLmJhc2VWaWV3RmllbGRzTWFwLFxuICAgICdncm91cGVkLWZpZWxkLmxpc3QnOiBHcm91cEZpZWxkQ29tcG9uZW50LFxuICAgICdncm91cGVkLWZpZWxkLmRldGFpbCc6IEdyb3VwRmllbGRDb21wb25lbnQsXG4gICAgJ2dyb3VwZWQtZmllbGQuZWRpdCc6IEdyb3VwRmllbGRDb21wb25lbnQsXG4gICAgJ2dyb3VwZWQtZmllbGQuZmlsdGVyJzogR3JvdXBGaWVsZENvbXBvbmVudCxcbiAgICAnY29tcG9zaXRlLmxpc3QnOiBDb21wb3NpdGVDb21wb25lbnQsXG4gICAgJ2NvbXBvc2l0ZS5kZXRhaWwnOiBDb21wb3NpdGVDb21wb25lbnQsXG4gICAgJ2NvbXBvc2l0ZS5lZGl0JzogQ29tcG9zaXRlQ29tcG9uZW50LFxuICAgICdjb21wb3NpdGUuZmlsdGVyJzogQ29tcG9zaXRlQ29tcG9uZW50LFxufTtcbiJdfQ==